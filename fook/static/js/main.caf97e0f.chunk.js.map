{"version":3,"sources":["theme.js","images/fook_logo.jpeg","utils/promisify.js","redux/slices/coineusSlice.js","images/avax_logo.png","images/usdc_logo.png","views/HomePage.js","redux/store.js","utils/fuse_price.js","Coineus.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","coineusInfo","balance","usdc_balance","prices","fuse","cns","fusd","USDCAVAXpair","FOOKAVAXpair","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","updateWalletBalance","updateWalletUSDCBalance","resetWallet","updatePrices","price","actions","HomePage","dispatch","useDispatch","useSelector","coineus","CoineusContractAddress","useState","pending","setPending","useEffect","getUserInfo","Web3","eth","getBalance","then","resp","contract","Contract","coineus_abi","usdc_contract","methods","balanceOf","getAccountDividendsInfo","console","log","info","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","catch","Container","maxWidth","Toolbar","Grid","container","spacing","item","xs","Typography","Paper","style","variant","toLocaleString","Button","onClick","window","provider","claim","send","from","once","tx","on","error","receipt","fullWidth","disabled","CircularProgress","size","verticalAlign","marginLeft","List","ListItem","ListItemAvatar","Avatar","src","avax_logo","ListItemText","secondary","avax","inUSD","primaryTypographyProps","fontWeight","textAlign","secondaryTypographyProps","fook_logo","fook","usdc_logo","configureStore","reducer","coineusReducer","getPairPrices","store","getState","usdc_avax","unipair_abi","fook_avax","getReserves","usdc_avax_reserves","fook_avax_reserves","reserve1","reserve0","inAVAX","Coineus","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","display","description","package","WalletConnectProvider","options","bridge","network","rpc","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","changeWeb3Modal","subscribeProvider","getAccounts","accounts","length","parseInt","net","getId","chainId","clearWallet","acc","networkId","currentProvider","close","clearCachedProvider","interval","setInterval","clearInterval","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","to","textDecoration","logo","flexGrow","color","substr","connectWallet","marginTop","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf97e0f.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#6EBF5D'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/fook_logo.3822b487.jpeg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n        coineusInfo: undefined,\n        balance: undefined,\n        usdc_balance: undefined\n    },\n    prices: {\n        fuse: undefined,\n        cns: undefined,\n        fusd: undefined,\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863'\n    }\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        updateWalletBalance(state, action) {\n            state.wallet.balance = action.payload\n        },\n\n        updateWalletUSDCBalance(state, action) {\n            state.wallet.usdc_balance = action.payload\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n        },\n\n        updatePrices(state, action) {\n            state.prices[action.payload.name] = action.payload.price;\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n    updateWalletCoineusInfo,\n    updateWalletBalance,\n    updateWalletUSDCBalance,\n    resetWallet,\n    updatePrices\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/avax_logo.30dfa545.png\";","export default __webpack_public_path__ + \"static/media/usdc_logo.b5121d0d.png\";","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    CircularProgress,\n    Container,\n    Grid, List, ListItem, ListItemAvatar, ListItemText,\n    Paper,\n    Toolbar,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {updateWalletBalance, updateWalletCoineusInfo, updateWalletUSDCBalance} from \"../redux/slices/coineusSlice\";\n\nimport fook_logo from \"../images/fook_logo.jpeg\";\nimport avax_logo from \"../images/avax_logo.png\";\nimport usdc_logo from \"../images/usdc_logo.png\";\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n    const CoineusContractAddress = '0x95923F63dA09B4f7520f7C65a31F318D8228B744';\n\n    const [pending, setPending] = useState(false);\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address])\n\n    const getUserInfo = () => {\n        const web3 = new Web3('https://api.avax.network/ext/bc/C/rpc');\n\n\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletBalance(resp / (10 ** 18)))\n        })\n\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const usdc_contract = new web3.eth.Contract(coineus_abi, '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e');\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            console.log(resp);\n\n            let [\n                balance,\n                info,\n                usdc_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletCoineusInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletUSDCBalance(usdc_balance / (10 ** 6)));\n\n        })\n            .catch(console.log)\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n        <Toolbar/>\n        <Grid container spacing={2}>\n\n            {\n                !wallet.address && <Grid item xs={12}>\n                    <Typography>Connect Wallet to see your details</Typography>\n                </Grid>\n            }\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography\n                                variant=\"h4\">{wallet.coineusInfo?.totalDividends.toLocaleString() || '--'} USDC</Typography>\n                            <Typography variant=\"caption\">Total Dividends All-time</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography\n                                variant=\"h4\">{wallet.coineusInfo?.withdrawableDividends.toLocaleString() || '--'} USDC</Typography>\n                            <Typography variant=\"caption\">Claimable Dividends</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button onClick={claim} variant='contained' fullWidth\n                                    disabled={!wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>Claim</Button>\n                        </Grid>\n                        {\n                            wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 && <Grid item xs={12}>\n                                <Typography>{wallet.coineusInfo?.secondsUntilAutoClaimAvailable} Seconds until claim\n                                    available</Typography>\n                            </Grid>\n                        }\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                {\n                    pending && <><CircularProgress size={20}/><Typography variant='caption' style={{\n                        verticalAlign: 'top',\n                        marginLeft: 10\n                    }}>Transaction Pending</Typography></>\n                }\n            </Grid>\n            <Grid item xs={12}>\n                <List>\n                    <Paper>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src={avax_logo}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary='AVAX'\n                                secondary={`$${prices.avax?.inUSD.toLocaleString() || '--'}`}\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={wallet.balance?.toLocaleString() || '--'}\n                                secondary={`$${wallet.balance ? (prices.avax?.inUSD * wallet.balance).toLocaleString() : '--'}`}\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </List>\n\n                <List>\n                    <Paper>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src={fook_logo}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary='FOOK'\n                                secondary={`$${prices.fook?.inUSD.toLocaleString() || '--'}`}\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={wallet.coineusInfo?.balance.toLocaleString() || '--'}\n                                secondary={`$${wallet.coineusInfo?.balance ? (prices.fook?.inUSD * wallet.coineusInfo?.balance).toLocaleString() : '--'}`}\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </List>\n\n                <List>\n                    <Paper>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src={usdc_logo}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary='USDC'\n                                secondary=\"$1.00\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={wallet.usdc_balance?.toLocaleString() || '--'}\n                                secondary={`$${wallet.usdc_balance ? (1 * wallet.usdc_balance).toLocaleString() : '--'}`}\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </List>\n            </Grid>\n        </Grid>\n    </Container>);\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer\n    }\n})\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices} = _store.coineus;\n\n    const web3 = new Web3('https://api.avax.network/ext/bc/C/rpc');\n\n    const usdc_avax = new web3.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n\n    const calls = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves\n            ] = resp\n\n            store.dispatch(updatePrices({\n                name: 'avax',\n                price: {\n                    inUSD: usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12),\n                    inAVAX: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'usdc',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fook',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * (usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12))\n                }\n            }));\n        });\n}","import {AppBar, Avatar, Button, CssBaseline, Grid, ThemeProvider, Toolbar} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/fook_logo.jpeg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet, fuse} = useSelector(state => state.coineus);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        changeWeb3Modal();\n    }, [])\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return ()=> clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none'}}\n                        >\n                            <Avatar src={logo} height={64} />\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {dispatch(resetWallet()); clearWallet();}}\n                                >0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n            </Router>\n        </ThemeProvider>\n    )\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}