{"version":3,"sources":["theme.js","images/logo.svg","utils/promisify.js","redux/slices/coineusSlice.js","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","views/HomePage.js","redux/store.js","utils/fuse_price.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","info","avax","fuse","bnb","eth","balances","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BRNAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","tokens","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","contract_address","updateBalances","balance","updatePrices","price","updateTotals","total","Object","entries","inUSD","resetWallet","updateTokens","JSON","parse","stringify","actions","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","network","close","wrap","skip","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","baseToken","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","useSelector","coineus","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","Paper","marginBottom","secondaryAction","allTime","pending","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","list","setList","useEffect","tmp","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","variant","sx","fontSize","token","marginRight","COINEUS_ADDRESS","COINEUSONE_ADDRESS","HomePage","dispatch","useDispatch","setPending","stakeOpen","setStakeOpen","cnsoneInfo","setCnsoneInfo","chainTab","setChainTab","getUserInfo","Web3","getBalance","then","resp","contract","Contract","coineus_abi","cnsone_contract","coineusone_abi","fusd_contract","volt_contract","methods","balanceOf","getAccountDividendsInfo","getAccount","cnsone_balance","cnsone_info","fusd_balance","volt_balance","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","burnit_contract","callsAVAX","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","burnit_balance","catch","console","log","web3BSC","callsBSC","web3ETH","okinami_contract","feg_eth_contract","callsETH","okinami_balance","feg_eth_balance","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","paddingBottom","Tabs","onChange","ev","val","Tab","IconButton","disabled","edge","PowerStake","onSubmit","onSuccess","onError","claim","gasPrice","fullWidth","coineusInfo","CoineusOne","toLocaleString","DialogActions","consensus_abi","delegate","setAmount","setAction","deposit","coineus_contract","Box","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","paddingTop","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","getPairPrices","store","getState","fusd_fuse","unipair_abi","cns_fuse","volt_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","volt_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","burnit_avax","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","burnit_avax_reserves","avax_price","inAVAX","brn0","brn1","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","feg_eth","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","oki0","oki1","coineusValidatorAddress","consensusAddress","consensusContract","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setData","connectedContract","setConnectedContract","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","fuse_balance","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","LinearProgress","Math","floor","backgroundColor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","bottom","Alert","elevation","icon","CoineusSales","component","RouterLink","CoineusSaleDetails","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","now","getTime","distance","days","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","avax_balance","RewardsLocker","rewards_abi","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","getRewards","coineus_fund_address","CoineusPortfolio","coineus_fud_locker","hedge_fund_contract","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_hedge_fund_balance","coineus_fund_hedge_fund_dividends","xyplot","BurnSupply","burnt","supply","percent","staked","angle","PI","angle2","burntValue","percentStaked","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","opacity","radius","radius0","colorType","alignItems","Autorenew","Savings","Whatshot","CoineusContractAddress","Stats","totalD","setTotalD","totalStaked","setTotalStaked","totalBurnt","setTotalBurnt","validatorBal","setValidatorBal","pollingInterval","getCoineusInfo","getTotalDividendsDistributed","totalSupply","td","validator_cnsone","Coineus","getDexScreener","tokenList","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd27470d.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    prices: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: '#00FB4D'\n    }\n}));\n\nexport default function PriceScroll() {\n\n    const classes = useStyles();\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                switch(symbol){\n                    case 'USDC':\n                    case 'fUSD':\n                    case 'WAVAX':\n                    case 'CNSONE':\n                        return[contract_address, token_info];\n                    default:\n                        break;\n                }\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n            return a.priceChange < b.priceChange ? 1 : -1\n        })\n\n        setList(tmp);\n\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={token.chain+\"_\"+token.contract_address}>\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}/>\n                                {token.contract_address !== 'native' && <span className={clsx(classes.networkChip, token.chain)}/>}\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                            />\n                        </ListItem>\n                        <Typography\n                            className={getColorClass(token.priceChange)}\n                            variant=\"h5\"\n                            fontWeight={700}\n                            textAlign='right'\n                            style={{\n                                marginRight: 20\n                        }}>{token.priceChange}%</Typography>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport coineusone_abi from '../abis/coineusone_abi.json';\n\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {\n    updateBalances, updateInfo, updateTotals,\n} from \"../redux/slices/coineusSlice\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\n\nconst COINEUS_ADDRESS = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\n\nconst VALIDATOR_ADDRESS = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst FUSE_CONSENSUS_ADDRESS = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet, rpc, tokens} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [cnsoneInfo, setCnsoneInfo] = useState({});\n    const [chainTab, setChainTab] = useState('fuse');\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address]);\n\n    const getUserInfo = () => {\n\n        //FUSE\n        const web3 = new Web3(rpc.fuse);\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const contract = new web3.eth.Contract(coineus_abi, COINEUS_ADDRESS);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n        const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n        const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            cnsone_contract.methods.balanceOf(wallet.address).call,\n            cnsone_contract.methods.getAccount(wallet.address).call,\n            fusd_contract.methods.balanceOf(wallet.address).call,\n            volt_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                balance,\n                info,\n                cnsone_balance,\n                cnsone_info,\n                fusd_balance,\n                volt_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateInfo({\n                chain: 'fuse',\n                contract_address: COINEUS_ADDRESS,\n                info: {\n                    balance,\n                    withdrawableDividends,\n                    totalDividends,\n                    secondsUntilAutoClaimAvailable\n                }\n            }));\n\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: COINEUS_ADDRESS,\n                balance: balance\n            }));\n\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n                balance: fusd_balance / (10 ** 18)\n            }));\n\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//fUSD\n                balance: volt_balance / (10 ** 18)\n            }));\n\n            setCnsoneInfo(cnsone_info);\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: COINEUSONE_ADDRESS,//CNSONE\n                balance: cnsone_balance / (10 ** 18)\n            }));\n\n            dispatch(updateTotals('fuse'));\n\n        })\n\n        //AVAX\n        const web3AVAX = new Web3(rpc.avax);\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n        const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n        const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n        const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(wallet.address).call,\n            fook_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            wavax_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            burnit_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance,\n                fud_balance,\n                fud_info,\n                wavax_balance,\n                hedge_balance,\n                hedge_info,\n                burnit_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateInfo({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                info: {\n                    balance,\n                    withdrawableDividends,\n                    totalDividends,\n                    secondsUntilAutoClaimAvailable\n                }\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n                balance: balance\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n                balance: usdc_balance / (10 ** 6)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n                balance: wavax_balance / (10 ** 18)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n                balance: burnit_balance / (10 ** 9)\n            }))\n\n            // FUD TOKEN\n            withdrawableDividends = fud_info[3];\n            totalDividends = fud_info[4];\n            secondsUntilAutoClaimAvailable = fud_info[7];\n\n            fud_balance = fud_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateInfo({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                info: {\n                    balance,\n                    withdrawableDividends,\n                    totalDividends,\n                    secondsUntilAutoClaimAvailable\n                }\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n                balance: fud_balance\n            }))\n\n            // HEDGE TOKEN\n            withdrawableDividends = hedge_info[3];\n            totalDividends = hedge_info[4];\n            secondsUntilAutoClaimAvailable = hedge_info[7];\n\n            hedge_balance = hedge_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateInfo({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                info: {\n                    balance,\n                    withdrawableDividends,\n                    totalDividends,\n                    secondsUntilAutoClaimAvailable\n                }\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n                balance: hedge_balance\n            }))\n\n            dispatch(updateTotals('avax'));\n\n        })\n            .catch(console.log)\n\n        //BNB\n        const web3BSC = new Web3(rpc.bnb);\n        web3BSC.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n        const callsBSC = [\n            feg_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3BSC, callsBSC).then(resp => {\n            let [\n                balance,\n            ] = resp;\n\n            dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                balance: balance / (10 ** 9)\n            }))\n\n            dispatch(updateTotals('bnb'));\n\n        })\n\n\n        //ETH\n        const web3ETH = new Web3(rpc.eth);\n        web3ETH.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n        const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n        const callsETH = [\n            okinami_contract.methods.balanceOf(wallet.address).call,\n            feg_eth_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3ETH, callsETH).then(resp => {\n            let [\n                okinami_balance,\n                feg_eth_balance,\n            ] = resp;\n\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                balance: okinami_balance / (10 ** 9)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                balance: feg_eth_balance / (10 ** 9)\n            }))\n\n            dispatch(updateTotals('eth'));\n\n        })\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, COINEUS_ADDRESS);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount * 100))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .0000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserInfo();\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserInfo();\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n                            {/*CNS*/}\n                            <TokenListItem\n                                contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                                network=\"fuse\"\n                                name=\"CNS\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[COINEUS_ADDRESS]?.totalDividends,\n                                    pending: wallet.info.fuse?.[COINEUS_ADDRESS]?.withdrawableDividends,\n                                    symbol: 'fUSD'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claim} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[COINEUS_ADDRESS]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*CNSONE*/}\n                            <TokenListItem\n                                contract_address={COINEUSONE_ADDRESS}\n                                network=\"fuse\"\n                                name=\"CNSONE\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                secondaryAction={<CoineusOne onSuccess={getUserInfo}/>}\n                                cnsDetails={cnsoneInfo}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                                wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                            />\n\n                            {/*WAVAX*/}\n                            <TokenListItem\n                                contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                                network=\"avax\"\n                                name=\"WAVAX\"\n                                price={wallet.prices.avax?.[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                        }\n                                        edge=\"end\"\n                                        onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                        color=\"primary\"\n                                    >\n                                        <ChangeCircleIcon/>\n                                    </IconButton>\n                                }\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*BRN*/}\n                            <TokenListItem\n                                contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                                network=\"avax\"\n                                name=\"BRN\"\n                                price={wallet.prices.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]}\n                            />\n\n                            {/*FUD*/}\n                            <TokenListItem\n                                contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                                network=\"avax\"\n                                name=\"FUD\"\n                                price={wallet.prices.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends,\n                                    symbol: 'WAVAX'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFud} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*FOOK*/}\n                            <TokenListItem\n                                contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                                network=\"avax\"\n                                name=\"FOOK\"\n                                price={wallet.prices.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFook} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*HEDGE*/}\n                            <TokenListItem\n                                contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                                name=\"Hedge Fund\"\n                                network=\"avax\"\n                                price={wallet.prices.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends,\n                                    symbol: 'FOOK'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimHedge} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                                name=\"FEG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0x389999216860AB8E0175387A0c90E5c52522C945\"\n                                name=\"FEG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0x389999216860AB8E0175387A0c90E5c52522C945\"]}\n                            />\n\n                            {/*Okinami*/}\n                            <TokenListItem\n                                contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                                network=\"eth\"\n                                name=\"Okinami\"\n                                price={wallet.prices.eth?.[\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"]}\n                            />\n\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, FUSE_CONSENSUS_ADDRESS)\n\n        connectedContract.methods\n            .delegate(VALIDATOR_ADDRESS)\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{(amount - .1).toLocaleString('en-US', {maximumFractionDigits: 8})}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\nfunction CoineusOne(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, COINEUSONE_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(COINEUSONE_ADDRESS, toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n\n            contract\n                .methods\n                .allowance(wallet.address, COINEUSONE_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(COINEUSONE_ADDRESS, toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[COINEUSONE_ADDRESS])} CNSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[COINEUSONE_ADDRESS]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[COINEUSONE_ADDRESS])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[COINEUSONE_ADDRESS]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices, rpc} = _store.coineus;\n\n    //FUSE\n    const web3 = new Web3(rpc.fuse);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, prices.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, prices.CNSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, prices.VOLTFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves,\n                volt_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CNS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xc2E299b47398963c618De5b05C6BdeCd4cc64022',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x7042807d547A2de0720421a6d2f629c9EB43E73D',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc.avax);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, prices.HEDGEAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, prices.BRNAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves,\n                burnit_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //WAVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //FOOK\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //FUD\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //HEDGE FUND\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n\n\n    //BSC\n    const web3BSC = new Web3(rpc.bnb);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, prices.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, prices.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG BSC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n\n        });\n\n\n    //ETH\n    const web3ETH = new Web3(rpc.eth);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, prices.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, prices.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, prices.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const oki0 = okinami_usdc_reserves.reserve0 / (10**9)\n            const oki1 = okinami_usdc_reserves.reserve1 / (10**6)\n\n            //OKINAMI\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                price: {\n                    inUSD: oki1/oki0,\n                    inETH: oki1/oki0\n                }\n            }));\n\n            //FEG ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n}","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {updateBalances} from \"../redux/slices/coineusSlice\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const dispatch = useDispatch();\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n\n            web3.eth.getBalance(wallet.address).then(resp => {\n                dispatch(updateBalances({\n                    chain: 'fuse',\n                    contract_address: 'native',\n                    balance: resp / (10 ** 18)\n                }))\n            })\n        } else {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: 0\n            }))\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * prices.fuse?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * prices.fuse?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                            <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                        </Tabs>\n                        {\n                            action === \"stake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"FUSE Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > 5000000) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse.native - .1)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                                <List style={{marginTop: 20}}>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Block\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Year\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Box>\n                        }\n\n                        {\n                            action === \"unstake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Staked FUSE\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(data.staked_amount / (10 ** 18))\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                        onClick={withdraw}>Unstake</Button>\n                            </Box>\n                        }\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {Button, Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function RewardsLocker() {\n\n    const {wallet,rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n\n    useEffect(() => {\n\n        const web3AVAX = new Web3(rpc.avax);\n\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n    }, [wallet.address]);\n\n    const claim = (contract) => {\n\n        const web3AVAX = new Web3(window.provider);\n\n        const _contract = new web3AVAX.eth.Contract(rewards_abi, contract);\n\n        _contract.methods.getRewards()\n            .send({from:wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.fud_claimer && <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}} onClick={()=>claim(\"0xb930131f9b73e229c1ae1cf67409e99336043dc2\")}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">Coineus Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.coineus_claimer && <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}} onClick={()=>claim(\"0x2873b157ba89812ddf297719b66585a3aa836599\")}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function CoineusPortfolio() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const hedge_fund_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            hedge_fund_contract.methods.balanceOf(coineus_fund_address).call,\n            hedge_fund_contract.methods.getAccountDividendsInfo(coineus_fund_address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4]/(10**6),\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends: coineus_fund_hedge_fund_dividends[4]/(10**18)\n            })\n\n        });\n\n    }, []);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Rewards Locker\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"Hedge Fund Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance)) + \" Hedge Fund\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_hedge_fund_dividends) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Savings} from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, staked} = props;\n\n    const angle = 360 * percent * (Math.PI / 180);\n\n    const percent2 = staked ? (staked - burnt) / supply : 0;\n    const angle2 = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = staked ? ((staked / supply) * 100).toFixed(2) : 0;\n\n    const colors = {\n        supply: '#fbca00',\n        burned: '#FF5733',\n        staked: '#C70039',\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: 0,\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angle,\n                            angle: angle + angle2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: 0,\n                            angle: angle,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -125,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            {staked && <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -180,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {percentStaked}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % CNSONE\n        </span>\n            </Typography>}\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Autorenew\n                        style={{color: colors.supply, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.supply, fontSize: 18}}>{supply.toLocaleString()} <Typography\n                        variant=\"caption\">SUPPLY</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Savings\n                        style={{color: colors.staked, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.staked, fontSize: 18}}>{(staked).toLocaleString()} <Typography\n                        variant=\"caption\">COINEUS ONE</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Whatshot\n                        style={{color: colors.burned, marginRight: 10, marginTop: 3}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.burned, fontSize: 18}}>{burnt.toLocaleString()} <Typography\n                        variant=\"caption\">BURNED</Typography></Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\nconst VALIDATOR_ADDRESS = '0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2';\n\nexport default function Stats() {\n\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalStaked, setTotalStaked] = useState(0);\n    const [totalBurnt, setTotalBurnt] = useState(0);\n    const [validatorBal, setValidatorBal] = useState(0);\n\n    const {data} = useGetTokenQuery(CoineusContractAddress, {\n        pollingInterval: 60000\n    });\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call,\n            cnsone_contract.methods.totalSupply().call,\n            cnsone_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call,\n            cnsone_contract.methods.balanceOf(VALIDATOR_ADDRESS).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td,\n                staked,\n                burnt,\n                validator_cnsone\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n\n            setTotalStaked(staked / (10 ** 18))\n            setTotalBurnt(burnt / (10 ** 18))\n\n            setValidatorBal(validator_cnsone / (10**18));\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} fUSD` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(validatorBal)}\n                                secondary=\"Coineus One to Distribute\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                            <ListItemText\n                                primary={10}\n                                secondary=\"Distribution Per Hour\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={2000000}\n                        burnt={totalBurnt}\n                        staked={totalStaked}\n                        percent={totalBurnt / 2000000}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"Coineus (CNS)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Fuse (WFUSE)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const dex_screener = useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/sale'}>\n                            <ListItemText primary=\"Projects For Sale\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>CNS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}