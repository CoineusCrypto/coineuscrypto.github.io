{"version":3,"sources":["theme.js","images/logo.svg","utils/promisify.js","redux/slices/coineusSlice.js","images/logo192.png","images/fuse_logo.png","images/fusd_logo.png","images/avax_logo.png","images/usdc_logo.png","images/fook_logo.jpeg","images/fud_logo.jpeg","images/bnb_logo.png","images/feg_logo.png","utils/format.js","components/CoineusLoading.js","components/TokenListItem.js","views/HomePage.js","redux/store.js","utils/fuse_price.js","views/Staking.js","Coineus.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","coineusInfo","fookInfo","fudInfo","balance","avax_balance","bnb_balance","fusd_balance","usdc_balance","fook_balance","fud_balance","feg_balance","prices","avax","fuse","bnb","fusd","usdc","cns","fook","fud","feg","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","BNBBUSDpair","FEGBNBpair","rpc","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","updateWalletFOOKInfo","updateWalletFUDInfo","updateWalletBalance","updateWalletAVAXBalance","updateWalletFUSDBalance","updateWalletUSDCBalance","updateWalletFOOKBalance","updateWalletFUDBalance","updateWalletBNBBalance","updateWalletFEGBalance","resetWallet","updatePrices","price","actions","formatWei","value","round","decimals","BigNumber","div","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","fuse_logo","avax_logo","bnb_logo","TokenListItem","classes","logo","network","rewards","rewardsClaim","Paper","marginBottom","ListItem","secondaryAction","ListItemAvatar","Avatar","className","clsx","ListItemText","secondary","inUSD","toLocaleString","minimumFractionDigits","primaryTypographyProps","fontWeight","secondaryTypographyProps","color","allTime","symbol","pending","HomePage","dispatch","useDispatch","useSelector","coineus","CoineusContractAddress","useState","setPending","stakeOpen","setStakeOpen","totalD","setTotalD","useEffect","getUserInfo","getCoineusInfo","interval","setInterval","clearInterval","Web3","eth","Contract","coineus_abi","methods","getTotalDividendsDistributed","then","resp","td","getBalance","contract","fusd_contract","balanceOf","getAccountDividendsInfo","info","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","web3AVAX","fook_contract","fud_contract","usdc_contract","callsAVAX","fud_info","catch","console","log","web3BSC","callsBSC","Container","maxWidth","Grid","container","spacing","paddingBottom","item","xs","backgroundColor","maximumFractionDigits","fontSize","Button","variant","fullWidth","href","target","Link","to","component","RouterLink","textDecoration","Divider","IconButton","edge","onClick","PowerStake","amount","close","fusd_logo","window","provider","claim","send","from","once","tx","on","error","receipt","disabled","usdc_logo","fud_logo","fook_logo","feg_logo","DialogActions","consensus_abi","delegate","configureStore","reducer","coineusReducer","getPairPrices","store","getState","fusd_fuse","unipair_abi","cns_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","usdc_avax_reserves","fook_avax_reserves","avax_price","inAVAX","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","coineusValidatorAddress","consensusAddress","consensusContract","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setAmount","setData","connectedContract","setConnectedContract","setAction","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","push","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","length","fuse_balance","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","estimateGas","gas","getGasPrice","gasPrice","encodeABI","txData","handleError","message","toString","withdraw","LinearProgress","Math","floor","isNaN","List","disablePadding","disableGutters","Tabs","onChange","ev","val","Tab","id","Box","FormControl","TextField","autoComplete","placeholder","InputProps","endAdornment","InputAdornment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","sx","bottom","Alert","elevation","icon","Coineus","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","chainId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","flexGrow","substr","connectWallet","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c548020d.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        coineusInfo: undefined,\n        fookInfo: undefined,\n        fudInfo: undefined,\n\n        balance: undefined,\n        avax_balance: undefined,\n        bnb_balance: undefined,\n\n        fusd_balance: undefined,\n        usdc_balance: undefined,\n\n        fook_balance: undefined,\n        fud_balance: undefined,\n        feg_balance: undefined,\n    },\n    prices: {\n        avax: undefined,\n        fuse: undefined,\n        bnb: undefined,\n        fusd: undefined,\n        usdc: undefined,\n\n        cns: undefined,\n        fook: undefined,\n        fud: undefined,\n        feg: undefined,\n\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14'\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/'\n    }\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        updateWalletFOOKInfo(state, action) {\n            state.wallet.fookInfo = action.payload\n        },\n\n        updateWalletFUDInfo(state, action) {\n            state.wallet.fudInfo = action.payload\n        },\n\n        updateWalletBalance(state, action) {\n            state.wallet.balance = action.payload\n        },\n\n        updateWalletAVAXBalance(state, action) {\n            state.wallet.avax_balance = action.payload\n        },\n\n        updateWalletFUSDBalance(state, action) {\n            state.wallet.fusd_balance = action.payload\n        },\n\n        updateWalletUSDCBalance(state, action) {\n            state.wallet.usdc_balance = action.payload\n        },\n\n        updateWalletFOOKBalance(state, action) {\n            state.wallet.fook_balance = action.payload\n        },\n\n        updateWalletFUDBalance(state, action) {\n            state.wallet.fud_balance = action.payload\n        },\n\n        updateWalletBNBBalance(state, action) {\n            state.wallet.bnb_balance = action.payload\n        },\n\n        updateWalletFEGBalance(state, action) {\n            state.wallet.feg_balance = action.payload\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n            state.wallet.fookInfo = undefined;\n            state.wallet.fudInfo = undefined;\n        },\n\n        updatePrices(state, action) {\n            state.prices[action.payload.name] = action.payload.price;\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo,\n    updateWalletBalance,\n    updateWalletAVAXBalance,\n    updateWalletFUSDBalance,\n    updateWalletUSDCBalance,\n    updateWalletFOOKBalance,\n    updateWalletFUDBalance,\n    updateWalletBNBBalance,\n    updateWalletFEGBalance,\n    resetWallet,\n    updatePrices\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","export default __webpack_public_path__ + \"static/media/fuse_logo.f2df0430.png\";","export default __webpack_public_path__ + \"static/media/fusd_logo.a63edb36.png\";","export default __webpack_public_path__ + \"static/media/avax_logo.30dfa545.png\";","export default __webpack_public_path__ + \"static/media/usdc_logo.b5121d0d.png\";","export default __webpack_public_path__ + \"static/media/fook_logo.3822b487.jpeg\";","export default __webpack_public_path__ + \"static/media/fud_logo.8daa8e25.jpeg\";","export default __webpack_public_path__ + \"static/media/bnb_logo.0bb49761.png\";","export default __webpack_public_path__ + \"static/media/feg_logo.ec53c63e.png\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\n\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport fuse_logo from \"../images/fuse_logo.png\";\nimport avax_logo from \"../images/avax_logo.png\";\nimport bnb_logo from \"../images/bnb_logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('${fuse_logo}')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('${avax_logo}')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('${bnb_logo}')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {name, logo, network, price, balance, rewards, rewardsClaim} = props;\n\n    return <Paper style={{marginTop: 10, marginBottom:5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar>\n                <Avatar src={logo}/>\n                {network && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={`$${price?.inUSD?.toLocaleString('en-US', {minimumFractionDigits: 12}) || '--'}`}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={balance?.toLocaleString() || '--'}\n                secondary={`$${balance && price ? (price?.inUSD * balance).toLocaleString() : '--'}`}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards && <ListItem style={{color: '#fbca00'}}>\n                <ListItemText\n                    primary='Rewards All-time'\n                    secondary='Pending'\n                    primaryTypographyProps={{fontWeight: 700}}\n                />\n                <ListItemText\n                    primary={`${rewards.allTime?.toLocaleString() || '--'} ${rewards.symbol}`}\n                    secondary={`${rewards.pending?.toLocaleString() || '--'} ${rewards.symbol}`}\n                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    secondaryTypographyProps={{textAlign: 'right'}}\n                />\n            </ListItem>\n        }\n        {rewardsClaim}\n    </Paper>\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    CircularProgress,\n    Container, Dialog,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Link,\n    Typography, Divider, IconButton, DialogContent, DialogActions\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {\n    updateWalletAVAXBalance,\n    updateWalletBalance,\n    updateWalletBNBBalance,\n    updateWalletCoineusInfo,\n    updateWalletFEGBalance,\n    updateWalletFOOKBalance,\n    updateWalletFOOKInfo,\n    updateWalletFUDBalance,\n    updateWalletFUDInfo,\n    updateWalletFUSDBalance,\n    updateWalletUSDCBalance\n} from \"../redux/slices/coineusSlice\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\n\nimport cns_logo from \"../images/logo192.png\";\nimport fuse_logo from \"../images/fuse_logo.png\";\nimport fusd_logo from \"../images/fusd_logo.png\";\nimport avax_logo from \"../images/avax_logo.png\";\nimport usdc_logo from \"../images/usdc_logo.png\";\nimport fook_logo from \"../images/fook_logo.jpeg\";\nimport fud_logo from \"../images/fud_logo.jpeg\";\nimport bnb_logo from \"../images/bnb_logo.png\";\nimport feg_logo from \"../images/feg_logo.png\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n    const CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\n\n    const [pending, setPending] = useState(false);\n\n    const [stakeOpen, setStakeOpen] = useState(false)\n\n    const [totalD, setTotalD] = useState(0);\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address]);\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n        })\n\n    }\n\n    const getUserInfo = () => {\n\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletBalance(resp / (10 ** 18)))\n        })\n\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249be57637d8b013ad64785404b24aebae9b098b');\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            fusd_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                balance,\n                info,\n                fusd_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletCoineusInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFUSDBalance(fusd_balance / (10 ** 18)));\n\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletAVAXBalance(resp / (10 ** 18)))\n        })\n\n        const fook_contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const fud_contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n        const usdc_contract = new web3.eth.Contract(coineus_abi, '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(wallet.address).call,\n            fook_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.getAccountDividendsInfo(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance,\n                fud_balance,\n                fud_info\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFOOKInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFOOKBalance(balance));\n            dispatch(updateWalletUSDCBalance(usdc_balance / (10 ** 6)));\n\n            // FUD TOKEN\n            withdrawableDividends = fud_info[3];\n            totalDividends = fud_info[4];\n            secondsUntilAutoClaimAvailable = fud_info[7];\n\n            fud_balance = fud_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFUDInfo({\n                balance: fud_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFUDBalance(fud_balance));\n\n        })\n            .catch(console.log)\n\n        //BNB\n        const web3BSC = new Web3('https://bsc-dataseed1.binance.org/');\n        web3BSC.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletBNBBalance(resp / (10 ** 18)))\n        })\n\n        const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n        const callsBSC = [\n            feg_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3BSC, callsBSC).then(resp => {\n            let [\n                balance,\n            ] = resp;\n\n            dispatch(updateWalletFEGBalance(balance / (10 ** 9)));\n\n        })\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={cns_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.cns?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={fuse_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.fuse?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={avax_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.avax?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={bnb_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.bnb?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} fUSD` || '--'}\n                                secondary=\"Total Rewards Distributed All-time\"\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{textAlign: 'right', color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022\"\n                                    target=\"_blank\">Swap</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75\"\n                                    target=\"_blank\">Chart</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth href=\"https://app.voltage.finance/#/bridge\"\n                                    target=\"_blank\">Bridge</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Link to={\"/staking\"} component={RouterLink} style={{textDecoration: 'none'}}>\n                                <Button variant=\"contained\" fullWidth\n                                        target=\"_blank\">Stake</Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n\n                    <Divider>FUSE</Divider>\n\n                    {/*FUSE*/}\n                    <TokenListItem\n                        name=\"FUSE\"\n                        logo={fuse_logo}\n                        price={prices.fuse}\n                        balance={wallet.balance}\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"stake\" onClick={() => setStakeOpen(true)}>\n                                <BoltIcon color=\"primary\"/>\n                            </IconButton>\n                        }\n                    />\n                    <PowerStake\n                        open={stakeOpen}\n                        amount={wallet.balance}\n                        close={() => setStakeOpen(false)}\n                    />\n\n                    {/*fUSD*/}\n                    <TokenListItem\n                        name=\"fUSD\"\n                        logo={fusd_logo}\n                        network=\"fuse\"\n                        price={{inUSD: 1}}\n                        balance={wallet.fusd_balance}\n                    />\n\n                    {/*CNS*/}\n                    <TokenListItem\n                        name=\"CNS\"\n                        logo={cns_logo}\n                        network=\"fuse\"\n                        price={prices.cns}\n                        balance={wallet.coineusInfo?.balance}\n                        rewards={{\n                            allTime: wallet.coineusInfo?.totalDividends,\n                            pending: wallet.coineusInfo?.withdrawableDividends,\n                            symbol: 'fUSD'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claim} variant='contained' fullWidth\n                                        disabled={wallet.chain !== 122 || wallet.coineusInfo?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    <Divider>AVAX</Divider>\n\n                    {/*AVAX*/}\n                    <TokenListItem\n                        name=\"AVAX\"\n                        logo={avax_logo}\n                        price={prices.avax}\n                        balance={wallet.avax_balance}\n                    />\n\n                    {/*USDC*/}\n                    <TokenListItem\n                        name=\"USDC\"\n                        logo={usdc_logo}\n                        network=\"avax\"\n                        price={{inUSD: 1}}\n                        balance={wallet.usdc_balance}\n                    />\n\n                    {/*FUD*/}\n                    <TokenListItem\n                        name=\"FUD\"\n                        logo={fud_logo}\n                        network=\"avax\"\n                        price={prices.fud}\n                        balance={wallet.fudInfo?.balance}\n                        rewards={{\n                            allTime: wallet.fudInfo?.totalDividends,\n                            pending: wallet.fudInfo?.withdrawableDividends,\n                            symbol: 'WAVAX'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFud} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fudInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    {/*FOOK*/}\n                    <TokenListItem\n                        name=\"FOOK\"\n                        logo={fook_logo}\n                        network=\"avax\"\n                        price={prices.fook}\n                        balance={wallet.fookInfo?.balance}\n                        rewards={{\n                            allTime: wallet.fookInfo?.totalDividends,\n                            pending: wallet.fookInfo?.withdrawableDividends,\n                            symbol: 'USDC'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFook} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fookInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    <Divider>BNB</Divider>\n\n                    {/*BNB*/}\n                    <TokenListItem\n                        name=\"BNB\"\n                        logo={bnb_logo}\n                        price={prices.bnb}\n                        balance={wallet.bnb_balance}\n                    />\n\n                    {/*FEG*/}\n                    <TokenListItem\n                        name=\"FEG\"\n                        logo={feg_logo}\n                        network=\"bnb\"\n                        price={prices.feg}\n                        balance={wallet.feg_balance}\n                        />\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\" />\n\n        </Container>\n    );\n}\n\n\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount} = props;\n    const [pending, setPending] = useState(false);\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, consensusAddress)\n\n        connectedContract.methods\n            .delegate(coineusValidatorAddress)\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1)\n            })\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                close();\n            })\n            .catch(() => {\n                setPending(false);\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{(amount - .1).toLocaleString('en-US', {maximumFractionDigits: 8})}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            {\n                pending ? <CircularProgress size={24}/> : <>\n                    <Button onClick={close}>cancel</Button>\n                    <Button onClick={delegate} variant=\"contained\">Stake</Button>\n                </>\n            }\n        </DialogActions>\n    </Dialog>\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer\n    }\n})\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices, rpc} = _store.coineus;\n\n    //FUSE\n    const web3 = new Web3(rpc.fuse);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, prices.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, prices.CNSFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves\n            ] = resp\n\n            store.dispatch(updatePrices({\n                name: 'fuse',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fusd',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'cns',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n        });\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc.avax);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            store.dispatch(updatePrices({\n                name: 'avax',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'usdc',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fook',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n        });\n\n\n    //BSC\n    const web3BSC = new Web3(rpc.bnb);\n    const bnb_busd = new web3AVAX.eth.Contract(unipair_abi, prices.BNBBUSDpair);\n    const feg_bnb = new web3AVAX.eth.Contract(unipair_abi, prices.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            store.dispatch(updatePrices({\n                name: 'bnb',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'feg',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n        });\n}","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {updateWalletBalance} from \"../redux/slices/coineusSlice\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n\n            web3.eth.getBalance(wallet.address).then(resp => {\n                dispatch(updateWalletBalance(resp / (10 ** 18)));\n            })\n        } else {\n            dispatch(updateWalletBalance(0));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            //get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {});\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h4\">{data.amount_delegated?.toLocaleString()}</Typography>\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated/5000000)*100}  style={{marginTop:10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\" style={{display:'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} / 5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{data.staked_amount ? (data.staked_amount / (10 ** 18)).toLocaleString() : '--'}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                            <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                        </Tabs>\n                        {\n                            action === \"stake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"FUSE Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(wallet.balance || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > 5000000) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balance - .1)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                                <List style={{marginTop: 20}}>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Block\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Year\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Box>\n                        }\n\n                        {\n                            action === \"unstake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Staked FUSE\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(data.staked_amount / (10 ** 18))\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                        onClick={withdraw}>Unstake</Button>\n                            </Box>\n                        }\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\" />\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {AppBar, Avatar, Button, CssBaseline, Grid, ThemeProvider, Toolbar} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\nimport Staking from \"./views/Staking\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if(window.ethereum){\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return ()=> clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none'}}\n                        >\n                            <Avatar src={logo} height={40} />\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {clearWallet();}}\n                                >0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n            </Router>\n        </ThemeProvider>\n    )\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}