{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","utils/index.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","views/EasyBridge.js","views/Admin.js","components/SwapInput.js","views/Swap.js","views/Lottery.js","views/LotteryGame.js","views/Lottery1.js","views/Lottery2.js","views/Lottery3.js","views/LotteryBNB.js","views/LotteryAVAX.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","copyTextToClipboard","text","callback","navigator","clipboard","writeText","then","err","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","useState","snackbarOpen","setSnackBarOpen","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","secondaryAction","IconButton","edge","primaryTypographyProps","fontSize","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","Snackbar","onClose","autoHideDuration","Alert","severity","sx","variant","getDexLabel","id","List","map","pair","dexId","secondaryTypographyProps","pairAddress","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","detailsLabel","setOpen","undefined","balances","Paper","marginBottom","inUSD","staked","paddingTop","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","tokens","list","setList","useEffect","tmp","Object","entries","chain","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","token","visibility","paddingBottom","verticalAlign","marginRight","initialState","address","type","info","avax","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","resp","req","request","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","ceus_contract","Contract","coineus_abi","fusd_contract","volt_contract","fsb_contract","btc_contract","eth_contract","bnb_contract","wfuse_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","getBalance","methods","balanceOf","delegatedAmount","fuse_balance","ceus_balance","fusd_balance","volt_balance","staked_fuse_with_coineus","fsb_balance","btc_balance","eth_balance","bnb_balance","wfuse_balance","dispatch","getFUSE","web3AVAX","usdc_contract","dgnx_contract","callsAVAX","avax_balance","usdc_balance","dgnx_balance","catch","console","log","getAVAX","web3BSC","callsBSC","getBNB","web3ETH","bbks_contract","callsETH","bbks_balance","getETH","HomePage","setPending","stakeOpen","setStakeOpen","chainTab","setChainTab","Container","Tabs","onChange","ev","val","Tab","disabled","PowerStake","amount","onSubmit","onSuccess","onError","Divider","fullWidth","DialogActions","window","provider","delegate","send","from","gasPrice","once","tx","on","error","receipt","getPairPrices","fusd_fuse","unipair_abi","ceus_fuse","volt_fuse","fsb_fuse","eth_fuse","bnb_fusd","btc_fuse","getReserves","fusd_fuse_reserves","ceus_fuse_reserves","volt_fuse_reserves","fsb_fuse_reserves","eth_fuse_reserves","bnb_fusd_reserves","btc_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","dgnx_avax","usdc_avax_reserves","dgnx_avax_reserves","avax_price","inAVAX","callsBNB","bnb_busd_reserves","bnb_price","inBNB","eth_usdc_reserves","eth_price","inETH","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setAmount","setData","connectedContract","setConnectedContract","setAction","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","withdraw","padding","LinearProgress","backgroundColor","disablePadding","disableGutters","Box","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","anchorOrigin","vertical","horizontal","TransitionComponent","bottom","elevation","icon","CoineusSales","border","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","contract","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","getUserInfo","now","getTime","distance","days","Math","floor","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","component","RouterLink","underline","substr","toLocaleDateString","toLocaleTimeString","coineus_fund_address","assurance_fund_address","coineus_validator_address","CoineusPortfolio","fuseData","setFuseData","web3FUSE","callsF","coineus_fund_balance","assurance_fund_balance","coineus_fund_staked","assurance_fund_staked","coineus_avax_balance","coineus_fund_dgnx_balance","totalValue","TokenStatsSection","logo","usdValue","secondaryBalance","secondarySymbol","secondaryLabel","xyplot","BurnSupply","minted","supply","fund","divider","PI","aSupply","aBurned","aLiquidity","aFund","angles","supplyStart","supplyEnd","liquidityStart","liquidityEnd","fundStart","fundEnd","burnedStart","burnedEnd","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","StatListItem","Autorenew","Whatshot","SwapVerticalCircle","AccountBalance","ListItemIcon","totalSupply","Stats","setSupply","setLiquidity","setFund","ceus_supply","ceus_liquidity","ceus_fund","EasyBridge","reserves","setReserves","fuseOut","setFuseOut","amtRecieved","setAmtRecieved","txHash","setTxHash","txCost","setTxCost","router_abi","utils","toBN","uni_abi","inputProps","startAdornment","hexToNumberString","logs","gasUsed","effectiveGasPrice","textDecorationColor","href","Admin","ceus_abi","performBurn","SwapInput","max","borderColor","inputMode","autoCorrect","spellCheck","pattern","routerAddress","Swap","useTheme","amountIn","setAmountIn","amountOut","setAmountOut","swap","swapExactETHForTokens","events","raw","paper","startIcon","float","LOTTERY_CONTRACT1","LOTTERY_CONTRACT2","LOTTERY_CONTRACT3","LOTTERY_CONTRACT_BNB","LOTTERY_CONTRACT_AVAX","Lottery","lottery1","setLottery1","lottery2","setLottery2","lottery3","setLottery3","lotteryBNB","setLotteryBNB","lotteryAVAX","setLotteryAVAX","getLotteryInfo","lottery_abi","ticket_cost","admin_fee","lotteryID","ticketCost","adminFee","jackpot","web3BNB","LotteryGameInfo","index","cost","changeNetwork","chainID","ethereum","method","params","toHex","toLowerCase","checkChain","textDecoration","LotteryGame","lottery_contract_address","organizer","setOrganizer","players","setPlayers","lotteryState","setLotteryState","setTicketCost","setAdminFee","setLotteryID","previousWinner","setPreviousWinner","wins","winnings","stats","setStats","totalWinnings","setTotalWinnings","lottery_state","getPlayers","getStatsByAddress","parseInt","getWinnerByLotteryID","enter","pickWinner","open_lottery","indexOf","winner","dense","player","Lottery1","Lottery2","Lottery3","LotteryBNB","LotteryAVAX","Coineus","getDexScreener","tokenList","dexscreenerChain","dexscreenerPair","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","changeWeb3Modal","subscribeProvider","getAccounts","accounts","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cfbf9af.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {\n    Alert,\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, IconButton, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText, Snackbar,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport {copyTextToClipboard} from \"../utils\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport millify from \"millify\";\nimport {useState} from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                        <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const [snackbarOpen, setSnackBarOpen] = useState(false);\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if (contract_address === 'native') {\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid container>\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar\n                        src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                    {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={name}\n                    secondary={symbol}\n                />\n            </ListItem>\n        </Grid>\n        {\n            contract_address !== 'native' && <Grid item xs={12}>\n                <ListItem\n                    secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"comments\" onClick={()=>copyTextToClipboard(contract_address, ()=>setSnackBarOpen(true))}>\n                            <ContentCopyIcon />\n                        </IconButton>\n                    }>\n                    <ListItemText\n                        primary={contract_address}\n                        secondary=\"Contract Address\"\n                        primaryTypographyProps={{fontSize: '.75rem'}}\n                    />\n                </ListItem>\n            </Grid>\n        }\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.fdv)}\n                    secondary=\"Fully Diluted Value\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.priceUsd)}\n                    secondary=\"Price in USD\"\n                />\n                <ListItemText\n                    primary={CoineusCryptoFormat(data.priceNative)}\n                    secondary={`Price in ${data.quoteToken.symbol}`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.liquidity.usd)}\n                    secondary=\"Liquidity\"\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.base)}\n                    secondary={data.baseToken.symbol}\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.quote)}\n                    secondary={data.quoteToken.symbol}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={data.priceChange.m5 + \"%\"}\n                    secondary=\"5 mins\"\n                    className={getColorClass(data.priceChange.m5)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h1 + \"%\"}\n                    secondary=\"1 hr\"\n                    className={getColorClass(data.priceChange.h1)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h6 + \"%\"}\n                    secondary=\"6 hrs\"\n                    className={getColorClass(data.priceChange.h6)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h24 + \"%\"}\n                    secondary=\"24 hrs\"\n                    className={getColorClass(data.priceChange.h24)}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.volume.m5)}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h1)}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h6)}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h24)}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n        </Grid>\n        <Snackbar\n            open={snackbarOpen}\n            onClose={()=>setSnackBarOpen(false)}\n            autoHideDuration={5000}\n        >\n            <Alert severity=\"success\" sx={{ width: '100%' }} variant=\"filled\">Contract Address copied to clipboard</Alert>\n        </Snackbar>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch (id) {\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span\n                                style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity?.usd || 0)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails, detailsLabel, secondaryAction} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} ${detailsLabel}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\n\n\nexport default function PriceScroll() {\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24 || 0,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n\n            if(a.priceChange < b.priceChange){\n                return 1;\n            }\n\n            if(a.priceChange > b.priceChange){\n                return -1;\n            }\n\n            return 0;\n        })\n\n        setList(tmp);\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? '#00FB4D' : 'red'\n    }\n\n    const getTrend = (priceChange) => {\n\n        if(priceChange > 0) {\n            return <><TrendingUpIcon style={{verticalAlign:'middle', marginRight: 5}}/>{`${priceChange}%`}</>\n        }\n\n        if(priceChange < 0) {\n            return <><TrendingDownIcon style={{verticalAlign: 'middle', marginRight: 5}}/>{`${priceChange}%`}</>\n        }\n\n        return <>{`${priceChange}%`}</>\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            marginTop: 10,\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(165px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 155, marginTop: 25}} key={token.chain+\"_\"+token.contract_address}>\n\n                        <img\n                            src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}\n                            style={{\n                                width: 50,\n                                borderRadius: '50%',\n                                marginTop: -25,\n                                marginLeft: 'calc(50% - 25px)'\n                            }}\n                        />\n\n                        <img\n                            src={`https://coineus.app/assets/tokens/${token.chain}/logo.png`}\n                            style={{\n                                width: 20,\n                                borderRadius: '50%',\n                                top: -25,\n                                marginLeft: 'calc(50% + 15px)',\n                                position: 'relative',\n                                visibility: token.contract_address === 'native' ? 'hidden' : 'visible'\n                            }}\n                        />\n\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain',\n                            paddingTop: 0,\n                            paddingBottom: 0,\n                            marginTop: -25\n                        }}>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700, variant: 'h5', textAlign: 'center'}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                                secondaryTypographyProps={{variant: 'body1', textAlign: 'center'}}\n                            />\n                        </ListItem>\n\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain',\n                            paddingTop: 0,\n                            paddingBottom: 0\n                        }}>\n                            <ListItemText\n                                primary={getTrend(token.priceChange)}\n                                primaryTypographyProps={{fontWeight: 700, variant: 'h6', textAlign: 'center', color: getColorClass(token.priceChange)}}\n                            />\n                        </ListItem>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc'\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const ceus_contract = new web3.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n    const fsb_contract = new web3.eth.Contract(coineus_abi, '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31');\n\n    const btc_contract = new web3.eth.Contract(coineus_abi, '0x33284f95ccb7B948d9D352e1439561CF83d8d00d');\n    const eth_contract = new web3.eth.Contract(coineus_abi, '0xa722c13135930332Eb3d749B2F0906559D2C5b99');\n    const bnb_contract = new web3.eth.Contract(coineus_abi, '0x6acb34b1Df86E254b544189Ec32Cf737e2482058');\n    const wfuse_contract = new web3.eth.Contract(coineus_abi, '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629');\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        ceus_contract.methods.balanceOf(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call,\n        fsb_contract.methods.balanceOf(wallet_address).call,\n\n        btc_contract.methods.balanceOf(wallet_address).call,\n        eth_contract.methods.balanceOf(wallet_address).call,\n        bnb_contract.methods.balanceOf(wallet_address).call,\n        wfuse_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            ceus_balance,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus,\n            fsb_balance,\n\n            btc_balance,\n            eth_balance,\n            bnb_balance,\n            wfuse_balance,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        //ceus\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n            balance: ceus_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//volt\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',//fsb\n            balance: fsb_balance / (10 ** 9)\n        }));\n\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',//btc\n            balance: btc_balance / (10 ** 8)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',//eth\n            balance: eth_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',//bnb\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',//wfuse\n            balance: wfuse_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            usdc_balance,\n            dgnx_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address)\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(coineus_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\nDivider,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*FUSE*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserBalances(wallet.address);\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*CEUS*/}\n                            <TokenListItem\n                                contract_address=\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"\n                                network=\"fuse\"\n                                name=\"CEUS\"\n                                price={wallet.prices.fuse?.[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"]}\n                            />\n\n                            {/*BTC*/}\n                            <TokenListItem\n                                contract_address=\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"\n                                network=\"fuse\"\n                                name=\"WBTC\"\n                                price={wallet.prices.fuse?.[\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"]}\n                            />\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"\n                                network=\"fuse\"\n                                name=\"WETH\"\n                                price={wallet.prices.fuse?.[\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"]}\n                            />\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"\n                                network=\"fuse\"\n                                name=\"WBNB\"\n                                price={wallet.prices.fuse?.[\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"]}\n                            />\n\n                            {/*FSB*/}\n                            <TokenListItem\n                                contract_address=\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"\n                                network=\"fuse\"\n                                name=\"FSB\"\n                                price={wallet.prices.fuse?.[\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"]}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n\n                        <Divider>DEPRECATED</Divider>\n\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*DGNX*/}\n                            <TokenListItem\n                                contract_address=\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"\n                                network=\"avax\"\n                                name=\"DGNX\"\n                                price={wallet.prices.avax?.[\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*BBKS*/}\n                            <TokenListItem\n                                contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                                name=\"BBKS\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                            />\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{CoineusCryptoFormat(amount - .1)}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const ceus_fuse = new web3.eth.Contract(unipair_abi, pairs.CEUSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n    const fsb_fuse = new web3.eth.Contract(unipair_abi, pairs.FSBFUSEpair);\n    const eth_fuse = new web3.eth.Contract(unipair_abi, pairs.ETHFUSEPair);\n    const bnb_fusd = new web3.eth.Contract(unipair_abi, pairs.BNBfUSDPair);\n    const btc_fuse = new web3.eth.Contract(unipair_abi, pairs.BTCFUSEPair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        ceus_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call,\n        fsb_fuse.methods.getReserves().call,\n        eth_fuse.methods.getReserves().call,\n        bnb_fusd.methods.getReserves().call,\n        btc_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                ceus_fuse_reserves,\n                volt_fuse_reserves,\n                fsb_fuse_reserves,\n                eth_fuse_reserves,\n                bnb_fusd_reserves,\n                btc_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //WFUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CEUS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n                price: {\n                    inFuse: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1,\n                    inUSD: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //FSB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',\n                price: {\n                    inFuse: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1,\n                    inUSD: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1/(10**9) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',\n                price: {\n                    inFuse: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1,\n                    inUSD: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',\n                price: {\n                    inFuse: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1,\n                    inUSD: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1\n                }\n            }));\n\n            //BTC\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',\n                price: {\n                    inFuse: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1,\n                    inUSD: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1/(10**10) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                dgnx_avax_reserves,\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address && wallet.chain === 122) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address, wallet.chain]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{CoineusCryptoFormat(data.amount_delegated)} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Day\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat((_rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYear / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Day\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat((rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYear / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(data.staked_amount / (10 ** 18) || \"--\")} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Container,\n    Grid,\n    Paper, Typography,\n} from \"@mui/material\";\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","import {\n    Avatar,\n    Container, Divider,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst assurance_fund_address = \"0x09501F8Ca9476d0c516E121FB4dCE4B7b2301d51\";\nconst coineus_validator_address = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function CoineusPortfolio() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    const [fuseData, setFuseData] = useState({});\n\n    useEffect(() => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n        const consensusContract = new web3FUSE.eth.Contract(consensus_abi, consensusAddress);\n\n        const callsF = [\n            web3FUSE.eth.getBalance(coineus_fund_address),\n            web3FUSE.eth.getBalance(assurance_fund_address),\n            consensusContract.methods.delegatedAmount(coineus_fund_address, coineus_validator_address).call,\n            consensusContract.methods.delegatedAmount(assurance_fund_address, coineus_validator_address).call\n\n        ];\n\n        makeBatchRequest(web3FUSE, callsF).then(resp => {\n            let [\n                coineus_fund_balance,\n                assurance_fund_balance,\n                coineus_fund_staked,\n                assurance_fund_staked\n            ] = resp;\n\n            coineus_fund_balance = coineus_fund_balance / (10 ** 18);\n            assurance_fund_balance = assurance_fund_balance / (10 ** 18);\n            coineus_fund_staked = coineus_fund_staked / (10 ** 18);\n            assurance_fund_staked = assurance_fund_staked / (10 ** 18);\n\n            setFuseData(\n                {\n                    coineus_fund_balance,\n                    assurance_fund_balance,\n                    coineus_fund_staked,\n                    assurance_fund_staked\n                }\n            )\n        })\n\n        const web3AVAX = new Web3(rpc.avax);\n        const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n        const calls = [\n            web3AVAX.eth.getBalance(coineus_fund_address),\n            dgnx_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_avax_balance,\n                coineus_fund_dgnx_balance,\n            ] = resp;\n\n            setData({\n                coineus_avax_balance: coineus_avax_balance / (10 ** 18),\n                coineus_fund_dgnx_balance\n            })\n\n        });\n\n    }, []);\n\n    const totalValue =\n        (\n            (\n                fuseData.coineus_fund_balance +\n                fuseData.coineus_fund_staked +\n                fuseData.assurance_fund_balance +\n                fuseData.assurance_fund_staked\n            ) * wallet.prices.fuse?.native?.inUSD\n        ) + //FUSE\n        (data.coineus_avax_balance * wallet.prices.avax.native?.inUSD) + //AVAX\n        formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD//DGNX\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusUSDFormat(totalValue)}\n                            secondary=\"Total Fund Value\"\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Divider>FUSE</Divider>\n            </Grid>\n\n            <TokenStatsSection data={{\n                symbol: \"FUSE\",\n                label: \"Fund Holdings\",\n                logo: \"https://coineus.app/assets/tokens/fuse/logo.png\",\n                usdValue: CoineusUSDFormat((\n                    fuseData.coineus_fund_balance +\n                    fuseData.coineus_fund_staked +\n                    fuseData.assurance_fund_balance +\n                    fuseData.assurance_fund_staked\n                ) * wallet.prices.fuse?.native?.inUSD),\n                balance: CoineusCryptoFormat(fuseData.coineus_fund_balance + fuseData.assurance_fund_balance),\n                secondaryBalance: CoineusCryptoFormat(fuseData.coineus_fund_staked + fuseData.assurance_fund_staked),\n                secondarySymbol: 'FUSE',\n                secondaryLabel: 'Staked',\n                network: 'fuse',\n                native: true\n            }}/>\n\n            <Grid item xs={12}>\n                <Divider>AVAX</Divider>\n            </Grid>\n\n            <TokenStatsSection data={{\n                symbol: \"AVAX\",\n                label: \"Fund Holdings\",\n                logo: \"https://coineus.app/assets/tokens/avax/logo.png\",\n                usdValue: CoineusUSDFormat(data.coineus_avax_balance * wallet.prices.avax.native?.inUSD),\n                balance: CoineusCryptoFormat(data.coineus_avax_balance),\n                network: 'avax',\n                native: true\n            }}/>\n\n            <TokenStatsSection data={{\n                symbol: \"DGNX\",\n                label: \"Fund Holdings\",\n                logo: \"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\",\n                usdValue: CoineusUSDFormat((data.coineus_fund_dgnx_balance / 10 ** 18) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD),\n                balance: CoineusCryptoFormat((data.coineus_fund_dgnx_balance / 10 ** 18)),\n                network: 'avax'\n            }}/>\n\n        </Grid>\n    </Container>\n}\n\nfunction TokenStatsSection(props) {\n\n    const classes = useStyles();\n\n    const {\n        native,\n        symbol,\n        label,\n        logo,\n        usdValue,\n        balance,\n        secondaryBalance,\n        secondarySymbol,\n        secondaryLabel,\n        network\n    } = props.data;\n\n    return <Grid item xs={12}>\n        <Paper>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={logo}/>\n                        {!native && <span className={clsx(classes.networkChip, network)}/>}\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={symbol}\n                        primaryTypographyProps={{fontWeight: 700}}\n                        secondary={label}\n                    />\n                    <ListItemText\n                        primary={usdValue}\n                        secondary=\"USD Value\"\n                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {\n                    balance !== undefined && <ListItem>\n                        <ListItemText\n                            primary={`${balance} ${symbol}`}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary=\"Wallet\"\n                        />\n                        {\n                            secondaryBalance !== undefined && <ListItemText\n                                primary={`${secondaryBalance} ${secondarySymbol}`}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={secondaryLabel}\n                            />\n                        }\n                    </ListItem>\n                }\n            </List>\n        </Paper>\n    </Grid>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Autorenew,\n    Whatshot,\n    AccountBalance,\n    Bolt,\n    SwapVerticalCircle\n} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {minted, supply, liquidity, fund} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aSupply = 360 * ((supply - liquidity - fund) / minted) * (Math.PI / 180);\n    const aBurned = 360 * ((minted - supply) / minted) * (Math.PI / 180);\n    const aLiquidity = 360 * (liquidity / minted) * (Math.PI / 180);\n    const aFund = 360 * (fund / minted) * (Math.PI / 180);\n\n\n    const angles = {\n        supplyStart: 0,\n        supplyEnd: aSupply,\n\n        liquidityStart: aSupply + divider,\n        liquidityEnd: aSupply + aLiquidity,\n\n        fundStart: aSupply + aLiquidity + divider,\n        fundEnd: aSupply + aLiquidity + aFund,\n\n        burnedStart: aSupply + aLiquidity + aFund + divider,\n        burnedEnd: aSupply + aLiquidity + aFund + aBurned - divider\n    }\n\n\n    const colors = {\n        label: '#fff',\n        supply: '#fbca00',\n        burned: '#fa5700',\n        faucet: '#1c6fe0',\n        fund: '#ff00eb',\n        liquidity: '#a100ff',\n\n        staked: '#ffe35c',\n        cnsone: '#ff0000',\n        cnsvolt: '#65CA00',\n        cnsbnb: '#fbca00',\n        cnsfuse: '#3d668d'\n    }\n\n    if (\n        supply === undefined ||\n        liquidity === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: angles.supplyStart,\n                            angle: angles.supplyEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angles.liquidityStart,\n                            angle: angles.liquidityEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.liquidity,\n                        },\n                        {\n                            angle0: angles.fundStart,\n                            angle: angles.fundEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.fund,\n                        },\n                        {\n                            angle0: angles.burnedStart,\n                            angle: angles.burnedEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        }\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700'\n                }}\n            >\n                {(((minted - supply) / minted) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n\n            <Grid container>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Bolt style={{color: colors.label}}/>} color={colors.label} value={minted}\n                                  label=\"TOTAL MINTED\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply}\n                                  label=\"TOTAL SUPPLY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned}\n                                  value={minted - supply}\n                                  label=\"TOTAL BURNED\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<SwapVerticalCircle style={{color: colors.liquidity}}/>}\n                                  color={colors.liquidity} value={liquidity}\n                                  label=\"LIQUIDITY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<AccountBalance style={{color: colors.fund}}/>} color={colors.fund} value={fund}\n                                  label=\"FUND\"/>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon style={{paddingLeft: 15}}>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nimport {useSelector} from \"react-redux\";\nimport BurnSupply from \"../components/BurntSupply\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nconst web3 = new Web3(\"https://rpc.fuse.io\");\nconst ceus_contract = new web3.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\nconst calls = [\n    ceus_contract.methods.totalSupply().call,\n    ceus_contract.methods.balanceOf('0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b').call,\n    ceus_contract.methods.balanceOf('0xb80267eA7fa368374ee4d4Bf10044778232AdEFe').call\n];\n\nexport default function Stats() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [supply, setSupply] = useState(0);\n    const [liquidity, setLiquidity] = useState(0);\n    const [fund, setFund] = useState(0);\n\n    useEffect(() => {\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                ceus_supply,\n                ceus_liquidity,\n                ceus_fund\n            ] = resp;\n\n            setSupply(ceus_supply / (10**18));\n            setLiquidity(ceus_liquidity / (10**18));\n            setFund(ceus_fund / (10**18));\n        })\n    }, [])\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <BurnSupply\n                        minted={2000000}\n                        supply={supply}\n                        liquidity={liquidity}\n                        fund={fund}\n                    />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    Avatar,\n    Button,\n    Container, Divider,\n    FormControl,\n    Grid,\n    InputAdornment, Link,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from '../abis/IPancakeRouter.json';\nimport uni_abi from '../abis/IUniswapV2Pair.json';\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x6483f166b9e4310a165a55fea04f867499aded06';\nconst routerAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E';\nconst easyBridgeAddress = '0xf79fa369aF0FC52260Bef080A62Cb2501863cfF7';\n\nexport default function EasyBridge() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n    const [amount, setAmount] = useState(\"\");\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0])\n    const [fuseOut, setFuseOut] = useState(0);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getFuseAmt = () => {\n\n        if (!amount || !reserves[0] || !reserves[1]) {\n            setFuseOut(undefined)\n            return;\n        }\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toBN(amount * (10 ** 18)), reserves[1], reserves[0]).call((err, resp) => {\n            setFuseOut(resp / (10 ** 18) * .98);\n        })\n    }\n\n    useEffect(getFuseAmt, [amount, reserves]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const bridge = () => {\n\n        const web3 = new Web3(window.provider);\n\n        web3.eth\n            .sendTransaction({\n                    to: easyBridgeAddress,\n                    from: wallet.address,\n                    value: web3.utils.toBN(amount * (10 ** 18))\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.logs[10].data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <FormControl fullWidth>\n                        <TextField\n                            autoComplete=\"off\"\n                            type=\"number\"\n                            value={amount}\n                            placeholder=\"Enter Amount\"\n                            onChange={(ev) => {\n                                setAmount(ev.target.value)\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    style: {textAlign: \"right\"},\n                                },\n                                startAdornment: <Avatar style={{marginRight: 10}} sx={{width: 24, height: 24}}\n                                                        src={`https://coineus.app/assets/tokens/bnb/logo.png`}/>,\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <Button variant=\"contained\" onClick={() => {\n                                        setAmount(wallet.balances.bnb.native)\n                                    }\n                                    }>MAX</Button>\n                                </InputAdornment>,\n                            }}\n                        />\n                    </FormControl>\n                    <ListItem disablePadding style={{marginTop: 10}}>\n                        <ListItemAvatar>\n                            <Avatar style={{marginLeft: 15}} sx={{width: 24, height: 24}}\n                                    src={`https://coineus.app/assets/tokens/fuse/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(fuseOut)} FUSE`}\n                            secondary=\"Estimated Out\"\n                            primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                            secondaryTypographyProps={{textAlign: 'right'}}\n                        />\n                    </ListItem>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 10}}\n                        onClick={bridge}\n                        disabled={!wallet.address || wallet.chain !== 56 || amount > wallet.balances.bnb.native}\n                    >BRIDGE</Button>\n                </Paper>\n                <Divider style={{marginTop: 10}}>SMART CHAIN</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    network=\"bnb\"\n                    name=\"BNB\"\n                    native\n                    price={wallet.prices.bnb?.native}\n                    wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                />\n\n                <Divider style={{marginTop: 10}}>FUSE NETWORK</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                    network=\"fuse\"\n                    name=\"FUSE\"\n                    native\n                    price={wallet.prices.fuse?.native}\n                />\n\n                {\n                    amtRecieved !== undefined && <>\n                        <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                        <Paper\n                            style={{\n                                backgroundColor: 'white',\n                                color: \"#000\",\n                                padding: 20,\n                                fontFamily: 'monospace'\n                            }}>\n                            <Grid container>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>Bridged</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(amtRecieved)} FUSE`}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(txCost)} BNB`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={6}/>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusUSDFormat(txCost * wallet.prices.bnb?.native?.inUSD)} USD`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                        <Link\n                                            style={{color: \"#000\", textDecorationColor: '#000'}}\n                                            href={`https://bscscan.com/tx/${txHash}`}\n                                            target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}}>\n                                    <Typography style={{fontFamily: 'monospace'}}>FUSE Balance update pending...</Typography>\n                                </Grid>\n                            </Grid>\n\n                        </Paper>\n                    </>\n                }\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport ceus_abi from \"../abis/ceus_abi.json\";\n\nimport {useSelector} from \"react-redux\";\nimport {useState} from \"react\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst COINEUS_FUND_ADDRESS = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst CEUS_CONTRACT_ADDRESS = \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\";\n\nexport default function Admin() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const rCNSONEToEveryone = () => {\n        const web3= new Web3(window.provider);\n        const coineusone_contract = new web3.eth.Contract(ceus_abi, CEUS_CONTRACT_ADDRESS);\n\n        coineusone_contract.methods.performBurn(web3.utils.toWei(amount))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Burn CEUS</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n                        <Button fullWidth variant=\"contained\"\n                                disabled={!amount}\n                                onClick={rCNSONEToEveryone}>BURN CEUS</Button>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {FormControl, TextField} from \"@mui/material\";\n\nexport default function SwapInput(props) {\n\n    const {label, max, disabled, value, onChange, startAdornment, endAdornment} = props;\n\n    return (\n        <FormControl\n            style={{\n                backgroundColor: 'rgb(0,0,0)', // same as background default\n                border: 'none',\n                borderColor: 'unset',\n                borderRadius: 4\n            }}\n            fullWidth>\n            <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                inputMode=\"decimal\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"off\"\n                pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                placeholder=\"0\"\n                max={max}\n                disabled={disabled}\n                value={value}\n                onChange={onChange}\n                label={label}\n                InputProps={{\n                    inputProps: {\n                        style: {\n                            textAlign: 'right',\n                        }\n                    },\n                    startAdornment: startAdornment,\n                    endAdornment: endAdornment\n                }}\n            />\n        </FormControl>\n    )\n}\n","import {Avatar, Button, Container, Divider, Grid, InputAdornment, Link, Paper, Typography} from \"@mui/material\";\nimport SwapInput from \"../components/SwapInput\";\nimport {useEffect, useState} from \"react\";\nimport {useTheme} from \"@mui/styles\";\nimport {useSelector} from \"react-redux\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport Web3 from \"web3\";\nimport uni_abi from \"../abis/IUniswapV2Pair.json\";\nimport router_abi from \"../abis/IPancakeRouter.json\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b';\nconst routerAddress = '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5';\n\nexport default function Swap() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const theme = useTheme();\n\n    const [amountIn, setAmountIn] = useState(0);\n    const [amountOut, setAmountOut] = useState(0);\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0]);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getCeusAmt = () => {\n\n        if (!amountIn || !reserves[0] || !reserves[1]) {\n            setAmountOut(0)\n            return;\n        }\n\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toWei(amountIn), reserves[0], reserves[1]).call((err, resp) => {\n            setAmountOut(CoineusCryptoFormat(resp / (10 ** 18) * .99));\n        })\n    }\n\n    useEffect(getCeusAmt, [amountIn, reserves, rpc.fuse]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const swap = async () => {\n        setAmtRecieved(undefined);\n        setTxHash(undefined);\n        setTxCost(undefined);\n\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n        const gasPrice = await web3.eth.getGasPrice();\n\n        contract.methods.swapExactETHForTokens(\n            web3.utils.toWei((amountOut).toString()),\n            [\n                '0x0be9e53fd7edac9f859882afdda116645287c629',\n                '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8'\n            ],\n            wallet.address,\n            (((new Date()).getTime() + 60000) / 1000).toFixed(0)\n        )\n            .send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei(amountIn),\n                    gas: 300000,\n                    gasPrice\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                console.log(receipt);\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.events[2].raw.data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <SwapInput\n                                    value={amountIn || \"\"}\n                                    onChange={(ev) => {\n                                        setAmountIn(ev.target.value)\n                                    }}\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                style={{\n                                                    backgroundColor: theme.palette.background.paper,\n                                                    backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05))',\n                                                    color: \"#fff\"\n                                                }}\n                                                startIcon={<Avatar src='https://coineus.app/assets/tokens/fuse/logo.png'\n                                                                   style={{width: 24, height: 24}}/>}\n                                            >FUSE\n                                            </Button>\n                                        </InputAdornment>\n                                    }\n                                />\n                                <Typography variant=\"caption\"\n                                            style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse.native)}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <SwapInput\n                                    disabled\n                                    value={amountOut || \"\"}\n                                    onChange={(ev) => {\n                                        setAmountOut(ev.target.value)\n                                    }}\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                style={{\n                                                    backgroundColor: theme.palette.background.paper,\n                                                    backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05))',\n                                                    color: \"#fff\"\n                                                }}\n                                                startIcon={<Avatar\n                                                    src='https://coineus.app/assets/tokens/fuse/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8/logo.png'\n                                                    style={{width: 24, height: 24}}/>}\n                                            >CEUS\n                                            </Button>\n                                        </InputAdornment>\n                                    }\n                                />\n                                <Typography variant=\"caption\"\n                                            style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"])}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button fullWidth variant=\"contained\" onClick={swap}>SWAP</Button>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    {\n                        amtRecieved !== undefined && <>\n                            <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                            <Paper\n                                style={{\n                                    backgroundColor: 'white',\n                                    color: \"#000\",\n                                    padding: 20,\n                                    fontFamily: 'monospace'\n                                }}>\n                                <Grid container>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>Purchased</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusCryptoFormat(amtRecieved)} CEUS`}\n                                        </Typography>\n                                    </Grid>\n\n                                    <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusCryptoFormat(txCost)} FUSE`}\n                                        </Typography>\n                                    </Grid>\n\n\n                                    <Grid item xs={6}/>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusUSDFormat(txCost * wallet.prices.fuse?.native?.inUSD)} USD`}\n                                        </Typography>\n                                    </Grid>\n\n\n                                    <Grid item xs={12} style={{marginTop: 20}} />\n\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                            <Link\n                                                style={{color: \"#000\", textDecorationColor: '#000'}}\n                                                href={`https://explorer.fuse.io/tx/${txHash}`}\n                                                target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n\n                            </Paper>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Container>\n    )\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport lottery_abi from \"../abis/lottery_abi.json\";\nimport {\n    Avatar,\n    Button,\n    Container,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    Typography\n} from \"@mui/material\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst LOTTERY_CONTRACT1 = \"0x8cCd3537AEee2D66447F01DafEA1ca427C13e3e6\";\nconst LOTTERY_CONTRACT2 = \"0x8B03aBEA721C79bd426EC2561eCB88542Db3fca7\";\nconst LOTTERY_CONTRACT3 = \"0x3A1E450e2a49C3c88Aefd0b0Db3Ac13301dc635F\";\n\nconst LOTTERY_CONTRACT_BNB = \"0x79cAD46Dc5b8B3355F8A2Ff80192471Ae096a65B\";\nconst LOTTERY_CONTRACT_AVAX = \"0xEcFd74Bf46f6DDE3b88109f80AEEb8020de06A58\";\n\nexport default function Lottery() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [lottery1, setLottery1] = useState({});\n    const [lottery2, setLottery2] = useState({});\n    const [lottery3, setLottery3] = useState({});\n\n    const [lotteryBNB, setLotteryBNB] = useState({});\n\n    const [lotteryAVAX, setLotteryAVAX] = useState({});\n\n    const getLotteryInfo = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(rpc.fuse);\n\n        const lottery1 = new web3.eth.Contract(lottery_abi, LOTTERY_CONTRACT1);\n        const lottery2 = new web3.eth.Contract(lottery_abi, LOTTERY_CONTRACT2);\n        const lottery3 = new web3.eth.Contract(lottery_abi, LOTTERY_CONTRACT3);\n\n        const calls = [\n\n            lottery1.methods.ticket_cost().call,\n            lottery1.methods.admin_fee().call,\n            lottery1.methods.lotteryID().call,\n            web3.eth.getBalance(LOTTERY_CONTRACT1),\n\n            lottery2.methods.ticket_cost().call,\n            lottery2.methods.admin_fee().call,\n            lottery2.methods.lotteryID().call,\n            web3.eth.getBalance(LOTTERY_CONTRACT2),\n\n            lottery3.methods.ticket_cost().call,\n            lottery3.methods.admin_fee().call,\n            lottery3.methods.lotteryID().call,\n            web3.eth.getBalance(LOTTERY_CONTRACT3),\n\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            setLottery1({\n                ticketCost: resp[0],\n                adminFee: resp[1],\n                lotteryID: resp[2],\n                jackpot: (resp[3] / (10 ** 18)) * (1 - resp[1]/100)\n            })\n\n            setLottery2({\n                ticketCost: resp[4],\n                adminFee: resp[5],\n                lotteryID: resp[6],\n                jackpot: (resp[7] / (10 ** 18)) * (1 - resp[5]/100)\n            })\n\n            setLottery3({\n                ticketCost: resp[8],\n                adminFee: resp[9],\n                lotteryID: resp[10],\n                jackpot: (resp[11] / (10 ** 18)) * (1 - resp[9]/100)\n            })\n\n        })\n\n        const web3BNB = new Web3(rpc.bnb);\n        const lotteryBNB = new web3BNB.eth.Contract(lottery_abi, LOTTERY_CONTRACT_BNB);\n\n        const callsBNB = [\n            lotteryBNB.methods.ticket_cost().call,\n            lotteryBNB.methods.admin_fee().call,\n            lotteryBNB.methods.lotteryID().call,\n            web3BNB.eth.getBalance(LOTTERY_CONTRACT_BNB)\n        ];\n\n        makeBatchRequest(web3BNB, callsBNB).then(resp => {\n            setLotteryBNB({\n                ticketCost: resp[0] / (10**18),\n                adminFee: resp[1],\n                lotteryID: resp[2],\n                jackpot: (resp[3] / (10 ** 18)) * (1 - resp[1]/100)\n            })\n        });\n\n        const web3AVAX = new Web3(rpc.avax);\n        const lotteryAVAX = new web3AVAX.eth.Contract(lottery_abi, LOTTERY_CONTRACT_AVAX);\n\n        const callsAVAX = [\n            lotteryAVAX.methods.ticket_cost().call,\n            lotteryAVAX.methods.admin_fee().call,\n            lotteryAVAX.methods.lotteryID().call,\n            web3AVAX.eth.getBalance(LOTTERY_CONTRACT_AVAX)\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            setLotteryAVAX({\n                ticketCost: resp[0] / (10**18),\n                adminFee: resp[1],\n                lotteryID: resp[2],\n                jackpot: (resp[3] / (10 ** 18)) * (1 - resp[1]/100)\n            })\n        });\n    }\n\n    useEffect(() => {\n        getLotteryInfo();\n        const interval = setInterval(getLotteryInfo, 10000)\n        return () => clearInterval(interval);\n    }, [rpc.fuse, wallet.address]);\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <LotteryGameInfo\n                    index={1}\n                    id={lottery1.lotteryID}\n                    cost={lottery1.ticketCost}\n                    jackpot={lottery1.jackpot}\n                    currency=\"FUSE\"\n                />\n\n                <LotteryGameInfo\n                    index={2}\n                    id={lottery2.lotteryID}\n                    cost={lottery2.ticketCost}\n                    jackpot={lottery2.jackpot}\n                    currency=\"FUSE\"\n                />\n\n                <LotteryGameInfo\n                    index={3}\n                    id={lottery3.lotteryID}\n                    cost={lottery3.ticketCost}\n                    jackpot={lottery3.jackpot}\n                    currency=\"FUSE\"\n                />\n\n                <LotteryGameInfo\n                    index={\"bnb\"}\n                    id={lotteryBNB.lotteryID}\n                    cost={lotteryBNB.ticketCost}\n                    jackpot={lotteryBNB.jackpot}\n                    currency=\"BNB\"\n                />\n\n                <LotteryGameInfo\n                    index={\"avax\"}\n                    id={lotteryAVAX.lotteryID}\n                    cost={lotteryAVAX.ticketCost}\n                    jackpot={lotteryAVAX.jackpot}\n                    currency=\"AVAX\"\n                />\n\n            </Grid>\n        </Container>\n    );\n}\n\nfunction LotteryGameInfo(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {index, id, cost, jackpot, currency} = props;\n\n    const checkChain = () => {\n        switch (currency) {\n            case \"AVAX\":\n                if (wallet.chain === 43114) return true;\n                break;\n            case \"BNB\":\n                if (wallet.chain === 56) return true;\n                break;\n            case \"FUSE\":\n                if (wallet.chain === 122) return true;\n                break;\n            default:\n                return false;\n        }\n    }\n\n    const changeNetwork = async () => {\n        let chainID = 122;\n        switch (currency) {\n            case \"AVAX\":\n                chainID = 43114;\n                break;\n            case \"BNB\":\n                chainID = 56;\n                break;\n            case \"FUSE\":\n                chainID = 122;\n                break;\n            default:\n                return false;\n        }\n\n        const web3 = new Web3(window.provider);\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{chainId: web3.utils.toHex(chainID)}], // chainId must be in hexadecimal numbers\n        });\n    }\n\n    return <Grid item xs={12}>\n        <Paper>\n            <Typography variant=\"caption\" color=\"primary\" style={{float: \"right\", padding: 10}}>Draw# {id}</Typography>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={`https://coineus.app/assets/tokens/${currency.toLowerCase()}/logo.png`} />\n                    </ListItemAvatar>\n                    <ListItemText primary={`${CoineusCryptoFormat(cost)} ${currency}`}\n                                  primaryTypographyProps={{\n                                      style: {fontWeight: 700},\n                                      variant: 'h5',\n                                      color: 'primary'\n                                  }}\n                                  secondary=\"Ticket Price\"/>\n                    <ListItemText primary={`${CoineusCryptoFormat(jackpot)} ${currency}`}\n                                  primaryTypographyProps={{\n                                      style: {fontWeight: 700},\n                                      variant: 'h5',\n                                      color: 'primary',\n                                      textAlign: 'right'\n                                  }}\n                                  secondary=\"Current Jackpot\"\n                                  secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <ListItem>\n\n                    {\n                        checkChain()\n                            ?\n                            <RouterLink to={`/lottery/${index}`} style={{width: '100%', textDecoration: 'none'}}>\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                >Enter</Button>\n                            </RouterLink>\n                            :\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                onClick={changeNetwork}>CHANGE NETWORK</Button>\n                    }\n                </ListItem>\n            </List>\n        </Paper>\n    </Grid>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport lottery_abi from \"../abis/lottery_abi.json\";\nimport {Button, Container, Grid, List, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function LotteryGame(props) {\n\n    const {lottery_contract_address, rpc, currency} = props;\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n\n    const [amount, setAmount] = useState(0);\n    const [organizer, setOrganizer] = useState(null);\n    const [players, setPlayers] = useState([]);\n    const [lotteryState, setLotteryState] = useState(1);\n    const [ticketCost, setTicketCost] = useState(0);\n    const [adminFee, setAdminFee] = useState(0);\n    const [lotteryID, setLotteryID] = useState(0);\n    const [previousWinner, setPreviousWinner] = useState('');\n    const [stats, setStats] = useState({wins: 0, entries: 0, winnings: 0});\n    const [totalWinnings, setTotalWinnings] = useState(0);\n\n    const getLotteryInfo = () => {\n\n        if (!wallet.address) return;\n\n\n        const web3 = new Web3(rpc);\n        const contract = new web3.eth.Contract(lottery_abi, lottery_contract_address);\n\n        const calls = [\n            contract.methods.lottery_state().call,\n            contract.methods.getPlayers().call,\n            contract.methods.organizer().call,\n            contract.methods.ticket_cost().call,\n            contract.methods.admin_fee().call,\n            contract.methods.lotteryID().call,\n            web3.eth.getBalance(lottery_contract_address),\n            contract.methods.getStatsByAddress(wallet.address).call,\n            contract.methods.totalWinnings().call\n        ];\n\n        const divider = currency === \"FUSE\" ? 1 : (10 ** 18);\n\n        makeBatchRequest(web3, calls).then(resp => {\n            setLotteryState(parseInt(resp[0]));\n            setPlayers(resp[1]);\n            setOrganizer(resp[2]);\n            setTicketCost(resp[3] / divider);\n            setAdminFee(resp[4]);\n            setLotteryID(resp[5]);\n            setAmount(resp[6] / (10 ** 18));\n            setStats(resp[7]);\n            setTotalWinnings(resp[8] / (10 ** 18));\n\n            contract.methods.getWinnerByLotteryID(resp[5] - 1).call((err, resp) => {\n                setPreviousWinner(resp);\n            });\n        })\n    }\n\n    useEffect(() => {\n        getLotteryInfo();\n        const interval = setInterval(getLotteryInfo, 10000)\n        return () => clearInterval(interval);\n    }, [rpc, wallet.address]);\n\n    const pickWinnner = () => {\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(lottery_abi, lottery_contract_address);\n\n        contract.methods.pickWinner(\"coineus\" + (new Date()).getTime())\n            .send(\n                {\n                    from: wallet.address\n                }\n            )\n            .then(function (receipt) {\n                getLotteryInfo()\n            });\n\n    }\n\n    const openLottery = () => {\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(lottery_abi, lottery_contract_address);\n\n        contract.methods.open_lottery()\n            .send(\n                {\n                    from: wallet.address\n                }\n            )\n            .then(function (receipt) {\n                getLotteryInfo()\n            });\n\n    }\n\n    const enter = async () => {\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(lottery_abi, lottery_contract_address);\n        const gasPrice = await web3.eth.getGasPrice();\n\n        contract.methods.enter()\n            .send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei(ticketCost.toString()),\n                    gas: 300000,\n                    gasPrice\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getLotteryInfo()\n                setPending(false);\n            });\n    }\n\n    const checkChain = () => {\n        switch (currency) {\n            case \"AVAX\":\n                if (wallet.chain === 43114) return true;\n                break;\n            case \"BNB\":\n                if (wallet.chain === 56) return true;\n                break;\n            case \"FUSE\":\n                if (wallet.chain === 122) return true;\n                break;\n            default:\n                return false;\n        }\n    }\n\n    const changeNetwork = async () => {\n        let chainID = 122;\n        switch (currency) {\n            case \"AVAX\":\n                chainID = 43114;\n                break;\n            case \"BNB\":\n                chainID = 56;\n                break;\n            case \"FUSE\":\n                chainID = 122;\n                break;\n            default:\n                return false;\n        }\n\n        const web3 = new Web3(window.provider);\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{chainId: web3.utils.toHex(chainID)}], // chainId must be in hexadecimal numbers\n        });\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                {\n                    wallet.address === organizer && <Grid item xs={12}>\n                        <Button variant=\"contained\" onClick={pickWinnner} style={{marginRight: 10}}>Pick Winner</Button>\n                        <Button variant=\"contained\" onClick={openLottery} disabled={lotteryState === 0}>Open\n                            Lottery</Button>\n                    </Grid>\n                }\n\n                <Grid item xs={12}>\n                    <Paper style={{border: '1px solid #fbca00'}}>\n                        <List>\n                            <ListItem>\n                                <ListItemText primary={`${CoineusCryptoFormat(totalWinnings)} ${currency}`}\n                                              primaryTypographyProps={{\n                                                  style: {fontWeight: 700},\n                                                  variant: 'h5',\n                                                  color: 'primary',\n                                                  textAlign: 'center'\n                                              }}\n                                              secondary=\"Total Winnings All-time\"\n                                              secondaryTypographyProps={{textAlign: 'center'}}\n                                />\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <Typography variant=\"caption\" color=\"primary\" style={{\n                            float: \"right\",\n                            padding: 10,\n                            marginBottom: -30\n                        }}>Draw# {lotteryID}</Typography>\n                        <List>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(amount - (amount / adminFee))} ${currency}`}\n                                    primaryTypographyProps={{\n                                        style: {fontWeight: 700},\n                                        variant: 'h5',\n                                        color: 'primary'\n                                    }}\n                                    secondary=\"Current Jackpot\"/>\n                            </ListItem>\n                            <ListItem>\n                                {\n                                    checkChain()\n                                        ?\n                                        <Button\n                                            fullWidth\n                                            variant=\"contained\"\n                                            disabled={!checkChain() || lotteryState === 1 || players.indexOf(wallet.address) > -1}\n                                            onClick={enter}\n                                        >{lotteryState === 1 ? \"Lottery Closed\" : (players.indexOf(wallet.address) > -1 ? \"Already Entered\" : `BUY TICKET (${ticketCost} ${currency})`)}</Button>\n                                        :\n                                        <Button\n                                            fullWidth\n                                            variant=\"contained\"\n                                            onClick={changeNetwork}>CHANGE NETWORK</Button>\n                                }\n\n\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <List>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`0X...${previousWinner?.winner?.substr(-6)}`}\n                                    secondary=\"Previous Winner\"\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(previousWinner?.amount / (10 ** 18))} ${currency}`}\n                                    primaryTypographyProps={{textAlign: 'right'}}\n                                    secondary=\"Amount\"\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <List>\n                            <ListItem>\n                                <ListItemText\n                                    primary={stats.entries}\n                                    secondary=\"My Entries\"\n                                />\n                                <ListItemText\n                                    primary={stats.wins}\n                                    secondary=\"My Wins\"\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(stats.winnings)} ${currency}`}\n                                    secondary=\"My Winnings\"\n                                />\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 15}}>\n                        <List dense disablePadding>\n                            {\n                                players.length > 0 && <>\n                                    <Typography>{players.length} Entries</Typography>\n                                    {\n                                        players.map(player => {\n                                            return <ListItem key={player} disablePadding>\n                                                <ListItemText\n                                                    primary={player}\n                                                    primaryTypographyProps={{\n                                                        color: player.toLowerCase() === wallet.address.toLowerCase() ? \"primary\" : \"\",\n                                                        variant: \"caption\",\n                                                        fontFamily: 'monospace'\n                                                    }}\n                                                />\n                                            </ListItem>\n                                        })\n                                    }\n                                </>\n                            }\n\n                            {\n                                players.length <= 0 && <ListItem>\n                                    <ListItemText primary=\"No Entries\"/>\n                                </ListItem>\n                            }\n\n                        </List>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Container>\n    );\n}","import LotteryGame from \"./LotteryGame\";\nimport {useSelector} from \"react-redux\";\n\nexport default function Lottery1() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    return (\n        <LotteryGame\n            lottery_contract_address=\"0x8cCd3537AEee2D66447F01DafEA1ca427C13e3e6\"\n            rpc={rpc.fuse}\n            currency=\"FUSE\"\n        />\n    );\n}","import LotteryGame from \"./LotteryGame\";\nimport {useSelector} from \"react-redux\";\n\nexport default function Lottery2() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    return (\n        <LotteryGame\n            lottery_contract_address=\"0x8B03aBEA721C79bd426EC2561eCB88542Db3fca7\"\n            rpc={rpc.fuse}\n            currency=\"FUSE\"\n        />\n    );\n}","import LotteryGame from \"./LotteryGame\";\nimport {useSelector} from \"react-redux\";\n\nexport default function Lottery3() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    return (\n        <LotteryGame\n            lottery_contract_address=\"0x3A1E450e2a49C3c88Aefd0b0Db3Ac13301dc635F\"\n            rpc={rpc.fuse}\n            currency=\"FUSE\"\n        />\n    );\n}","import LotteryGame from \"./LotteryGame\";\nimport {useSelector} from \"react-redux\";\n\nexport default function LotteryBNB() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    return (\n        <LotteryGame\n            lottery_contract_address=\"0x79cAD46Dc5b8B3355F8A2Ff80192471Ae096a65B\"\n            rpc={rpc.bnb}\n            currency=\"BNB\"\n        />\n    );\n}","import LotteryGame from \"./LotteryGame\";\nimport {useSelector} from \"react-redux\";\n\nexport default function LotteryAVAX() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    return (\n        <LotteryGame\n            lottery_contract_address=\"0xEcFd74Bf46f6DDE3b88109f80AEEb8020de06A58\"\n            rpc={rpc.avax}\n            currency=\"AVAX\"\n        />\n    );\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\nimport EasyBridge from \"./views/EasyBridge\";\nimport Admin from \"./views/Admin\";\nimport Swap from \"./views/Swap\";\nimport Lottery from \"./views/Lottery\";\nimport Lottery1 from \"./views/Lottery1\";\nimport Lottery2 from \"./views/Lottery2\";\nimport Lottery3 from \"./views/Lottery3\";\nimport LotteryBNB from \"./views/LotteryBNB\";\nimport LotteryAVAX from \"./views/LotteryAVAX\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                            <Route\n                                path={`/easybridge`}\n                                exact={true}\n                                element={<EasyBridge />}\n                            />\n                            <Route\n                                path={`/admin`}\n                                exact={true}\n                                element={<Admin />}\n                            />\n                            <Route\n                                path={`/swap`}\n                                exact={true}\n                                element={<Swap />}\n                            />\n                            <Route\n                                path={`/lottery`}\n                                exact={true}\n                                element={<Lottery />}\n                            />\n                            <Route\n                                path={`/lottery/1`}\n                                exact={true}\n                                element={<Lottery1 />}\n                            />\n                            <Route\n                                path={`/lottery/2`}\n                                exact={true}\n                                element={<Lottery2 />}\n                            />\n                            <Route\n                                path={`/lottery/3`}\n                                exact={true}\n                                element={<Lottery3 />}\n                            />\n                            <Route\n                                path={`/lottery/bnb`}\n                                exact={true}\n                                element={<LotteryBNB />}\n                            />\n                            <Route\n                                path={`/lottery/avax`}\n                                exact={true}\n                                element={<LotteryAVAX />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/lottery'}>\n                            <ListItemText primary=\"Lottery (BETA)\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/swap'}>\n                            <ListItemText primary=\"Swap\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/easybridge'}>\n                            <ListItemText primary=\"Easy Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        {\n                            wallet.address === coineus_fund_address && <ListItem button component={RouterLink} to={'/admin'}>\n                                <ListItemText primary=\"Admin\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                            </ListItem>\n                        }\n\n                        <ListSubheader>CEUS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://explorer.fuse.io/token/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://dexscreener.com/fuse/0x3b46efdd411cc0db43f1be7853727e18cce8b85b'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>FUSE NETWORK</ListSubheader>\n                        <ListItem button component={Link} href={'https://router.via.exchange/avalanche/AVAX/fuse/FUSE'} target=\"_blank\">\n                            <ListItemText primary=\"AVAX Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"ETH/BNB Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://get.fuse.cash/mrxn/46qbc3i4'} target=\"_blank\">\n                            <ListItemText primary=\"fuse.cash\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/FAsz89g5RT'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.youtube.com/channel/UCehh09nIOF-2BJ6YyIq3-RQ'} target=\"_blank\">\n                            <ListItemText primary=\"YouTube\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://medium.com/@coineus'} target=\"_blank\">\n                            <ListItemText primary=\"Medium\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://github.com/CoineusCrypto/'} target=\"_blank\">\n                            <ListItemText primary=\"GitHub\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'mailto:contact@coineus.app'} target=\"_blank\">\n                            <ListItemText primary=\"contact@coineus.app\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    if(token_info.dexscreenerChain && token_info.dexscreenerPair) {\n                        calls.push(axios\n                            .get(`https://api.dexscreener.com/latest/dex/pairs/${token_info.dexscreenerChain}/${token_info.dexscreenerPair}`)\n                            .then(resp => {\n                                const {pair} = resp.data;\n                                if(pair){\n                                    token_info.pair = pair;\n                                }\n                            }));\n                    }\n\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}