{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","utils/index.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","images/new_listings/dgnx.jpeg","images/new_listings/fook.jpeg","images/new_listings/burnit.jpeg","images/new_listings/volt.jpeg","images/new_listings/okinami.jpeg","images/new_listings/fsb.jpeg","images/new_listings/babykrakens.jpeg","components/AdScroll.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","views/RewardsLocker.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","views/EasyBridge.js","views/CNSONEFaucet.js","views/FUSEFaucet.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","copyTextToClipboard","text","callback","navigator","clipboard","writeText","then","err","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","useState","snackbarOpen","setSnackBarOpen","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","secondaryAction","IconButton","edge","primaryTypographyProps","fontSize","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","Snackbar","onClose","autoHideDuration","Alert","severity","sx","variant","getDexLabel","id","List","map","pair","dexId","secondaryTypographyProps","pairAddress","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","setOpen","undefined","balances","Paper","marginBottom","inUSD","staked","paddingTop","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","tokens","list","setList","useEffect","tmp","Object","entries","chain","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","token","marginRight","initialState","address","type","info","avax","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","FSBFUSEpair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","FOOKAVAXpair","HEDGEAVAXpair","BRNAVAXpair","DGNXAVAXpair","BABYKRAKENSAVAXpair","BTCAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","resp","req","request","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","contract","Contract","coineus_abi","cnsone_contract","coineusone_abi","fusd_contract","volt_contract","fsb_contract","btc_contract","eth_contract","bnb_contract","cnsvolt_contract","cnseth_contract","cnsbnb_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","getBalance","methods","balanceOf","getAccountDividendsInfo","getAccount","delegatedAmount","fuse_balance","cns_balance","cnsone_balance","cnsone_info","fusd_balance","volt_balance","staked_fuse_with_coineus","fsb_balance","btc_balance","eth_balance","bnb_balance","cnsvolt_balance","cnsvolt_info","cnseth_balance","cnseth_info","cnsbnb_balance","cnsbnb_info","dispatch","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","account","getFUSE","web3AVAX","fook_contract","usdc_contract","wavax_contract","burnit_contract","dgnx_contract","babykrakens_contract","burnit_dividends_contract","dividend_distributor_abi","callsAVAX","getUnpaidEarnings","shares","shareholderClaims","minPeriod","avax_balance","usdc_balance","wavax_balance","burnit_balance","dgnx_balance","babykrakens_balance","babykrakens_info","burnit_unpaid","burnit_shares","burnit_shareHolderClaims","burnit_minPeriod","timeToClaim","parseInt","Date","getTime","catch","console","log","getAVAX","web3BSC","feg_contract","callsBSC","getBNB","web3ETH","okinami_contract","feg_eth_contract","callsETH","okinami_balance","feg_eth_balance","getETH","AdScroll","babykrakens_logo","fsb_logo","burnit_logo","dgnx_logo","volt_logo","fook_logo","okinami_logo","image","HomePage","setPending","stakeOpen","setStakeOpen","chainTab","setChainTab","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","paddingBottom","Tabs","onChange","ev","val","Tab","disabled","PowerStake","onSubmit","onSuccess","onError","claim","gasPrice","fullWidth","coineusInfo","CoineusOne","CNSVOLT","CNSETH","CNSBNB","claimDividend","DialogActions","delegate","setAmount","setAction","deposit","coineus_contract","Box","padding","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","getPairPrices","fusd_fuse","unipair_abi","cns_fuse","volt_fuse","fsb_fuse","eth_fuse","bnb_fusd","btc_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","volt_fuse_reserves","fsb_fuse_reserves","eth_fuse_reserves","bnb_fusd_reserves","btc_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","burnit_avax","dgnx_avax","babykrakens_avax","btc_avax","usdc_avax_reserves","fook_avax_reserves","burnit_avax_reserves","dgnx_avax_reserves","babykrakens_avax_reserves","btc_avax_reserves","avax_price","inAVAX","brn0","brn1","btc_in_reserve","avax_in_reserve","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","feg_eth","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","oki0","oki1","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setData","connectedContract","setConnectedContract","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","LinearProgress","backgroundColor","anchorOrigin","vertical","horizontal","TransitionComponent","bottom","elevation","icon","CoineusSales","border","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","chain_symbol","toUpperCase","getUserInfo","now","distance","days","Math","floor","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","component","RouterLink","underline","substr","toLocaleDateString","toLocaleTimeString","COINEUS_FUND_ADDRESS","RewardsLocker","dataFUSE","setDataFUSE","web3FUSE","erc20_abi","coineusone_contract","callsFUSE","_address","fusd_balance_coineusone","claimRandomToken","rCNSONEToEveryone","utils","toBN","processDividendTracker","coineus_fund_address","assurance_fund_address","coineus_validator_address","CoineusPortfolio","fuseData","setFuseData","callsF","coineus_fund_balance","assurance_fund_balance","coineus_fund_staked","assurance_fund_staked","cnsvolt_earnings","cnseth_earnings","cnsbnb_earnings","coineus_avax_balance","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_usdc_balance","coineus_fund_burnit_balance","coineus_fund_burnit_shares","coineus_fund_dgnx_balance","coineus_fund_babykrakens_balance","coineus_fund_babykrakens_dividends","coineus_fund_burnit_dividends","totalValue","Divider","xyplot","BurnSupply","burnt","supply","percent","cnsone","faucet","fund","cnsvolt","cnseth","cnsbnb","divider","PI","aSupply","aCnsone","burntValue","percentStaked","aFaucet","aFund","aLiquidity","aCnsvolt","aCnseth","aCnsbnb","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","StatListItem","Shower","Whatshot","AccountBalance","SwapHorizontalCircle","Autorenew","ListItemIcon","CoineusContractAddress","Stats","totalD","setTotalD","totalStaked","setTotalStaked","totalBurnt","setTotalBurnt","setFacuet","validatorBal","setValidatorBal","fundBalance","setFundBalance","holders","setHolders","cnsoneHolders","setCnsoneHolders","cnsoneRewards","setCnsoneRewards","cnsvoltAmount","setCnsvoltAmount","cnsethAmount","setCnsethAmount","cnsbnbAmount","setCnsbnbAmount","pollingInterval","axios","get","result","getCoineusInfo","getTotalDividendsDistributed","totalSupply","totalFees","td","validator_cnsone","faucet_cnsone","fund_cns","cnsone_rewards","cnsvolt_amount","cnseth_amount","cnsbnb_amount","EasyBridge","reserves","setReserves","fuseOut","setFuseOut","amtRecieved","setAmtRecieved","txHash","setTxHash","txCost","setTxCost","router_abi","uni_abi","inputProps","startAdornment","hexToNumberString","logs","gasUsed","effectiveGasPrice","textDecorationColor","href","FAUCET_ADDRESS","CNSONEFaucet","faucetData","setFaucetData","userFaucetData","setUserFaucetData","setDisabled","disabledReason","setDisabledReason","faucet_contract","faucet_abi","getClaimPaused","getClaimableAmount","getMinAmountToClaim","getStats","getLockedAmount","paused","claimable","minBalance","stats","minToClaim","lockedAmount","getStatsByAddress","timeCanClaim","toLocaleString","claimedAllTime","numberOfClaimsAllTime","averageClaim","highestClaimed","highestClaimedBy","lowestClaimed","lowestClaimedBy","FUSEFaucet","getDelegatedAmount","Coineus","getDexScreener","tokenList","dexscreenerChain","dexscreenerPair","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d85bf53.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {\n    Alert,\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, IconButton, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText, Snackbar,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport {copyTextToClipboard} from \"../utils\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport millify from \"millify\";\nimport {useState} from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                        <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const [snackbarOpen, setSnackBarOpen] = useState(false);\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if (contract_address === 'native') {\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid container>\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar\n                        src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                    {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={name}\n                    secondary={symbol}\n                />\n            </ListItem>\n        </Grid>\n        {\n            contract_address !== 'native' && <Grid item xs={12}>\n                <ListItem\n                    secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"comments\" onClick={()=>copyTextToClipboard(contract_address, ()=>setSnackBarOpen(true))}>\n                            <ContentCopyIcon />\n                        </IconButton>\n                    }>\n                    <ListItemText\n                        primary={contract_address}\n                        secondary=\"Contract Address\"\n                        primaryTypographyProps={{fontSize: '.75rem'}}\n                    />\n                </ListItem>\n            </Grid>\n        }\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.fdv)}\n                    secondary=\"Fully Diluted Value\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.priceUsd)}\n                    secondary=\"Price in USD\"\n                />\n                <ListItemText\n                    primary={CoineusCryptoFormat(data.priceNative)}\n                    secondary={`Price in ${data.quoteToken.symbol}`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.liquidity.usd)}\n                    secondary=\"Liquidity\"\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.base)}\n                    secondary={data.baseToken.symbol}\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.quote)}\n                    secondary={data.quoteToken.symbol}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={data.priceChange.m5 + \"%\"}\n                    secondary=\"5 mins\"\n                    className={getColorClass(data.priceChange.m5)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h1 + \"%\"}\n                    secondary=\"1 hr\"\n                    className={getColorClass(data.priceChange.h1)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h6 + \"%\"}\n                    secondary=\"6 hrs\"\n                    className={getColorClass(data.priceChange.h6)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h24 + \"%\"}\n                    secondary=\"24 hrs\"\n                    className={getColorClass(data.priceChange.h24)}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.volume.m5)}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h1)}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h6)}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h24)}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n        </Grid>\n        <Snackbar\n            open={snackbarOpen}\n            onClose={()=>setSnackBarOpen(false)}\n            autoHideDuration={5000}\n        >\n            <Alert severity=\"success\" sx={{ width: '100%' }} variant=\"filled\">Contract Address copied to clipboard</Alert>\n        </Snackbar>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch (id) {\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span\n                                style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity?.usd || 0)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: '#00FB4D'\n    }\n}));\n\nexport default function PriceScroll() {\n\n    const classes = useStyles();\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                //tokens to ignore\n                switch(symbol){\n                    case 'USDC':\n                    case 'fUSD':\n                    case 'WAVAX':\n                    case 'CNSONE':\n                        return[contract_address, token_info];\n                    default:\n                        break;\n                }\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n            return a.priceChange < b.priceChange ? 1 : -1\n        })\n\n        setList(tmp);\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={token.chain+\"_\"+token.contract_address}>\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}/>\n                                {token.contract_address !== 'native' && <span className={clsx(classes.networkChip, token.chain)}/>}\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                            />\n                        </ListItem>\n                        <Typography\n                            className={getColorClass(token.priceChange)}\n                            variant=\"h5\"\n                            fontWeight={700}\n                            textAlign='right'\n                            style={{\n                                marginRight: 20\n                        }}>{token.priceChange}%</Typography>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n        BABYKRAKENSAVAXpair: '0x9c349d8ada96c38c23161bb0345641a80a470249',\n        BTCAVAXpair: '0x2fd81391e30805cc7f2ec827013ce86dc591b806',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n    const cnsone_contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n    const fsb_contract = new web3.eth.Contract(coineus_abi, '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31');\n\n    const btc_contract = new web3.eth.Contract(coineus_abi, '0x33284f95ccb7B948d9D352e1439561CF83d8d00d');\n    const eth_contract = new web3.eth.Contract(coineus_abi, '0xa722c13135930332Eb3d749B2F0906559D2C5b99');\n    const bnb_contract = new web3.eth.Contract(coineus_abi, '0x6acb34b1Df86E254b544189Ec32Cf737e2482058');\n\n    const cnsvolt_contract = new web3.eth.Contract(coineus_abi, '0x836c205C49D9Db143f0A79DD384d08895f171C5f');\n    const cnseth_contract = new web3.eth.Contract(coineus_abi, '0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5');\n    const cnsbnb_contract = new web3.eth.Contract(coineus_abi, '0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48');\n\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        contract.methods.balanceOf(wallet_address).call,\n        contract.methods.getAccountDividendsInfo(wallet_address).call,\n        cnsone_contract.methods.balanceOf(wallet_address).call,\n        cnsone_contract.methods.getAccount(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call,\n        fsb_contract.methods.balanceOf(wallet_address).call,\n\n        btc_contract.methods.balanceOf(wallet_address).call,\n        eth_contract.methods.balanceOf(wallet_address).call,\n        bnb_contract.methods.balanceOf(wallet_address).call,\n\n        cnsvolt_contract.methods.balanceOf(wallet_address).call,\n        cnsvolt_contract.methods.getAccountDividendsInfo(wallet_address).call,\n\n        cnseth_contract.methods.balanceOf(wallet_address).call,\n        cnseth_contract.methods.getAccountDividendsInfo(wallet_address).call,\n\n        cnsbnb_contract.methods.balanceOf(wallet_address).call,\n        cnsbnb_contract.methods.getAccountDividendsInfo(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            cns_balance,\n            info,\n            cnsone_balance,\n            cnsone_info,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus,\n            fsb_balance,\n\n            btc_balance,\n            eth_balance,\n            bnb_balance,\n\n            cnsvolt_balance,\n            cnsvolt_info,\n\n            cnseth_balance,\n            cnseth_info,\n\n            cnsbnb_balance,\n            cnsbnb_info\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        cns_balance = cns_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            info: {\n                cns_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        //coineus one\n        const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = cnsone_info;\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",\n            info: {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            balance: cns_balance\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//fUSD\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",//CNSONE\n            balance: cnsone_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',//fsb\n            balance: fsb_balance / (10 ** 9)\n        }));\n\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',//btc\n            balance: btc_balance / (10 ** 8)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',//eth\n            balance: eth_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',//bnb\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x836c205C49D9Db143f0A79DD384d08895f171C5f',//cnsvolt\n            balance: cnsvolt_balance / (10 ** 18)\n        }));\n\n        withdrawableDividends = cnsvolt_info[3];\n        totalDividends = cnsvolt_info[4];\n        secondsUntilAutoClaimAvailable = cnsvolt_info[7];\n\n        cnsvolt_balance = cnsvolt_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x836c205C49D9Db143f0A79DD384d08895f171C5f\",\n            info: {\n                cnsvolt_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5',//cnseth\n            balance: cnseth_balance / (10 ** 18)\n        }));\n\n        withdrawableDividends = cnseth_info[3];\n        totalDividends = cnseth_info[4];\n        secondsUntilAutoClaimAvailable = cnseth_info[7];\n\n        cnseth_balance = cnseth_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\",\n            info: {\n                cnseth_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48',//cnsbnb\n            balance: cnsbnb_balance / (10 ** 18)\n        }));\n\n        withdrawableDividends = cnsbnb_info[3];\n        totalDividends = cnsbnb_info[4];\n        secondsUntilAutoClaimAvailable = cnsbnb_info[7];\n\n        cnsbnb_balance = cnsbnb_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\",\n            info: {\n                cnsbnb_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n    const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n    const babykrakens_contract = new web3AVAX.eth.Contract(coineus_abi, '0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4');\n    const btc_contract = new web3AVAX.eth.Contract(coineus_abi, '0x152b9d0FdC40C096757F570A51E494bd4b943E50');\n\n    const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        fook_contract.methods.balanceOf(wallet_address).call,\n        fook_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        wavax_contract.methods.balanceOf(wallet_address).call,\n        burnit_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n        babykrakens_contract.methods.balanceOf(wallet_address).call,\n        babykrakens_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        btc_contract.methods.balanceOf(wallet_address).call,\n\n        burnit_dividends_contract.methods.getUnpaidEarnings(wallet_address).call,\n        burnit_dividends_contract.methods.shares(wallet_address).call,\n        burnit_dividends_contract.methods.shareholderClaims(wallet_address).call,\n        burnit_dividends_contract.methods.minPeriod().call,\n\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            balance,\n            info,\n            usdc_balance,\n            wavax_balance,\n            burnit_balance,\n            dgnx_balance,\n            babykrakens_balance,\n            babykrakens_info,\n            btc_balance,\n\n            burnit_unpaid,\n            burnit_shares,\n            burnit_shareHolderClaims,\n            burnit_minPeriod,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        balance = balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 6);\n        totalDividends = totalDividends / (10 ** 6);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n            balance: balance\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n            balance: wavax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n            balance: burnit_balance / (10 ** 9)\n        }))\n\n        let timeToClaim = (parseInt(burnit_shareHolderClaims) + parseInt(burnit_minPeriod)) - (new Date()).getTime()/1000;\n        if(timeToClaim < 0) timeToClaim = 0\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n            info: {\n                withdrawableDividends: burnit_unpaid / (10**6),\n                totalDividends: burnit_shares[2] / (10**6),\n                secondsUntilAutoClaimAvailable: timeToClaim\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        // BABYKRAKENS TOKEN\n        withdrawableDividends = babykrakens_info[3];\n        totalDividends = babykrakens_info[4];\n        secondsUntilAutoClaimAvailable = babykrakens_info[7];\n\n        babykrakens_balance = babykrakens_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 6);\n        totalDividends = totalDividends / (10 ** 6);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4',\n            info: {\n                babykrakens_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4', //baby krakens\n            balance: babykrakens_balance\n        }))\n\n        //BTC\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x152b9d0FdC40C096757F570A51E494bd4b943E50', //btc\n            balance: btc_balance / (10**8)\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n            balance: balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n    const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        okinami_contract.methods.balanceOf(wallet_address).call,\n        feg_eth_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            okinami_balance,\n            feg_eth_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n            balance: okinami_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n            balance: feg_eth_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","export default __webpack_public_path__ + \"static/media/dgnx.ff6dbd33.jpeg\";","export default __webpack_public_path__ + \"static/media/fook.ee14acb7.jpeg\";","export default __webpack_public_path__ + \"static/media/burnit.a2d805a9.jpeg\";","export default __webpack_public_path__ + \"static/media/volt.5625fde2.jpeg\";","export default __webpack_public_path__ + \"static/media/okinami.5aeb0739.jpeg\";","export default __webpack_public_path__ + \"static/media/fsb.c7c1d992.jpeg\";","export default __webpack_public_path__ + \"static/media/babykrakens.57e350ff.jpeg\";","import {Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton} from \"@mui/material\";\n\nimport dgnx_logo from '../images/new_listings/dgnx.jpeg';\nimport fook_logo from '../images/new_listings/fook.jpeg';\nimport burnit_logo from '../images/new_listings/burnit.jpeg';\nimport volt_logo from '../images/new_listings/volt.jpeg';\nimport okinami_logo from '../images/new_listings/okinami.jpeg';\nimport fsb_logo from '../images/new_listings/fsb.jpeg';\nimport babykrakens_logo from '../images/new_listings/babykrakens.jpeg';\n\nexport default function AdScroll() {\n\n    const list = [\n        babykrakens_logo,\n        fsb_logo,\n        burnit_logo,\n        dgnx_logo,\n        volt_logo,\n        fook_logo,\n        okinami_logo\n    ];\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(image => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={image}>\n                        <div style={{\n                            height: 115,\n                            width: 230,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <img alt=\"Logo\" src={image} height={115} style={{borderRadius: 4}}/>\n                        </div>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport coineusone_abi from '../abis/coineusone_abi.json';\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nimport {useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\nimport AdScroll from \"../components/AdScroll\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimCnsvolt = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0x836c205C49D9Db143f0A79DD384d08895f171C5f\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimCnseth = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimCnsbnb = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimBurnit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n            contract.methods\n                .claimDividend()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimBabykrakens = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(dividend_distributor_abi, '0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4');\n\n            contract.methods\n                .claimDividend()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount * 100))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .0000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserBalances(wallet.address);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <AdScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserBalances(wallet.address);\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n                            {/*CNS*/}\n                            <TokenListItem\n                                contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                                network=\"fuse\"\n                                name=\"CNS\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends,\n                                    symbol: 'fUSD'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claim} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*CNSONE*/}\n                            <TokenListItem\n                                contract_address=\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"\n                                network=\"fuse\"\n                                name=\"CNSONE\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                secondaryAction={<CoineusOne onSuccess={() => getUserBalances(wallet.address)}/>}\n                                cnsDetails={wallet.info.fuse?.[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                            />\n\n                            {/*FSB*/}\n                            <TokenListItem\n                                contract_address=\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"\n                                network=\"fuse\"\n                                name=\"FSB\"\n                                price={wallet.prices.fuse?.[\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"]}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n\n                            {/*CNSVOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"\n                                network=\"fuse\"\n                                name=\"CNSvolt\"\n                                price={wallet.prices.fuse?.[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"]?.withdrawableDividends,\n                                    symbol: 'VOLT'\n                                }}\n                                secondaryAction={<CNSVOLT onSuccess={() => getUserBalances(wallet.address)}/>}\n\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimCnsvolt} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n\n                            {/*BTC*/}\n                            <TokenListItem\n                                contract_address=\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"\n                                network=\"fuse\"\n                                name=\"WBTC\"\n                                price={wallet.prices.fuse?.[\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"]}\n                            />\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"\n                                network=\"fuse\"\n                                name=\"WETH\"\n                                price={wallet.prices.fuse?.[\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"]}\n                            />\n\n                            {/*CNSETH*/}\n                            <TokenListItem\n                                contract_address=\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"\n                                network=\"fuse\"\n                                name=\"CNSeth\"\n                                price={wallet.prices.fuse?.[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"]?.withdrawableDividends,\n                                    symbol: 'WETH'\n                                }}\n                                secondaryAction={<CNSETH onSuccess={() => getUserBalances(wallet.address)}/>}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimCnseth} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"\n                                network=\"fuse\"\n                                name=\"WBNB\"\n                                price={wallet.prices.fuse?.[\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"]}\n                            />\n\n                            {/*CNSbnb*/}\n                            <TokenListItem\n                                contract_address=\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"\n                                network=\"fuse\"\n                                name=\"CNSbnb\"\n                                price={wallet.prices.fuse?.[\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"]?.withdrawableDividends,\n                                    symbol: 'WBNB'\n                                }}\n                                secondaryAction={<CNSBNB onSuccess={() => getUserBalances(wallet.address)}/>}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimCnsbnb} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                                wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                            />\n\n                            {/*WAVAX*/}\n                            <TokenListItem\n                                contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                                network=\"avax\"\n                                name=\"WAVAX\"\n                                price={wallet.prices.avax?.[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                        }\n                                        edge=\"end\"\n                                        onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                        color=\"primary\"\n                                    >\n                                        <ChangeCircleIcon/>\n                                    </IconButton>\n                                }\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*BTC.b*/}\n                            <TokenListItem\n                                contract_address=\"0x152b9d0FdC40C096757F570A51E494bd4b943E50\"\n                                network=\"avax\"\n                                name=\"BTC.b\"\n                                price={wallet.prices.avax?.[\"0x152b9d0FdC40C096757F570A51E494bd4b943E50\"]}\n                            />\n\n                            {/*BABYKRAKENS*/}\n                            <TokenListItem\n                                contract_address=\"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\"\n                                network=\"avax\"\n                                name=\"BABYKRAKENS\"\n                                price={wallet.prices.avax?.[\"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimBabykrakens} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*BRN*/}\n                            <TokenListItem\n                                contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                                network=\"avax\"\n                                name=\"BRN\"\n                                price={wallet.prices.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimBurnit} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*DGNX*/}\n                            <TokenListItem\n                                contract_address=\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"\n                                network=\"avax\"\n                                name=\"DGNX\"\n                                price={wallet.prices.avax?.[\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"]}\n                            />\n\n                            {/*FOOK*/}\n                            <TokenListItem\n                                contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                                network=\"avax\"\n                                name=\"FOOK\"\n                                price={wallet.prices.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFook} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                                name=\"FEG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0x389999216860AB8E0175387A0c90E5c52522C945\"\n                                name=\"FEG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0x389999216860AB8E0175387A0c90E5c52522C945\"]}\n                            />\n\n                            {/*Okinami*/}\n                            <TokenListItem\n                                contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                                network=\"eth\"\n                                name=\"Okinami\"\n                                price={wallet.prices.eth?.[\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"]}\n                            />\n\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{CoineusCryptoFormat(amount - .1)}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\nfunction CoineusOne(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])} CNSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}\n\nfunction CNSVOLT(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x836c205C49D9Db143f0A79DD384d08895f171C5f\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x836c205C49D9Db143f0A79DD384d08895f171C5f\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x836c205C49D9Db143f0A79DD384d08895f171C5f\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x836c205C49D9Db143f0A79DD384d08895f171C5f\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"])} CNSvolt`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x836c205C49D9Db143f0A79DD384d08895f171C5f\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}\n\nfunction CNSETH(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"])} CNSeth`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}\n\nfunction CNSBNB(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"])} CNSbnb`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, pairs.CNSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n    const fsb_fuse = new web3.eth.Contract(unipair_abi, pairs.FSBFUSEpair);\n    const eth_fuse = new web3.eth.Contract(unipair_abi, pairs.ETHFUSEPair);\n    const bnb_fusd = new web3.eth.Contract(unipair_abi, pairs.BNBfUSDPair);\n    const btc_fuse = new web3.eth.Contract(unipair_abi, pairs.BTCFUSEPair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call,\n        fsb_fuse.methods.getReserves().call,\n        eth_fuse.methods.getReserves().call,\n        bnb_fusd.methods.getReserves().call,\n        btc_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves,\n                volt_fuse_reserves,\n                fsb_fuse_reserves,\n                eth_fuse_reserves,\n                bnb_fusd_reserves,\n                btc_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CNS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xc2E299b47398963c618De5b05C6BdeCd4cc64022',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x7042807d547A2de0720421a6d2f629c9EB43E73D',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSvolt\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x836c205C49D9Db143f0A79DD384d08895f171C5f',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSeth\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSbnb\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //FSB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',\n                price: {\n                    inFuse: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1,\n                    inUSD: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1/(10**9) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',\n                price: {\n                    inFuse: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1,\n                    inUSD: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',\n                price: {\n                    inFuse: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1,\n                    inUSD: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1\n                }\n            }));\n\n            //BTC\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',\n                price: {\n                    inFuse: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1,\n                    inUSD: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1/(10**10) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FOOKAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BRNAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n    const babykrakens_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BABYKRAKENSAVAXpair);\n    const btc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BTCAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call,\n        babykrakens_avax.methods.getReserves().call,\n        btc_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                burnit_avax_reserves,\n                dgnx_avax_reserves,\n                babykrakens_avax_reserves,\n                btc_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //WAVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //FOOK\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            //BABYKRAKENS\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4',\n                price: {\n                    inAVAX: babykrakens_avax_reserves.reserve1/babykrakens_avax_reserves.reserve0 || 0,\n                    inUSD: babykrakens_avax_reserves.reserve1/babykrakens_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            //BTC\n            let btc_in_reserve = btc_avax_reserves.reserve0 / (10**8);\n            let avax_in_reserve = btc_avax_reserves.reserve1 / (10**18);\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x152b9d0FdC40C096757F570A51E494bd4b943E50',\n                price: {\n                    inAVAX: avax_in_reserve/btc_in_reserve || 0,\n                    inUSD: avax_in_reserve/btc_in_reserve * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG BSC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const oki0 = okinami_usdc_reserves.reserve0 / (10**9)\n            const oki1 = okinami_usdc_reserves.reserve1 / (10**6)\n\n            //OKINAMI\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                price: {\n                    inUSD: oki1/oki0,\n                    inETH: oki1/oki0\n                }\n            }));\n\n            //FEG ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address && wallet.chain === 122) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address, wallet.chain]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{CoineusCryptoFormat(data.amount_delegated)} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Day\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat((_rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYear / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Day\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat((rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYear / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(data.staked_amount / (10 ** 18) || \"--\")} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Container,\n    Grid,\n    Paper, Typography,\n} from \"@mui/material\";\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport erc20_abi from \"../abis/IERC20.json\";\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst COINEUS_FUND_ADDRESS = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function RewardsLocker() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [dataFUSE, setDataFUSE] = useState({});\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const getInfo = () => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n\n        const fusd_contract = new web3FUSE.eth.Contract(erc20_abi, \"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\");\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        const callsFUSE = [\n            fusd_contract.methods.balanceOf(coineusone_contract._address).call\n        ]\n\n        makeBatchRequest(web3FUSE, callsFUSE).then(resp => {\n            let [\n                fusd_balance_coineusone\n            ] = resp;\n\n            setDataFUSE({\n                fusd_balance_coineusone\n            })\n\n        })\n    }\n\n    const claimFUSD = () => {\n\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.claimRandomToken(\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\")\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n\n    }\n\n    const rCNSONEToEveryone = () => {\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.rCNSONEToEveryone(web3FUSE.utils.toBN(amount * (10**18)))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const processDividendTracker = () => {\n        const web3FUSE = new Web3(window.provider);\n        const coineus_contract = new web3FUSE.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n        coineus_contract.methods.processDividendTracker(web3FUSE.utils.toBN((10**18)))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    useEffect(getInfo, [wallet.address]);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus ONE fUSD</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(dataFUSE.fusd_balance_coineusone)) + \" fUSD\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        <Button variant=\"contained\"\n                                disabled={wallet.chain !== 122} fullWidth style={{marginTop: 20}}\n                                onClick={claimFUSD}>Claim</Button>\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Reflect CNSONE</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n                        <Button fullWidth variant=\"contained\"\n                                disabled={!amount}\n                                onClick={rCNSONEToEveryone}>REFLECT CNSONE TO EVERYONE</Button>\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus Dividend Tracker</Typography>\n\n                        <Button fullWidth variant=\"contained\"\n                                onClick={processDividendTracker}>PROCESS</Button>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container, Divider,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst assurance_fund_address = \"0x09501F8Ca9476d0c516E121FB4dCE4B7b2301d51\";\nconst coineus_validator_address = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function CoineusPortfolio() {\n\n    const classes = useStyles();\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    const [fuseData, setFuseData] = useState({});\n\n    useEffect(() => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n        const consensusContract = new web3FUSE.eth.Contract(consensus_abi, consensusAddress);\n        const volt_contract = new web3FUSE.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n        const eth_contract = new web3FUSE.eth.Contract(coineus_abi, '0xa722c13135930332Eb3d749B2F0906559D2C5b99');\n        const bnb_contract = new web3FUSE.eth.Contract(coineus_abi, '0x6acb34b1Df86E254b544189Ec32Cf737e2482058');\n\n        const cnsvolt_contract = new web3FUSE.eth.Contract(coineus_abi, '0x836c205C49D9Db143f0A79DD384d08895f171C5f');\n        const cnseth_contract = new web3FUSE.eth.Contract(coineus_abi, '0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5');\n        const cnsbnb_contract = new web3FUSE.eth.Contract(coineus_abi, '0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48');\n\n        const callsF = [\n            web3FUSE.eth.getBalance(coineus_fund_address),\n            web3FUSE.eth.getBalance(assurance_fund_address),\n            consensusContract.methods.delegatedAmount(coineus_fund_address, coineus_validator_address).call,\n            consensusContract.methods.delegatedAmount(assurance_fund_address, coineus_validator_address).call,\n            volt_contract.methods.balanceOf(coineus_fund_address).call,\n            eth_contract.methods.balanceOf(coineus_fund_address).call,\n            bnb_contract.methods.balanceOf(coineus_fund_address).call,\n\n            cnsvolt_contract.methods.balanceOf(coineus_fund_address).call,\n            cnsvolt_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n            cnseth_contract.methods.balanceOf(coineus_fund_address).call,\n            cnseth_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n            cnsbnb_contract.methods.balanceOf(coineus_fund_address).call,\n            cnsbnb_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3FUSE, callsF).then(resp => {\n            let [\n                coineus_fund_balance,\n                assurance_fund_balance,\n                coineus_fund_staked,\n                assurance_fund_staked,\n                volt_balance,\n                eth_balance,\n                bnb_balance,\n\n                cnsvolt_balance,\n                cnsvolt_info,\n                cnseth_balance,\n                cnseth_info,\n                cnsbnb_balance,\n                cnsbnb_info\n            ] = resp;\n\n            coineus_fund_balance = coineus_fund_balance / (10 ** 18);\n            assurance_fund_balance = assurance_fund_balance / (10 ** 18);\n            coineus_fund_staked = coineus_fund_staked / (10 ** 18);\n            assurance_fund_staked = assurance_fund_staked / (10 ** 18);\n            volt_balance = volt_balance / (10 ** 18);\n            eth_balance = eth_balance / (10 ** 18)\n            bnb_balance = bnb_balance / (10 ** 18)\n            cnsvolt_balance = cnsvolt_balance / (10 ** 18);\n            cnseth_balance = cnseth_balance / (10 ** 18);\n            cnsbnb_balance = cnsbnb_balance / (10 ** 18)\n\n            setFuseData(\n                {\n                    coineus_fund_balance,\n                    assurance_fund_balance,\n                    coineus_fund_staked,\n                    assurance_fund_staked,\n                    volt_balance,\n                    eth_balance,\n                    bnb_balance,\n                    cnsvolt_balance,\n                    cnsvolt_earnings: cnsvolt_info[4] / (10 ** 18),\n                    cnseth_balance,\n                    cnseth_earnings: cnseth_info[4] / (10 ** 18),\n                    cnsbnb_balance,\n                    cnsbnb_earnings: cnsbnb_info[4] / (10 ** 18),\n                }\n            )\n        })\n\n\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n\n        const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n        const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n        const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n        const babykrakens_contract = new web3AVAX.eth.Contract(coineus_abi, '0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4');\n\n\n        const calls = [\n            web3AVAX.eth.getBalance(coineus_fund_address),\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            usdc_contract.methods.balanceOf(coineus_fund_address).call,\n\n            burnit_contract.methods.balanceOf(coineus_fund_address).call,\n            burnit_dividends_contract.methods.shares(coineus_fund_address).call,\n\n            dgnx_contract.methods.balanceOf(coineus_fund_address).call,\n\n            babykrakens_contract.methods.balanceOf(coineus_fund_address).call,\n            babykrakens_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_avax_balance,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_usdc_balance,\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_shares,\n\n                coineus_fund_dgnx_balance,\n\n                coineus_fund_babykrakens_balance,\n                coineus_fund_babykrakens_dividends\n\n            ] = resp;\n\n            setData({\n                coineus_avax_balance: coineus_avax_balance / (10 ** 18),\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4] / (10 ** 6),\n\n                coineus_fund_usdc_balance: coineus_fund_usdc_balance / (10 ** 6),\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_dividends: coineus_fund_burnit_shares[2] / (10 ** 6),\n\n                coineus_fund_dgnx_balance,\n\n                coineus_fund_babykrakens_balance,\n                coineus_fund_babykrakens_dividends: coineus_fund_babykrakens_dividends[4] / (10 ** 6),\n            })\n\n        });\n\n    }, []);\n\n    const totalValue = (formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD) + //fook\n        ((data.coineus_fund_burnit_balance / (10 ** 9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD) + //burnit\n        (\n            (\n                fuseData.coineus_fund_balance +\n                fuseData.coineus_fund_staked +\n                fuseData.assurance_fund_balance +\n                fuseData.assurance_fund_staked\n            ) * wallet.prices.fuse?.native?.inUSD\n        ) + //FUSE\n        data.coineus_fund_usdc_balance + //USDC\n        (data.coineus_avax_balance * wallet.prices.avax.native?.inUSD) + //AVAX\n        formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD + //DGNX\n        formatWeiToNumber(data.coineus_fund_babykrakens_balance) * wallet.prices.avax?.['0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4']?.inUSD +//BABYKRAKENS\n        fuseData.volt_balance * wallet.prices.fuse?.['0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4'].inUSD +//VOLT\n        fuseData.eth_balance * wallet.prices.fuse?.['0xa722c13135930332Eb3d749B2F0906559D2C5b99'].inUSD +//ETH on FUSE\n        fuseData.cnseth_balance * wallet.prices.fuse?.['0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5'].inUSD + //CNSeth\n        fuseData.cnsvolt_balance * wallet.prices.fuse?.['0x836c205C49D9Db143f0A79DD384d08895f171C5f'].inUSD //CNSvolt\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n            <Grid item xs={12}>\n                <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusUSDFormat(totalValue)}\n                            secondary=\"Total Fund Value\"\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Divider style={{marginBottom: 10}}>FUSE</Divider>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/logo.png\"/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUSE\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={\n                                    CoineusUSDFormat((\n                                        fuseData.coineus_fund_balance +\n                                        fuseData.coineus_fund_staked +\n                                        fuseData.assurance_fund_balance +\n                                        fuseData.assurance_fund_staked\n                                    ) * wallet.prices.fuse?.native?.inUSD)\n                                }\n                                secondary=\"USD Value\"\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_balance + fuseData.assurance_fund_balance) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Wallet\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_staked + fuseData.assurance_fund_staked) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Staked\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'fuse')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"VOLT\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(fuseData.volt_balance * wallet.prices.fuse?.['0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4'].inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.volt_balance)) + \" VOLT\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/0x836c205C49D9Db143f0A79DD384d08895f171C5f/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'fuse')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"CNSvolt\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(fuseData.cnsvolt_balance * wallet.prices.fuse?.['0x836c205C49D9Db143f0A79DD384d08895f171C5f'].inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.cnsvolt_balance)) + \" CNSvolt\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.cnsvolt_earnings)) + \" VOLT\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/0xa722c13135930332Eb3d749B2F0906559D2C5b99/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'fuse')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"WETH\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(fuseData.eth_balance * wallet.prices.fuse?.['0xa722c13135930332Eb3d749B2F0906559D2C5b99'].inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.eth_balance)) + \" WETH\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'fuse')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"CNSeth\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(fuseData.cnseth_balance * wallet.prices.fuse?.['0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5'].inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.cnseth_balance)) + \" CNSeth\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.cnseth_earnings)) + \" WETH\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/0x6acb34b1Df86E254b544189Ec32Cf737e2482058/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'fuse')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"WBNB\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(fuseData.bnb_balance * wallet.prices.fuse?.['0x6acb34b1Df86E254b544189Ec32Cf737e2482058'].inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.bnb_balance)) + \" WBNB\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'fuse')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"CNSbnb\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(fuseData.cnsbnb_balance * wallet.prices.fuse?.['0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48'].inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.cnsbnb_balance)) + \" CNSbnb\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((fuseData.cnsbnb_earnings)) + \" WBNB\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Divider style={{marginBottom: 10}}>AVAX</Divider>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/logo.png\"/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"AVAX\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(data.coineus_avax_balance * wallet.prices.avax.native?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_avax_balance) + \" AVAX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"USDC\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(data.coineus_fund_usdc_balance)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"BBK\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat((data.coineus_fund_babykrakens_balance / (10 ** 18)) * wallet.prices.avax?.['0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_babykrakens_balance / (10 ** 18))) + \" BBK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_babykrakens_dividends)) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x9CcAd19669259C1FBF13FDa959400C871b3d0E00/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"BRN\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat((data.coineus_fund_burnit_balance / (10 ** 9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_balance / (10 ** 9))) + \" BRN\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_dividends)) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"DGNX\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance)) + \" DGNX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Shower, AccountBalance, Bolt, SwapHorizontalCircle} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, cnsone, faucet, fund, liquidity, cnsvolt, cnseth, cnsbnb} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aSupply = 360 * percent * (Math.PI / 180);\n\n    const percent2 = cnsone ? (cnsone - burnt) / supply : 0;\n    const aCnsone = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = cnsone ? (((cnsone + cnsvolt + cnseth + cnsbnb) / supply) * 100).toFixed(2) : 0;\n\n    const percent3 = faucet / supply;\n    const aFaucet = 360 * percent3 * (Math.PI / 180);\n\n    const percent4 = fund / supply;\n    const aFund = 360 * percent4 * (Math.PI / 180);\n\n    const percent5 = liquidity / supply;\n    const aLiquidity = 360 * percent5 * (Math.PI / 180);\n\n    const percent6 = cnsvolt / supply;\n    const aCnsvolt = 360 * percent6 * (Math.PI / 180);\n\n    const percent7 = cnseth / supply;\n    const aCnseth = 360 * percent7 * (Math.PI / 180);\n\n    const percent8 = cnseth / supply;\n    const aCnsbnb = 360 * percent8 * (Math.PI / 180);\n\n    const colors = {\n        label: '#fff',\n        supply: '#fbca00',\n        burned: '#fa5700',\n        staked: '#ff0000',\n        faucet: '#1c6fe0',\n        fund: '#ff00eb',\n        liquidity: '#a100ff',\n\n        cnsvolt: '#65CA00',\n        cnseth: '#5F7AE3',\n        cnsbnb: '#fbca00'\n    }\n\n    if (\n        burnt === undefined ||\n        supply === undefined ||\n        percent === undefined ||\n        cnsone === undefined ||\n        faucet === undefined ||\n        fund === undefined ||\n        liquidity === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: aSupply + aCnsone + aFaucet + aFund + aLiquidity + aCnsvolt + aCnseth + aCnsbnb + (divider * 9),\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: divider,\n                            angle: aFaucet + divider,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.faucet,\n                        },\n                        {\n                            angle0: aFaucet + (divider * 2),\n                            angle: aSupply + aFaucet + (divider * 2),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                        {\n                            angle0: aSupply + aFaucet + (divider * 3),\n                            angle: aSupply + aCnsone + aFaucet + (divider * 3),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: aSupply + aCnsone + aFaucet + (divider * 4),\n                            angle: aSupply + aCnsone + aFaucet + aCnsvolt + (divider * 4),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.cnsvolt,\n                        },\n                        {\n                            angle0: aSupply + aCnsone + aFaucet + aCnsvolt + (divider * 5),\n                            angle: aSupply + aCnsone + aFaucet + aCnsvolt + aCnseth + (divider * 5),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.cnseth,\n                        },\n                        {\n                            angle0: aSupply + aCnsone + aFaucet + aCnsvolt + aCnseth + (divider * 6),\n                            angle: aSupply + aCnsone + aFaucet + aCnsvolt + aCnseth + aCnsbnb + (divider * 6),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.cnsbnb,\n                        },\n                        {\n                            angle0: aSupply + aCnsone + aFaucet + aCnsvolt + aCnseth + aCnsbnb + (divider * 7),\n                            angle: aSupply + aCnsone + aFaucet + aCnsvolt + aCnseth + aCnsbnb + aFund + (divider * 7),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.fund,\n                        },\n                        {\n                            angle0: aSupply + aCnsone + aFaucet + aCnsvolt + aCnseth + aCnsbnb + aFund + (divider * 8),\n                            angle: aSupply + aCnsone + aFaucet + aCnsvolt + aCnseth + aCnsbnb + aFund + aLiquidity + (divider * 8),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.liquidity,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -125,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            {cnsone !== 0 && <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -180,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {percentStaked}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % STAKED\n        </span>\n            </Typography>}\n\n            <StatListItem icon={<Bolt style={{color: colors.label}}/>} color={colors.label} value={supply}\n                          label=\"TOTAL SUPPLY\"/>\n            <StatListItem icon={<Shower style={{color: colors.faucet}}/>} color={colors.faucet} value={faucet}\n                          label=\"FAUCET\"/>\n            <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned} value={burnt}\n                          label=\"BURNED\"/>\n            <StatListItem icon={<Bolt style={{color: colors.staked}}/>} color={colors.staked} value={cnsone}\n                          label=\"COINEUS ONE\"/>\n            <StatListItem icon={<Bolt style={{color: colors.cnsvolt}}/>} color={colors.cnsvolt} value={cnsvolt}\n                          label=\"CNSvolt\"/>\n            <StatListItem icon={<Bolt style={{color: colors.cnseth}}/>} color={colors.cnseth} value={cnseth}\n                          label=\"CNSeth\"/>\n            <StatListItem icon={<Bolt style={{color: colors.cnsbnb}}/>} color={colors.cnsbnb} value={cnsbnb}\n                          label=\"CNSbnb\"/>\n            <StatListItem icon={<AccountBalance style={{color: colors.fund}}/>} color={colors.fund} value={fund}\n                          label=\"FUND STORAGE\"/>\n            <StatListItem icon={<SwapHorizontalCircle style={{color: colors.liquidity}}/>} color={colors.liquidity}\n                          value={liquidity} label=\"LIQUIDITY\"/>\n            <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                          value={supply - cnsone - burnt - faucet - fund - liquidity - cnsvolt - cnseth - cnsbnb} label=\"CIRCULATING\"/>\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Divider, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport axios from \"axios\";\n\nconst CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\nconst VALIDATOR_ADDRESS = '0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2';\nconst CNS_STORAGE_ADDRESS = '0x15C5C2CDb2676541a2f38919B7A82656a6C71F4F';\n\nexport default function Stats() {\n\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalStaked, setTotalStaked] = useState(0);\n    const [totalBurnt, setTotalBurnt] = useState(0);\n    const [faucet, setFacuet] = useState(0);\n    const [validatorBal, setValidatorBal] = useState(0);\n    const [fundBalance, setFundBalance] = useState(0);\n    const [holders, setHolders] = useState(0);\n    const [cnsoneHolders, setCnsoneHolders] = useState(0);\n    const [cnsoneRewards, setCnsoneRewards] = useState(0);\n\n\n    const [cnsvoltAmount, setCnsvoltAmount] = useState(0);\n    const [cnsethAmount, setCnsethAmount] = useState(0);\n    const [cnsbnbAmount, setCnsbnbAmount] = useState(0);\n\n    const {data} = useGetTokenQuery(CoineusContractAddress, {\n        pollingInterval: 60000\n    });\n\n    useEffect(() => {\n        axios\n            .get('https://explorer.fuse.io/api?module=token&action=getTokenHolders&contractaddress=0xc2E299b47398963c618De5b05C6BdeCd4cc64022&offset=10000')\n            .then(resp => {\n                setHolders(resp.data.result.length);\n            })\n        axios\n            .get('https://explorer.fuse.io/api?module=token&action=getTokenHolders&contractaddress=0x7042807d547A2de0720421a6d2f629c9EB43E73D&offset=10000')\n            .then(resp => {\n                setCnsoneHolders(resp.data.result.length);\n            })\n    }, [])\n\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n        const cnsvolt_contract = new web3.eth.Contract(coineusone_abi, '0x836c205C49D9Db143f0A79DD384d08895f171C5f');\n        const cnseth_contract = new web3.eth.Contract(coineusone_abi, '0x5c1bB0b286B5Ba67b776f596aCA6625BAf9CCDd5');\n        const cnsbnb_contract = new web3.eth.Contract(coineusone_abi, '0x5351B7eB69D81731f8C7A5948C1c0570fBd82f48');\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call,\n            cnsone_contract.methods.totalSupply().call,\n            cnsone_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call,\n            cnsone_contract.methods.balanceOf(VALIDATOR_ADDRESS).call,\n            cnsone_contract.methods.balanceOf('0xb4e09d2d0eF6CeBdfFc1Ff027729cE567354D82E').call,\n            contract.methods.balanceOf(CNS_STORAGE_ADDRESS).call,\n            cnsone_contract.methods.totalFees().call,\n\n            cnsvolt_contract.methods.totalSupply().call,\n            cnseth_contract.methods.totalSupply().call,\n            cnsbnb_contract.methods.totalSupply().call,\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td,\n                staked,\n                burnt,\n                validator_cnsone,\n                faucet_cnsone,\n                fund_cns,\n                cnsone_rewards,\n\n                cnsvolt_amount,\n                cnseth_amount,\n                cnsbnb_amount\n            ] = resp;\n\n            setFacuet(faucet_cnsone / (10 ** 18))\n\n            setTotalD(td / (10 ** 18));\n\n            setTotalStaked(staked / (10 ** 18))\n            setTotalBurnt(burnt / (10 ** 18))\n\n            setValidatorBal(validator_cnsone / (10**18));\n\n            setFundBalance(fund_cns / (10**18));\n\n            setCnsoneRewards(cnsone_rewards / (10**18));\n\n            setCnsvoltAmount(cnsvolt_amount / (10**18));\n            setCnsethAmount(cnseth_amount / (10**18));\n            setCnsbnbAmount(cnsbnb_amount / (10**18));\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={2000000}\n                        burnt={totalBurnt}\n                        percent={totalBurnt / 2000000}\n                        faucet={faucet}\n                        fund={fundBalance}\n                        liquidity={data?.pairs[0]?.liquidity.base}\n\n                        cnsone={totalStaked}\n                        cnsvolt={cnsvoltAmount}\n                        cnseth={cnsethAmount}\n                        cnsbnb={cnsbnbAmount}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider style={{marginBottom:10}}>Coineus</Divider>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(totalD)} fUSD` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={holders}\n                                secondary=\"Coineus Holders\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"Coineus (CNS)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Fuse (WFUSE)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider style={{marginBottom:10}}>Coineus One</Divider>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(cnsoneRewards)} CNSONE` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(validatorBal)}\n                                secondary=\"Coineus One to Distribute\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                            <ListItemText\n                                primary={10}\n                                secondary=\"Distribution Per Hour\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={cnsoneHolders}\n                                secondary=\"Coineus One Holders\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    Avatar,\n    Button,\n    Container, Divider,\n    FormControl,\n    Grid,\n    InputAdornment, Link,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from '../abis/IPancakeRouter.json';\nimport uni_abi from '../abis/IUniswapV2Pair.json';\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x6483f166b9e4310a165a55fea04f867499aded06';\nconst routerAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E';\nconst easyBridgeAddress = '0xf79fa369aF0FC52260Bef080A62Cb2501863cfF7';\n\nexport default function EasyBridge() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n    const [amount, setAmount] = useState(\"\");\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0])\n    const [fuseOut, setFuseOut] = useState(0);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getFuseAmt = () => {\n\n        if (!amount || !reserves[0] || !reserves[1]) {\n            setFuseOut(undefined)\n            return;\n        }\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toBN(amount * (10 ** 18)), reserves[1], reserves[0]).call((err, resp) => {\n            setFuseOut(resp / (10 ** 18) * .98);\n        })\n    }\n\n    useEffect(getFuseAmt, [amount, reserves]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const bridge = () => {\n\n        const web3 = new Web3(window.provider);\n\n        web3.eth\n            .sendTransaction({\n                    to: easyBridgeAddress,\n                    from: wallet.address,\n                    value: web3.utils.toBN(amount * (10 ** 18))\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.logs[10].data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <FormControl fullWidth>\n                        <TextField\n                            autoComplete=\"off\"\n                            type=\"number\"\n                            value={amount}\n                            placeholder=\"Enter Amount\"\n                            onChange={(ev) => {\n                                setAmount(ev.target.value)\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    style: {textAlign: \"right\"},\n                                },\n                                startAdornment: <Avatar style={{marginRight: 10}} sx={{width: 24, height: 24}}\n                                                        src={`https://coineus.app/assets/tokens/bnb/logo.png`}/>,\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <Button variant=\"contained\" onClick={() => {\n                                        setAmount(wallet.balances.bnb.native)\n                                    }\n                                    }>MAX</Button>\n                                </InputAdornment>,\n                            }}\n                        />\n                    </FormControl>\n                    <ListItem disablePadding style={{marginTop: 10}}>\n                        <ListItemAvatar>\n                            <Avatar style={{marginLeft: 15}} sx={{width: 24, height: 24}}\n                                    src={`https://coineus.app/assets/tokens/fuse/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(fuseOut)} FUSE`}\n                            secondary=\"Estimated Out\"\n                            primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                            secondaryTypographyProps={{textAlign: 'right'}}\n                        />\n                    </ListItem>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 10}}\n                        onClick={bridge}\n                        disabled={!wallet.address || wallet.chain !== 56 || amount > wallet.balances.bnb.native}\n                    >BRIDGE</Button>\n                </Paper>\n                <Divider style={{marginTop: 10}}>SMART CHAIN</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    network=\"bnb\"\n                    name=\"BNB\"\n                    native\n                    price={wallet.prices.bnb?.native}\n                    wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                />\n\n                <Divider style={{marginTop: 10}}>FUSE NETWORK</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                    network=\"fuse\"\n                    name=\"FUSE\"\n                    native\n                    price={wallet.prices.fuse?.native}\n                />\n\n                {\n                    amtRecieved !== undefined && <>\n                        <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                        <Paper\n                            style={{\n                                backgroundColor: 'white',\n                                color: \"#000\",\n                                padding: 20,\n                                fontFamily: 'monospace'\n                            }}>\n                            <Grid container>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>Bridged</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(amtRecieved)} FUSE`}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(txCost)} BNB`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={6}/>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusUSDFormat(txCost * wallet.prices.bnb?.native?.inUSD)} USD`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                        <Link\n                                            style={{color: \"#000\", textDecorationColor: '#000'}}\n                                            href={`https://bscscan.com/tx/${txHash}`}\n                                            target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}}>\n                                    <Typography style={{fontFamily: 'monospace'}}>FUSE Balance update pending...</Typography>\n                                </Grid>\n                            </Grid>\n\n                        </Paper>\n                    </>\n                }\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {Alert, Button, Container, Divider, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\n\nimport faucet_abi from '../abis/cnsone_faucet.json';\nimport {useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst FAUCET_ADDRESS = '0xb4e09d2d0eF6CeBdfFc1Ff027729cE567354D82E';\n\nexport default function CNSONEFaucet() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [faucetData, setFaucetData] = useState(undefined);\n    const [userFaucetData, setUserFaucetData] = useState(undefined);\n    const [disabled, setDisabled] = useState(false);\n    const [disabledReason, setDisabledReason] = useState(undefined);\n\n    const web3FUSE = new Web3(rpc.fuse);\n    const faucet_contract = new web3FUSE.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n    const getInfo = () => {\n        const calls = [\n            faucet_contract.methods.getClaimPaused().call,\n            faucet_contract.methods.getClaimableAmount().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getStats().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getLockedAmount().call\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [\n                paused,\n                claimable,\n                minBalance,\n                stats,\n                minToClaim,\n                lockedAmount\n            ] = resp;\n\n            setFaucetData({\n                paused,\n                claimable,\n                minBalance,\n                stats,\n                minToClaim,\n                lockedAmount\n            })\n\n        })\n    }\n\n    const getUserInfo = () => {\n\n        if (!wallet.address) {\n            return;\n        }\n\n        const calls = [\n            faucet_contract.methods.getStatsByAddress(wallet.address).call\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [\n                stats\n            ] = resp;\n\n            setUserFaucetData({\n                stats\n            })\n\n        })\n    }\n\n    useEffect(()=> {\n\n        if(!wallet.address) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to claim`)\n            return;\n        }\n\n        if(\n            faucetData &&\n            faucetData.paused) {\n\n            setDisabled(true);\n            setDisabledReason(`Claiming is paused`);\n            return;\n        }\n\n        if(\n            faucetData &&\n            wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] +\n            wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] <\n            (faucetData.minBalance / (10**18))) {\n\n            setDisabled(true);\n            setDisabledReason(`You need to hold at least ${(faucetData.minBalance / (10**18))} CNS/CNSONE to claim`);\n            return;\n        }\n\n        const now = (new Date()).getTime();\n        if(userFaucetData && userFaucetData.stats && userFaucetData.stats.timeCanClaim > parseInt(now/1000)) {\n            setDisabled(true);\n            setDisabledReason(`You can claim again at ${new Date(userFaucetData.stats.timeCanClaim * 1000).toLocaleString()}`);\n            return true;\n        }\n\n        setDisabled(false);\n        setDisabledReason(undefined);\n\n    }, [wallet.address, faucetData, userFaucetData])\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 5000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(getUserInfo, [wallet.address]);\n\n    const claim = () => {\n        if(wallet.address){\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods\n                .claim()\n                .send({\n                    from: wallet.address,\n                    gasPrice: 10000000000\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                    console.log(tx)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    console.log(error);\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    getUserInfo();\n                    setPending(false);\n                });\n\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                {\n                    faucetData !== undefined && <Grid item xs={12}>\n                        <Grid item xs={12}>\n                            <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.claimable))} CNSONE` || '--'}\n                                        secondary={`Claimable Amount (≈${CoineusUSDFormat(formatWeiToNumber(faucetData.claimable) * wallet.prices.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022']?.inUSD)})`}\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.75rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            {/*TODO disable button based on params*/}\n                            <Button\n                                variant=\"contained\"\n                                fullWidth\n                                style={{marginTop:20}}\n                                disabled={disabled}\n                                onClick={claim}\n                            >CLAIM</Button>\n                        </Grid>\n                    </Grid>\n                }\n\n                {\n                    disabled && <Grid item xs={12}>\n                        <Alert severity=\"error\" variant=\"filled\">{disabledReason}</Alert>\n                    </Grid>\n                }\n\n                {\n                    faucetData !== undefined && <Grid item xs={12}>\n                        <Divider style={{marginBottom: 10}}>OVERALL FAUCET STATS</Divider>\n                        <Paper>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.claimedAllTime))} CNSONE`}\n                                    secondary=\"Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusUSDFormat(formatWeiToNumber(faucetData.stats.claimedAllTime) * wallet.prices.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022']?.inUSD)}`}\n                                    secondary=\"Today's Value\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.numberOfClaimsAllTime}\n                                    secondary=\"Number of Claims\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.averageClaim))} CNSONE`}\n                                    secondary=\"Average Claimed\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.highestClaimed))} CNSONE`}\n                                    secondary=\"Highest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.highestClaimedBy}\n                                    secondary=\"Highest Amount Claimed By\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.lowestClaimed))} CNSONE`}\n                                    secondary=\"Lowest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.lowestClaimedBy}\n                                    secondary=\"Lowest Amount Claimed By\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.minToClaim))} CNS/CNSONE`}\n                                    secondary=\"Need To Hold To Claim\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.lockedAmount))} CNSONE`}\n                                    secondary=\"Amount Locked\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </Grid>\n                }\n\n                {\n                    userFaucetData !== undefined && <Grid item xs={12}>\n                        <Divider style={{marginBottom: 10}}>MY FAUCET STATS</Divider>\n                        <Paper>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime))} CNSONE`}\n                                    secondary=\"Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusUSDFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime)* wallet.prices.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022']?.inUSD)}`}\n                                    secondary=\"Today's Value\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={userFaucetData.stats.numberOfClaimsAllTime}\n                                    secondary=\"Number of Claims\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.averageClaim))} CNSONE`}\n                                    secondary=\"Average Claimed\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.highestClaimed))} CNSONE`}\n                                    secondary=\"Highest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.lowestClaimed))} CNSONE`}\n                                    secondary=\"Lowest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    )\n}","import {Alert, Button, Container, Divider, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\n\nimport faucet_abi from '../abis/fuse_faucet.json';\nimport {useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst FAUCET_ADDRESS = '0xFbE136842930Ed73a2E315b65f916Dfd1DBa4595';\n\nexport default function FUSEFaucet() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [faucetData, setFaucetData] = useState(undefined);\n    const [userFaucetData, setUserFaucetData] = useState(undefined);\n    const [disabled, setDisabled] = useState(false);\n    const [disabledReason, setDisabledReason] = useState(undefined);\n\n    const web3FUSE = new Web3(rpc.fuse);\n    const faucet_contract = new web3FUSE.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n    const getInfo = () => {\n        const calls = [\n            faucet_contract.methods.getClaimPaused().call,\n            faucet_contract.methods.getClaimableAmount().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getStats().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getDelegatedAmount().call\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [\n                paused,\n                claimable,\n                minBalance,\n                stats,\n                minToClaim,\n                delegatedAmount\n            ] = resp;\n\n            setFaucetData({\n                paused,\n                claimable,\n                minBalance,\n                stats,\n                minToClaim,\n                delegatedAmount\n            })\n\n        })\n    }\n\n    const getUserInfo = () => {\n\n        if (!wallet.address) {\n            return;\n        }\n\n        const calls = [\n            faucet_contract.methods.getStatsByAddress(wallet.address).call\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [\n                stats\n            ] = resp;\n\n            setUserFaucetData({\n                stats\n            })\n\n        })\n    }\n\n    useEffect(()=> {\n\n        if(!wallet.address) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to claim`)\n            return;\n        }\n\n        if(\n            faucetData &&\n            faucetData.paused) {\n\n            setDisabled(true);\n            setDisabledReason(`Claiming is paused`);\n            return;\n        }\n\n        if(\n            faucetData &&\n            wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] +\n            wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] <\n            (faucetData.minBalance / (10**18))) {\n\n            setDisabled(true);\n            setDisabledReason(`You need to hold at least ${(faucetData.minBalance / (10**18))} CNS/CNSONE to claim`);\n            return;\n        }\n\n        const now = (new Date()).getTime();\n        if(userFaucetData && userFaucetData.stats && userFaucetData.stats.timeCanClaim > parseInt(now/1000)) {\n            setDisabled(true);\n            setDisabledReason(`You can claim again at ${new Date(userFaucetData.stats.timeCanClaim * 1000).toLocaleString()}`);\n            return true;\n        }\n\n        setDisabled(false);\n        setDisabledReason(undefined);\n\n    }, [wallet.address, faucetData, userFaucetData])\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 5000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(getUserInfo, [wallet.address]);\n\n    const claim = () => {\n        if(wallet.address){\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods\n                .claim()\n                .send({\n                    from: wallet.address,\n                    gasPrice: 10000000000\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                    console.log(tx)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    console.log(error);\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    getUserInfo();\n                    setPending(false);\n                });\n\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                {\n                    faucetData !== undefined && <Grid item xs={12}>\n                        <Grid item xs={12}>\n                            <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.claimable))} FUSE` || '--'}\n                                        secondary={`Claimable Amount (≈${CoineusUSDFormat(formatWeiToNumber(faucetData.claimable) * wallet.prices.fuse.native?.inUSD)})`}\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.75rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            {/*TODO disable button based on params*/}\n                            <Button\n                                variant=\"contained\"\n                                fullWidth\n                                style={{marginTop:20}}\n                                disabled={disabled}\n                                onClick={claim}\n                            >CLAIM</Button>\n                        </Grid>\n                    </Grid>\n                }\n\n                {\n                    disabled && <Grid item xs={12}>\n                        <Alert severity=\"error\" variant=\"filled\">{disabledReason}</Alert>\n                    </Grid>\n                }\n\n                {\n                    faucetData !== undefined && <Grid item xs={12}>\n                        <Divider style={{marginBottom: 10}}>OVERALL FAUCET STATS</Divider>\n                        <Paper>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.claimedAllTime))} FUSE`}\n                                    secondary=\"Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusUSDFormat(formatWeiToNumber(faucetData.stats.claimedAllTime) * wallet.prices.fuse.native?.inUSD)}`}\n                                    secondary=\"Today's Value\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.numberOfClaimsAllTime}\n                                    secondary=\"Number of Claims\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.averageClaim))} FUSE`}\n                                    secondary=\"Average Claimed\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.highestClaimed))} FUSE`}\n                                    secondary=\"Highest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.highestClaimedBy}\n                                    secondary=\"Highest Amount Claimed By\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.minToClaim))} CNS/CNSONE`}\n                                    secondary=\"Need To Hold To Claim\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.delegatedAmount))} FUSE`}\n                                    secondary=\"Delegated Amount\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </Grid>\n                }\n\n                {\n                    userFaucetData !== undefined && <Grid item xs={12}>\n                        <Divider style={{marginBottom: 10}}>MY FAUCET STATS</Divider>\n                        <Paper>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime))} FUSE`}\n                                    secondary=\"Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusUSDFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime)* wallet.prices.fuse.native?.inUSD)}`}\n                                    secondary=\"Today's Value\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={userFaucetData.stats.numberOfClaimsAllTime}\n                                    secondary=\"Number of Claims\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.averageClaim))} FUSE`}\n                                    secondary=\"Average Claimed\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.highestClaimed))} FUSE`}\n                                    secondary=\"Highest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.lowestClaimed))} FUSE`}\n                                    secondary=\"Lowest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    )\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\nimport EasyBridge from \"./views/EasyBridge\";\nimport CNSONEFaucet from \"./views/CNSONEFaucet\";\nimport FUSEFaucet from \"./views/FUSEFaucet\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                            <Route\n                                path={`/easybridge`}\n                                exact={true}\n                                element={<EasyBridge />}\n                            />\n                            <Route\n                                path={`/faucet`}\n                                exact={true}\n                                element={<CNSONEFaucet />}\n                            />\n                            <Route\n                                path={`/fuse-faucet`}\n                                exact={true}\n                                element={<FUSEFaucet />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/faucet'}>\n                            <ListItemText primary=\"CNSONE Faucet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/fuse-faucet'}>\n                            <ListItemText primary=\"FUSE Faucet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/easybridge'}>\n                            <ListItemText primary=\"Easy Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        {/*<ListItem button component={RouterLink} to={'/sale'}>*/}\n                        {/*    <ListItemText primary=\"Projects For Sale\" primaryTypographyProps={{style:{fontWeight:700}}}/>*/}\n                        {/*</ListItem>*/}\n                        {\n                            [\"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\", \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\"].indexOf(wallet.address) > -1 && <ListItem button component={RouterLink} to={'/rewards'}>\n                                <ListItemText primary=\"Rewards Lockers\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                            </ListItem>\n                        }\n\n\n                        <ListSubheader>CNS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://explorer.fuse.io/token/0xc2E299b47398963c618De5b05C6BdeCd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>FUSE NETWORK</ListSubheader>\n                        <ListItem button component={Link} href={'https://router.via.exchange/avalanche/AVAX/fuse/FUSE'} target=\"_blank\">\n                            <ListItemText primary=\"AVAX Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"ETH/BNB Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://get.fuse.cash/mrxn/46qbc3i4'} target=\"_blank\">\n                            <ListItemText primary=\"fuse.cash\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/FAsz89g5RT'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.youtube.com/channel/UCehh09nIOF-2BJ6YyIq3-RQ'} target=\"_blank\">\n                            <ListItemText primary=\"YouTube\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://medium.com/@coineus'} target=\"_blank\">\n                            <ListItemText primary=\"Medium\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://github.com/CoineusCrypto/'} target=\"_blank\">\n                            <ListItemText primary=\"GitHub\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'mailto:contact@coineus.app'} target=\"_blank\">\n                            <ListItemText primary=\"contact@coineus.app\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    if(token_info.dexscreenerChain && token_info.dexscreenerPair) {\n                        calls.push(axios\n                            .get(`https://api.dexscreener.com/latest/dex/pairs/${token_info.dexscreenerChain}/${token_info.dexscreenerPair}`)\n                            .then(resp => {\n                                const {pair} = resp.data;\n                                if(pair){\n                                    token_info.pair = pair;\n                                }\n                            }));\n                    }\n\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}