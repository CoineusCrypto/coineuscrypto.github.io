{"version":3,"sources":["theme.js","images/logo.svg","utils/promisify.js","redux/slices/coineusSlice.js","images/logo192.png","images/fuse_logo.png","images/fusd_logo.png","images/avax_logo.png","images/usdc_logo.png","images/fook_logo.jpeg","images/fud_logo.jpeg","images/bnb_logo.png","images/feg_logo.png","utils/format.js","components/CoineusLoading.js","utils/currency_format.js","components/TokenListItem.js","views/HomePage.js","redux/store.js","utils/fuse_price.js","views/Staking.js","Coineus.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","coineusInfo","fookInfo","fudInfo","balance","avax_balance","bnb_balance","fusd_balance","usdc_balance","fook_balance","fud_balance","feg_balance","prices","avax","fuse","bnb","fusd","usdc","cns","fook","fud","feg","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","BNBBUSDpair","FEGBNBpair","rpc","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","updateWalletFOOKInfo","updateWalletFUDInfo","updateWalletBalance","updateWalletAVAXBalance","updateWalletFUSDBalance","updateWalletUSDCBalance","updateWalletFOOKBalance","updateWalletFUDBalance","updateWalletBNBBalance","updateWalletFEGBalance","resetWallet","updatePrices","price","actions","formatWei","value","round","decimals","BigNumber","div","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","fuse_logo","avax_logo","bnb_logo","TokenListItem","classes","logo","network","rewards","rewardsClaim","Paper","marginBottom","ListItem","secondaryAction","ListItemAvatar","Avatar","className","clsx","ListItemText","secondary","inUSD","primaryTypographyProps","fontWeight","secondaryTypographyProps","color","allTime","symbol","pending","HomePage","dispatch","useDispatch","useSelector","coineus","CoineusContractAddress","useState","setPending","stakeOpen","setStakeOpen","totalD","setTotalD","useEffect","getUserInfo","getCoineusInfo","interval","setInterval","clearInterval","Web3","eth","Contract","coineus_abi","methods","getTotalDividendsDistributed","then","resp","td","getBalance","contract","fusd_contract","balanceOf","getAccountDividendsInfo","info","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","web3AVAX","fook_contract","fud_contract","usdc_contract","callsAVAX","fud_info","catch","console","log","web3BSC","callsBSC","Container","maxWidth","Grid","container","spacing","paddingBottom","item","xs","backgroundColor","toLocaleString","fontSize","Button","variant","fullWidth","href","target","Link","to","component","RouterLink","textDecoration","Divider","IconButton","disabled","edge","onClick","PowerStake","amount","close","onSubmit","onSuccess","onError","fusd_logo","window","provider","claim","send","from","once","tx","on","error","receipt","usdc_logo","fud_logo","fook_logo","feg_logo","DialogActions","consensus_abi","delegate","configureStore","reducer","coineusReducer","getPairPrices","store","getState","fusd_fuse","unipair_abi","cns_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","usdc_avax_reserves","fook_avax_reserves","avax_price","inAVAX","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","coineusValidatorAddress","consensusAddress","consensusContract","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setAmount","setData","connectedContract","setConnectedContract","setAction","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","push","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","fuse_balance","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","estimateGas","gas","getGasPrice","gasPrice","encodeABI","txData","handleError","message","toString","withdraw","LinearProgress","Math","floor","List","disablePadding","disableGutters","Tabs","onChange","ev","val","Tab","id","Box","FormControl","TextField","autoComplete","placeholder","InputProps","endAdornment","InputAdornment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","sx","bottom","Alert","elevation","icon","Coineus","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","chainId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","flexGrow","substr","connectWallet","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ca9741c.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        coineusInfo: undefined,\n        fookInfo: undefined,\n        fudInfo: undefined,\n\n        balance: undefined,\n        avax_balance: undefined,\n        bnb_balance: undefined,\n\n        fusd_balance: undefined,\n        usdc_balance: undefined,\n\n        fook_balance: undefined,\n        fud_balance: undefined,\n        feg_balance: undefined,\n    },\n    prices: {\n        avax: undefined,\n        fuse: undefined,\n        bnb: undefined,\n        fusd: undefined,\n        usdc: undefined,\n\n        cns: undefined,\n        fook: undefined,\n        fud: undefined,\n        feg: undefined,\n\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14'\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/'\n    }\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        updateWalletFOOKInfo(state, action) {\n            state.wallet.fookInfo = action.payload\n        },\n\n        updateWalletFUDInfo(state, action) {\n            state.wallet.fudInfo = action.payload\n        },\n\n        updateWalletBalance(state, action) {\n            state.wallet.balance = action.payload\n        },\n\n        updateWalletAVAXBalance(state, action) {\n            state.wallet.avax_balance = action.payload\n        },\n\n        updateWalletFUSDBalance(state, action) {\n            state.wallet.fusd_balance = action.payload\n        },\n\n        updateWalletUSDCBalance(state, action) {\n            state.wallet.usdc_balance = action.payload\n        },\n\n        updateWalletFOOKBalance(state, action) {\n            state.wallet.fook_balance = action.payload\n        },\n\n        updateWalletFUDBalance(state, action) {\n            state.wallet.fud_balance = action.payload\n        },\n\n        updateWalletBNBBalance(state, action) {\n            state.wallet.bnb_balance = action.payload\n        },\n\n        updateWalletFEGBalance(state, action) {\n            state.wallet.feg_balance = action.payload\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n            state.wallet.fookInfo = undefined;\n            state.wallet.fudInfo = undefined;\n        },\n\n        updatePrices(state, action) {\n            state.prices[action.payload.name] = action.payload.price;\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo,\n    updateWalletBalance,\n    updateWalletAVAXBalance,\n    updateWalletFUSDBalance,\n    updateWalletUSDCBalance,\n    updateWalletFOOKBalance,\n    updateWalletFUDBalance,\n    updateWalletBNBBalance,\n    updateWalletFEGBalance,\n    resetWallet,\n    updatePrices\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","export default __webpack_public_path__ + \"static/media/fuse_logo.f2df0430.png\";","export default __webpack_public_path__ + \"static/media/fusd_logo.a63edb36.png\";","export default __webpack_public_path__ + \"static/media/avax_logo.30dfa545.png\";","export default __webpack_public_path__ + \"static/media/usdc_logo.b5121d0d.png\";","export default __webpack_public_path__ + \"static/media/fook_logo.3822b487.jpeg\";","export default __webpack_public_path__ + \"static/media/fud_logo.8daa8e25.jpeg\";","export default __webpack_public_path__ + \"static/media/bnb_logo.0bb49761.png\";","export default __webpack_public_path__ + \"static/media/feg_logo.ec53c63e.png\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    let maxDigits = number ? parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1 : 2;\n\n    if (maxDigits > 12) maxDigits = 12;\n\n    let minDigits = 2;\n    if(number < 1) minDigits = 4;\n\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport fuse_logo from \"../images/fuse_logo.png\";\nimport avax_logo from \"../images/avax_logo.png\";\nimport bnb_logo from \"../images/bnb_logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('${fuse_logo}')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('${avax_logo}')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('${bnb_logo}')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {name, logo, network, price, balance, rewards, rewardsClaim} = props;\n\n    return <Paper style={{marginTop: 10, marginBottom:5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar>\n                <Avatar src={logo}/>\n                {network && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(balance)}\n                secondary={CoineusUSDFormat(price?.inUSD * balance)}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards && <ListItem style={{color: '#fbca00'}}>\n                <ListItemText\n                    primary='Rewards All-time'\n                    secondary='Pending'\n                    primaryTypographyProps={{fontWeight: 700}}\n                />\n                <ListItemText\n                    primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                    secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    secondaryTypographyProps={{textAlign: 'right'}}\n                />\n            </ListItem>\n        }\n        {rewardsClaim}\n    </Paper>\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    CircularProgress,\n    Container, Dialog,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Link,\n    Typography, Divider, IconButton, DialogContent, DialogActions\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {\n    updateWalletAVAXBalance,\n    updateWalletBalance,\n    updateWalletBNBBalance,\n    updateWalletCoineusInfo,\n    updateWalletFEGBalance,\n    updateWalletFOOKBalance,\n    updateWalletFOOKInfo,\n    updateWalletFUDBalance,\n    updateWalletFUDInfo,\n    updateWalletFUSDBalance,\n    updateWalletUSDCBalance\n} from \"../redux/slices/coineusSlice\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\n\nimport cns_logo from \"../images/logo192.png\";\nimport fuse_logo from \"../images/fuse_logo.png\";\nimport fusd_logo from \"../images/fusd_logo.png\";\nimport avax_logo from \"../images/avax_logo.png\";\nimport usdc_logo from \"../images/usdc_logo.png\";\nimport fook_logo from \"../images/fook_logo.jpeg\";\nimport fud_logo from \"../images/fud_logo.jpeg\";\nimport bnb_logo from \"../images/bnb_logo.png\";\nimport feg_logo from \"../images/feg_logo.png\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n    const CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\n\n    const [pending, setPending] = useState(false);\n\n    const [stakeOpen, setStakeOpen] = useState(false)\n\n    const [totalD, setTotalD] = useState(0);\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address]);\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n        });\n\n    }\n\n    const getUserInfo = () => {\n\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletBalance(resp / (10 ** 18)))\n        })\n\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249be57637d8b013ad64785404b24aebae9b098b');\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            fusd_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                balance,\n                info,\n                fusd_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletCoineusInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFUSDBalance(fusd_balance / (10 ** 18)));\n\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletAVAXBalance(resp / (10 ** 18)))\n        })\n\n        const fook_contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const fud_contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n        const usdc_contract = new web3.eth.Contract(coineus_abi, '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(wallet.address).call,\n            fook_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.getAccountDividendsInfo(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance,\n                fud_balance,\n                fud_info\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFOOKInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFOOKBalance(balance));\n            dispatch(updateWalletUSDCBalance(usdc_balance / (10 ** 6)));\n\n            // FUD TOKEN\n            withdrawableDividends = fud_info[3];\n            totalDividends = fud_info[4];\n            secondsUntilAutoClaimAvailable = fud_info[7];\n\n            fud_balance = fud_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFUDInfo({\n                balance: fud_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFUDBalance(fud_balance));\n\n        })\n            .catch(console.log)\n\n        //BNB\n        const web3BSC = new Web3('https://bsc-dataseed1.binance.org/');\n        web3BSC.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletBNBBalance(resp / (10 ** 18)))\n        })\n\n        const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n        const callsBSC = [\n            feg_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3BSC, callsBSC).then(resp => {\n            let [\n                balance,\n            ] = resp;\n\n            dispatch(updateWalletFEGBalance(balance / (10 ** 9)));\n\n        })\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={cns_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(prices.cns?.inUSD)}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={fuse_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(prices.fuse?.inUSD)}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={avax_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(prices.avax?.inUSD)}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={bnb_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(prices.bnb?.inUSD)}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} fUSD` || '--'}\n                                secondary=\"Total Rewards Distributed All-time\"\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{textAlign: 'right', color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022\"\n                                    target=\"_blank\">Swap</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75\"\n                                    target=\"_blank\">Chart</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth href=\"https://app.voltage.finance/#/bridge\"\n                                    target=\"_blank\">Bridge</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Link to={\"/staking\"} component={RouterLink} style={{textDecoration: 'none'}}>\n                                <Button variant=\"contained\" fullWidth\n                                        target=\"_blank\">Stake</Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n\n                    <Divider>FUSE</Divider>\n\n                    {/*FUSE*/}\n                    <TokenListItem\n                        name=\"FUSE\"\n                        logo={fuse_logo}\n                        price={prices.fuse}\n                        balance={wallet.balance}\n                        secondaryAction={\n                            <IconButton disabled={wallet.chain !== 122} edge=\"end\" aria-label=\"stake\" onClick={() => setStakeOpen(true)}>\n                                <BoltIcon color={wallet.chain !== 122 ? \"disabled\" : \"primary\"}/>\n                            </IconButton>\n                        }\n                    />\n                    <PowerStake\n                        open={stakeOpen}\n                        amount={wallet.balance}\n                        close={() => setStakeOpen(false)}\n                        onSubmit={()=>{\n                            setStakeOpen(false);\n                            setPending(true);\n                        }}\n                        onSuccess={()=>{\n                            getUserInfo();\n                            setPending(false);\n                        }}\n                        onError={(err)=>{\n                            setPending(false);\n                        }}\n                    />\n\n                    {/*fUSD*/}\n                    <TokenListItem\n                        name=\"fUSD\"\n                        logo={fusd_logo}\n                        network=\"fuse\"\n                        price={{inUSD: 1}}\n                        balance={wallet.fusd_balance}\n                    />\n\n                    {/*CNS*/}\n                    <TokenListItem\n                        name=\"CNS\"\n                        logo={cns_logo}\n                        network=\"fuse\"\n                        price={prices.cns}\n                        balance={wallet.coineusInfo?.balance}\n                        rewards={{\n                            allTime: wallet.coineusInfo?.totalDividends,\n                            pending: wallet.coineusInfo?.withdrawableDividends,\n                            symbol: 'fUSD'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claim} variant='contained' fullWidth\n                                        disabled={wallet.chain !== 122 || wallet.coineusInfo?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    <Divider>AVAX</Divider>\n\n                    {/*AVAX*/}\n                    <TokenListItem\n                        name=\"AVAX\"\n                        logo={avax_logo}\n                        price={prices.avax}\n                        balance={wallet.avax_balance}\n                    />\n\n                    {/*USDC*/}\n                    <TokenListItem\n                        name=\"USDC\"\n                        logo={usdc_logo}\n                        network=\"avax\"\n                        price={{inUSD: 1}}\n                        balance={wallet.usdc_balance}\n                    />\n\n                    {/*FUD*/}\n                    <TokenListItem\n                        name=\"FUD\"\n                        logo={fud_logo}\n                        network=\"avax\"\n                        price={prices.fud}\n                        balance={wallet.fudInfo?.balance}\n                        rewards={{\n                            allTime: wallet.fudInfo?.totalDividends,\n                            pending: wallet.fudInfo?.withdrawableDividends,\n                            symbol: 'WAVAX'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFud} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fudInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    {/*FOOK*/}\n                    <TokenListItem\n                        name=\"FOOK\"\n                        logo={fook_logo}\n                        network=\"avax\"\n                        price={prices.fook}\n                        balance={wallet.fookInfo?.balance}\n                        rewards={{\n                            allTime: wallet.fookInfo?.totalDividends,\n                            pending: wallet.fookInfo?.withdrawableDividends,\n                            symbol: 'USDC'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFook} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fookInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    <Divider>BNB</Divider>\n\n                    {/*BNB*/}\n                    <TokenListItem\n                        name=\"BNB\"\n                        logo={bnb_logo}\n                        price={prices.bnb}\n                        balance={wallet.bnb_balance}\n                    />\n\n                    {/*FEG*/}\n                    <TokenListItem\n                        name=\"FEG\"\n                        logo={feg_logo}\n                        network=\"bnb\"\n                        price={prices.feg}\n                        balance={wallet.feg_balance}\n                    />\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\n\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, consensusAddress)\n\n        connectedContract.methods\n            .delegate(coineusValidatorAddress)\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1)\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{(amount - .1).toLocaleString('en-US', {maximumFractionDigits: 8})}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer\n    }\n})\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices, rpc} = _store.coineus;\n\n    //FUSE\n    const web3 = new Web3(rpc.fuse);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, prices.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, prices.CNSFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves\n            ] = resp\n\n            store.dispatch(updatePrices({\n                name: 'fuse',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fusd',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'cns',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n        });\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc.avax);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            store.dispatch(updatePrices({\n                name: 'avax',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'usdc',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fook',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n        });\n\n\n    //BSC\n    const web3BSC = new Web3(rpc.bnb);\n    const bnb_busd = new web3AVAX.eth.Contract(unipair_abi, prices.BNBBUSDpair);\n    const feg_bnb = new web3AVAX.eth.Contract(unipair_abi, prices.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            store.dispatch(updatePrices({\n                name: 'bnb',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'feg',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n        });\n}","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {updateWalletBalance} from \"../redux/slices/coineusSlice\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n\n            web3.eth.getBalance(wallet.address).then(resp => {\n                dispatch(updateWalletBalance(resp / (10 ** 18)));\n            })\n        } else {\n            dispatch(updateWalletBalance(0));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            //get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {});\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h4\">{data.amount_delegated?.toLocaleString()}</Typography>\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated/5000000)*100}  style={{marginTop:10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\" style={{display:'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} / 5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{data.staked_amount ? (data.staked_amount / (10 ** 18)).toLocaleString() : '--'}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                            <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                        </Tabs>\n                        {\n                            action === \"stake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"FUSE Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(wallet.balance || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > 5000000) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balance - .1)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                                <List style={{marginTop: 20}}>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Block\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Year\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Box>\n                        }\n\n                        {\n                            action === \"unstake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Staked FUSE\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(data.staked_amount / (10 ** 18))\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                        onClick={withdraw}>Unstake</Button>\n                            </Box>\n                        }\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\" />\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {AppBar, Avatar, Button, CssBaseline, Grid, ThemeProvider, Toolbar} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\nimport Staking from \"./views/Staking\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if(window.ethereum){\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return ()=> clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none'}}\n                        >\n                            <Avatar src={logo} height={40} />\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {clearWallet();}}\n                                >0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n            </Router>\n        </ThemeProvider>\n    )\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}