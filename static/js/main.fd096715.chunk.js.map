{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","utils/index.js","components/SparkChart.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","components/LPTokenListItem.js","components/ONES/CEUSONE.js","components/ONES/SRGONE.js","components/icons/AssetBackingIcon.js","constants/chains.js","components/Coineus/NetworkButton/NetworkButton.js","components/AssetBacking/LIT.js","components/AssetBacking/CEUS.js","components/AssetBacking/LITSRG20.js","components/AssetBacking/CHADBNB.js","components/AssetBacking/PEPEARB.js","components/AssetBacking/CHADARB.js","components/ONES/FUSEONE.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusPortfolio.js","components/BurntSupply.js","views/Stats.js","views/EasyBridge.js","views/Admin.js","components/SwapInput.js","components/Swap/TokenList.js","components/Swap/TransactionReceipt.js","views/Swap.js","views/validators/Validator.js","views/VoltageLiquidity.js","views/Faucets/CEUSONEFacuet.js","views/Faucets/SRGONEFaucet.js","views/Faucets/SRGONESuperFaucet.js","components/ChainSelector.js","views/Farm.js","views/CHADBNBStaking.js","views/CHADBNBStaking_old.js","views/Faucets/Faucets.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","formatWeiToNumber","value","decimals","arguments","length","undefined","BigNumber","div","Math","pow","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","_jsx","Dialog","open","children","_jsxs","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","_ref","chain_id","pair_address","concat","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","pair","_useGetTokenQuery","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","_Fragment","PairDetails","_token_list$tokens$ne","token_list","tokens","dexscreenerPair","p","map","toLowerCase","pairAddress","findPair","Markets","item","xs","classes","_useState","useState","_useState2","_slicedToArray","snackbarOpen","setSnackBarOpen","getColorClass","_data$baseToken","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","secondaryAction","IconButton","edge","text","callback","navigator","clipboard","writeText","then","err","ContentCopyIcon","primaryTypographyProps","fontSize","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","Snackbar","onClose","autoHideDuration","Alert","severity","sx","variant","getDexLabel","id","List","_pair$liquidity","dexId","secondaryTypographyProps","SparkChart","ref","chartdata","Tooltip","title","cursor","FlexibleWidthXYPlot","strokeWidth","left","bottom","GradientDefs","x1","x2","y1","y2","offset","stopColor","stopOpacity","AreaSeries","fill","stroke","LineSeries","TokenListItem","_wallet$staked$networ","_wallet$staked$networ2","wallet","useSelector","state","coineus","invertPrice","price","rewards","rewardsClaim","native","cnsDetails","srgDetails","detailsLabel","rewardsSymbol","rewardsUSD","rewardsRealised","rewardsRealisedUSD","setOpen","_useState3","_useState4","chartData","setChartData","_useState5","_useState6","setPercentageChange","useEffect","axios","post","parseInt","Date","setHours","resp","pairHourData","h","push","x","hourStartUnix","y","reserve1","reserve0","token","dayData","day0","priceUSD","day1","balances","Paper","marginBottom","pc","displayPrice","inUSD","minWidth","maxWidth","flex","window","staked","paddingTop","paddingRight","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","getSRGEarned","PriceScroll","list","setList","tmp","Object","entries","_ref2","chain","_ref3","_ref4","token_info","_token_info$pair","_unused","t","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","objectFit","Skeleton","visibility","paddingBottom","TrendingUpIcon","verticalAlign","marginRight","TrendingDownIcon","initialState","address","type","info","avax","fuse","bnb","eth","arb","lp","prices","totals","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","CEUSLITPair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","ARETHUSDCPair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateLPInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","_coineusSlice$actions","actions","configureStore","reducer","_defineProperty","coineusReducer","middleware","getDefaultMiddleware","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","catch","console","log","req","request","add","execute","all","getUserBalances","wallet_address","_store$coineus","store","getState","Web3","fuseone_contract","Contract","ceusone_abi","ceus_contract","coineus_abi","ceusone_contract","fusd_contract","volt_contract","fsb_contract","lit_contract","btc_contract","eth_contract","bnb_contract","wfuse_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","ceus_lit_contract","uni_pair_abi","ceus_fuse_contract","fuse_lit_contract","getBalance","methods","balanceOf","getAccount","delegatedAmount","getReserves","totalSupply","_resp","fuse_balance","fuseone_balance","fuseone_info","ceus_balance","ceusone_balance","ceusone_info","fusd_balance","volt_balance","staked_fuse_with_coineus","fsb_balance","lit_balance","btc_balance","eth_balance","bnb_balance","wfuse_balance","ceus_lit_balance","ceus_lit_reserves","ceus_lit_totalSupply","ceus_wfuse_balance","ceus_wfuse_reserves","ceus_wfuse_totalSupply","fuse_lit_balance","fuse_lit_reserves","fuse_lit_totalSupply","dispatch","account","token0","token1","share","getFUSE","web3AVAX","usdc_contract","dgnx_contract","callsAVAX","_resp2","avax_balance","usdc_balance","dgnx_balance","getAVAX","web3BSC","feg_contract","srg_contract","srgone_contract","srgone_abi","busd_contract","usdt_contract","bbks_abi","lit_dist","srg_dist_abi","chad_contract","chad_dist","pepe_contract","pepe_dist","callsBSC","checkPendingRewards","shares","_resp3","feg_balance","srg_balance","srgone_balance","srgone_info","busd_balance","usdt_balance","lit_rewards","lit_shares","chad_balance","chad_rewards","chad_shares","pepe_balance","pepe_rewards","pepe_shares","pending_rewards","total_realised","totalRealised","getBNB","web3ETH","bbks_contract","callsETH","_resp4","bbks_balance","getETH","_resp5","getARB","LPTokenListItem","token0Symbol","token1Symbol","lpRewards","setLpRewards","pairDayDatas","volumeUSD","untrackedVolumeUSD","reserveUSD","fee_share","yearly_fees","voltage_fee","apr","CEUS_CONTRACT_ADDRESS","CEUSONE_CONTRACT_ADDRESS","CEUSONE","onSuccess","pending","setPending","amount","setAmount","_useState7","_useState8","setAction","deposit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","coineus_contract","contract","_deposit","_context","prev","next","provider","coineusone_abi","allowance","approve","send","from","gasPrice","once","tx","on","error","receipt","stop","apply","withdraw","_callee2","_contract","_withdraw","_context2","disabled","SwapVerticalCircleIcon","fullWidth","Tabs","onChange","ev","val","Tab","Box","padding","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","SRG_CONTRACT_ADDRESS","SRGONE_CONTRACT_ADDRESS","SRGONE","srg_abi","AssetBackingOutlined","SvgIcon","_objectSpread","d","CHAIN_IDS","ETH","ARB","BNB","FUSE","AVAX","CHAIN_IDS_TO_NAMES","_CHAIN_IDS_TO_NAMES","CHAIN_IDS_TO_DISPLAY_NAMES","_CHAIN_IDS_TO_DISPLAY","CHAIN_IDS_TO_LOGO","_CHAIN_IDS_TO_LOGO","avatarSX","NetworkButton","buttonParentRef","useRef","buttonParentWidth","setButtonParentWidth","_buttonParentRef$curr","current","clientWidth","Error","changeNetwork","abrupt","ethereum","method","params","utils","toHex","ArrowRightAltIcon","LIT_AB_CONTRACT","LITAssetBacking","_wallet$prices$fuse2","_wallet$prices$fuse2$","_wallet$prices$fuse3","_wallet$prices$fuse3$","_wallet$prices$fuse4","_wallet$prices$fuse4$","_data$market_factor","_useSelector","loading","setLoading","_useState9","_useState10","setData","getBackingInfo","ASSET_BACKING_ABI","getBackingPerToken","getEligibleSupply","getONEWRAPBalance","MAIN_TOKEN","ONEWRAP","backingPerToken","eligibleSupply","ONEWRAPBalance","contract_main","IERC20_ABI","contract_onewrap","calls2","getBackingAmount","_wallet$prices$fuse","_wallet$prices$fuse$M","main_name","main_symbol","main_decimals","onewrap_name","onewrap_symbol","onewrap_decimals","userTotalBacking","market_factor","inBase","interval","setInterval","clearInterval","ceus_price_usd","lit_price_usd","lit_price_ceus","innerWidth","Container","dense","backgroundColor","Whatshot","main_contract","kill","killForBacking","CEUS_AB_CONTRACT","CEUSAssetBacking","inFuse","wfuse_price_usd","ceus_price_fuse","LITSRG20AssetBacking","_wallet$prices$bnb2","_wallet$prices$bnb2$d","_wallet$prices$bnb3","_wallet$prices$bnb3$d","_wallet$prices$bnb4","_wallet$prices$bnb4$d","UNWRAPPED","contract_unwrapped","_wallet$prices$bnb","_wallet$prices$bnb$MA","unwrappedBalance","depositUNWRAPPEDtoONEWRAP","CHADBNBAssetBacking","PEPEARB_AB_CONTRACT","PEPEARBAssetBacking","_wallet$prices$arb2","_wallet$prices$arb2$d","_wallet$prices$arb3","_wallet$prices$arb3$d","_wallet$prices$arb4","_wallet$prices$arb4$d","_wallet$prices$arb","_wallet$prices$arb$MA","CHADARB_AB_CONTRACT","CHADARBAssetBacking","FUSEONE_CONTRACT_ADDRESS","FUSEONE","_wallet$balances$fuse","_wallet$balances$fuse3","_wallet$balances$fuse2","HomePage","_wallet$info$fuse","_wallet$info$fuse2","_wallet$prices$fuse5","_wallet$prices$fuse6","_wallet$prices$fuse7","_wallet$prices$fuse8","_wallet$prices$fuse9","_wallet$prices$fuse10","_wallet$prices$fuse11","_wallet$prices$fuse12","_wallet$prices$fuse13","_wallet$prices$fuse14","_wallet$prices$avax","_wallet$prices$avax2","_wallet$prices$avax3","_wallet$info$bnb","_wallet$info$bnb$0xbC","_wallet$info$bnb2","_wallet$info$bnb2$0xb","_wallet$prices$bnb3$","_wallet$info$bnb3","_wallet$info$bnb3$0xb","_wallet$info$bnb4","_wallet$info$bnb4$0xb","_wallet$prices$bnb4$","_wallet$prices$bnb5","_wallet$info$bnb5","_wallet$info$bnb5$0xc","_wallet$info$bnb6","_wallet$info$bnb6$0xc","_wallet$prices$bnb6","_wallet$prices$bnb6$","_wallet$info$bnb7","_wallet$info$bnb7$0xc","_wallet$info$bnb8","_wallet$info$bnb8$0xc","_wallet$prices$bnb7","_wallet$prices$bnb7$","_wallet$prices$bnb8","_wallet$info$bnb9","_wallet$info$bnb9$0x","_wallet$info$bnb10","_wallet$info$bnb10$0x","_wallet$prices$bnb9","_wallet$prices$bnb9$","_wallet$info$bnb11","_wallet$info$bnb11$0x","_wallet$info$bnb12","_wallet$info$bnb12$0x","_wallet$prices$bnb10","_wallet$prices$bnb10$","_wallet$prices$bnb11","_wallet$prices$bnb12","_wallet$info$bnb13","_wallet$prices$bnb13","_wallet$prices$bnb14","_wallet$prices$bnb15","_wallet$prices$bnb16","_wallet$prices$eth","_wallet$prices$eth2","_wallet$prices$eth3","_wallet$prices$eth4","_wallet$prices$eth5","_wallet$prices$eth6","_wallet$info$arb","_wallet$info$arb2","_wallet$info$arb2$0x","_wallet$info$arb3","_wallet$info$arb3$0x","_wallet$prices$arb5","_wallet$prices$arb5$","_wallet$info$arb4","_wallet$info$arb4$0x","_wallet$info$arb5","_wallet$info$arb5$0x","_wallet$prices$arb6","_wallet$prices$arb6$","_wallet$prices$arb7","_wallet$info$arb6","_wallet$info$arb6$0x","_wallet$info$arb7","_wallet$info$arb7$0x","_wallet$prices$arb8","_wallet$prices$arb8$","_wallet$info$arb8","_wallet$info$arb8$0x","_wallet$info$arb9","_wallet$info$arb9$0x","_wallet$prices$arb9","_wallet$prices$arb9$","stakeOpen","setStakeOpen","chainTab","setChainTab","claimRewards","scrollButtons","BoltIcon","PowerStake","onSubmit","onError","Divider","CurrencyExchangeIcon","DialogActions","delegate","getPairPrices","fusd_fuse","unipair_abi","ceus_fuse","volt_fuse","fsb_fuse","eth_fuse","bnb_fusd","btc_fuse","ceus_lit","fusd_fuse_reserves","ceus_fuse_reserves","volt_fuse_reserves","fsb_fuse_reserves","eth_fuse_reserves","bnb_fusd_reserves","btc_fuse_reserves","ceus_lit_lp_reserves","ceus_lit_lp_totalSupply","ceus_wfuse_lp_reserves","ceus_wfuse_lp_totalSupply","total2","total3","usdc_avax","dgnx_avax","usdc_avax_reserves","dgnx_avax_reserves","avax_price","inAVAX","bnb_busd","feg_bnb","srg_bnb","lit_bnb","chad_bnb","pepe_bnb","callsBNB","calculatePrice","bnb_busd_reserves","feg_bnb_reserves","srg_bnb_price","lit_bnb_price","chad_bnb_price","pepe_bnb_price","bnb_price","inBNB","inETH","eth_usdc","srg_eth","bbk_eth","bbk_abi","feg_eth","eth_usdc_reserves","srg_eth_price","bbk_srg_price","feg_eth_reserves","eth_price","pepe_arb","pepe_arb_price","chad_arb_price","srg_price","inSRG","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","_wallet$prices$fuse$n","TransitionUp","Slide","direction","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","connectedContract","setConnectedContract","_useState17","_useState18","_useState19","_useState20","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","gas","_data","txData","estimateGas","sent","encodeABI","to","handleError","t0","message","toString","_data2","LinearProgress","anchorOrigin","vertical","horizontal","TransitionComponent","elevation","icon","coineus_fund_address","assurance_fund_address","coineus_validator_address","CoineusPortfolio","_wallet$prices$avax$n","_wallet$prices$avax$","_wallet$prices$bnb$na","_wallet$prices$bnb$0x","_wallet$prices$bnb2$","_wallet$prices$eth$na","_wallet$prices$eth$0x","_wallet$prices$eth2$","_wallet$prices$arb$na","_wallet$prices$arb$0x","_wallet$prices$arb2$","_wallet$prices$arb3$","_wallet$prices$fuse5$","_wallet$prices$fuse6$","_wallet$prices$fuse7$","_wallet$prices$fuse8$","_wallet$prices$bnb$na2","_wallet$prices$bnb5$","_wallet$prices$avax$n2","_wallet$prices$avax2$","_wallet$prices$eth$na2","_wallet$prices$eth3$","_wallet$prices$eth4$","_wallet$prices$arb4$n","_wallet$prices$arb7$","fuseData","setFuseData","bnbData","setBnbData","ethData","setEthData","arbData","setArbData","web3FUSE","callsF","coineus_fund_balance","assurance_fund_balance","coineus_fund_staked","assurance_fund_staked","ceus_fund_balance","ceusone_fund_balance","lit_fund_balance","coineus_avax_balance","coineus_fund_dgnx_balance","web3BNB","lit_bnb_contract","srg_bnb_contract","srgone_bnb_contract","coineus_bnb_balance","lit_bnb_balance","srg_bnb_balance","srgone_bnb_balance","srg_eth_contract","coineus_eth_balance","srg_eth_balance","bbks_eth_balance","web3ARB","srg_arb_contract","srgone_arb_contract","callsARB","coineus_arb_balance","srg_arb_balance","srgone_arb_balance","pepe_arb_balance","totalValue","TokenStatsSection","logo","usdValue","secondaryBalance","secondarySymbol","secondaryLabel","_props$data","xyplot","BurnSupply","minted","supply","fund","litLP","ceusone","divider","PI","aBurned","aLiquidity","aFund","aLitLP","angles","burnedStart","burnedEnd","liquidityStart","liquidityEnd","litLPStart","litLPEnd","fundStart","fundEnd","ceusoneStart","ceusoneEnd","supplyStart","supplyEnd","colors","xDomain","yDomain","ArcSeries","radiusDomain","center","angle0","angle","opacity","radius","radius0","colorType","StatListItem","Autorenew","AccountBalance","ListItemIcon","Stats","setSupply","setLiquidity","setFund","setLitLP","ceusoneContract","setCeusoneContract","ceus_supply","ceus_liquidity","ceus_fund","lit_lp","routerAddress","easyBridgeAddress","EasyBridge","_wallet$prices$bnb2$n","reserves","setReserves","fuseOut","setFuseOut","amtRecieved","setAmtRecieved","txHash","setTxHash","txCost","setTxCost","router_abi","uni_abi","inputProps","startAdornment","sendTransaction","toBN","hexToNumberString","logs","gasUsed","effectiveGasPrice","Link","textDecorationColor","href","substr","COINEUS_FUND_ADDRESS","LIT_CONTRACT_ADDRESS","CHAD_CONTRACT_ADDRESS","CHADARB_CONTRACT_ADDRESS","LITBNB_CONTRACT_ADDRESS","SRGBNB_CONTRACT_ADDRESS","SRGARB_CONTRACT_ADDRESS","CHAD_BURNER","CHAD_ASSET_BACKING","CHAD_STAKING","CHADARB_BURNER","CHADARB_ASSET_BACKING","CHADARB_STAKING","Admin","chadTaxBal","setChadTaxBal","chadARBTaxBal","setChadARBTaxBal","litBNBTaxBal","setLitBNBTaxBal","pendingCHADBurn","setPendingCHADBurn","pendingCHADARBBurn","setPendingCHADARBBurn","getInfo","srgbnb_contract","chad_abi","litBNB_contract","litsrg20_abi","taxBalance","srgarb_contract","distChadTax","distributeTaxes","processChadBurnTax","process","processChadABTax","processChadStakingTax","ceus_abi","performBurn","lit_abi","withdrawTaxBalance","SwapInput","max","border","borderColor","inputMode","autoCorrect","spellCheck","pattern","TokenList","useTheme","selectedToken","setSelectedToken","paper","startIcon","MenuList","MenuItem","TransactionReceipt","_props$receipt","amtSent","selectedInputToken","selectedOutputToken","defaultFuse","defaultCeus","PATHS","FUSE_CEUS","FUSE_LIT","CEUS_FUSE","CEUS_LIT","LIT_FUSE","LIT_CEUS","Swap","setSelectedInputToken","setSelectedOutputToken","selectFocus","setSelectFocus","amountIn","setAmountIn","amountOut","setAmountOut","slippage","amtPending","setAmtPending","setAmtSent","_useState21","_useState22","_useState23","_useState24","getRoute","route","getAmountsOut","getAmountsIn","swap","getGasPrice","getTime","events","Transfer","returnValues","onFocus","float","alignContent","Fab","inToken","outToken","SwapVertIcon","consensus","Validator","setStaking","validators","setValidators","pendingTX","setPendingTX","MIN_STAKE","MAX_STAKE","MAX_VALIDATORS","MAX_STRIKE_COUNT","DEFAULT_VALIDATOR_FEE","getMinValidatorFee","getValidators","jailedValidators","min_stake","max_stake","max_validators","max_strike_count","default_validator_fee","min_validator_fee","jailed_validators","v","getValidatorInfo","vs","validator_address","validator","resolve","isJailed","isValidator","isPendingValidator","getStrikes","is_jailed","is_validator","is_pending_validator","strikes","getDelegatorInfo","index","DataGrid","sorting","sortModel","field","disableRowSelectionOnClick","slots","toolbar","GridToolbarContainer","GridToolbarExport","columns","headerName","align","valueFormatter","renderCell","DelegatorDialog","row","CheckBoxIcon","CancelIcon","unJail","autoHeight","rows","pageSizeOptions","headerAlign","client","ApolloClient","uri","cache","InMemoryCache","VOLTAGE_MASTERCHEF","VoltageLiquidity","positions","setPositions","userPoolInfo","setUserPoolInfo","gql","_templateObject","_taggedTemplateLiteral","result","user","liquidityPositions","getUserInfo","voltage","masterchef_abi","poolLength","poolCount","poolInfo","userInfo","pendingTokens","userData","_resp$_i","accVoltPerShare","allocPoint","lastRewardTimestamp","lpToken","rewarder","rewardDebt","bonusTokenAddress","bonusTokenSymbol","pendingBonusToken","pendingVolt","poolIndex","_userPoolInfo$lpToken","_userPoolInfo$lpToken2","_userPoolInfo$lpToken3","_userPoolInfo$lpToken4","_userPoolInfo$lpToken5","_userPoolInfo$lpToken6","liquidityTokenBalance","token0Price","token1Price","volumeToken0","volumeToken1","token0USD","token1USD","toChecksumAddress","AvatarGroup","tokenA","tokenB","amountA","amountB","lp_contract","erc20_abi","remove","removeLiquidity","removeLP","ListSubheader","_userPoolInfo$lpToken7","_userPoolInfo$lpToken8","FAUCET_ADDRESS","CEUSONE_ADDRESS","LIT_ADDRESS","CEUSONEFaucet","_wallet$prices$fuse$C","_wallet$prices$fuse$C2","_wallet$prices$fuse$C3","_wallet$prices$fuse$L","_wallet$prices$fuse$L2","_wallet$prices$fuse$C4","_wallet$prices$fuse$L3","faucetData","setFaucetData","userFaucetData","setUserFaucetData","setDisabled","disabledReason","setDisabledReason","_amountToIncreaseBy","_setAmountToIncreaseBy","_maxAmountToIncreaseTo","_setMaxAmountToIncreaseTo","_minAmountForFastpass","_setMinAmountForFastpass","_minAmountToClaim","_setMinAmountToClaim","_timeBetweenClaims","_setTimeBetweenClaims","_depositAmount","_setDepositAmount","faucet_contract","faucet_abi","getClaimableAmount","getStats","getLockedAmount","getClaimPaused","getMinAmountToClaim","getMinAmountForFastpass","getAmountToIncreaseBy","getMaxAmountToIncreaseTo","getTimeBetweenClaims","claimable","stats","lockedAmount","paused","minBalance","fastpassAmount","amountToIncreaseBy","maxAmountToIncreaseTo","timeBetweenClaims","getStatsByAddress","now","timeCanClaim","toLocaleString","toggleFaucet","setClaimPaused","setAmountToIncreaseBy","setMaxAmountToIncreaseTo","setMinAmountToClaim","setMinAmountForFastpass","setTimeBetweenClaims","claim","claimedAllTime","numberOfClaimsAllTime","averageClaim","highestClaimed","highestClaimedBy","SRGONE_ADDRESS","SRGONEFaucet","_wallet$prices$bnb$SR","_wallet$prices$bnb$SR2","_wallet$prices$bnb$SR3","_wallet$prices$bnb$LI","_wallet$prices$bnb$LI2","_wallet$prices$bnb$SR4","_wallet$prices$bnb$LI3","SRG_ADDRESS","LIT_DISTRIBUTOR","CHAD_ADDRESS","CHAD_DISTRIBUTOR","SRGONESuperFaucet","lit_dist_contract","chad_dist_contract","getUnpaidEarnings","faucetAmtSRG","faucetAmtLIT","faucetLITShares","faucetAmtCHAD","faucetAmtCHADUnpaid","depositSRG","updateShares","claimDividend","ChainSelector","anchorEl","setAnchorEl","Boolean","_x","checkIconSize","event","currentTarget","getChainLogo","Menu","CheckCircleIcon","FARM_CONTRACT","REWARD_TOKEN1","Farm","_data$rewardToken1Dat","farm_contract","farm_abi","setAllowance","setApy","stakingToken","rewardData","userRewardPerTokenPaid","earned","rewardPerToken","getRewardForDuration","rewardTokens","sToken","totalStaked","stakedAmount","rewardToken1Data","rewards1","userRewardPerTokenPaid1","earned1","rewardPerToken1","getRewardForDuration1","rewardTokens1","stake_token","ierc20_abi","stake_token_balance","totalRewards","rewardPrice","totalRewardsInUSD","durationInDays","rewardsDuration","rewardsRemaining","periodFinish","rewardRate","potentialEarnings","helperText","stake_token_contract","stake","ListItemSecondaryAction","exit","getReward","CHADBNBStaking","_wallet$prices$bnb2$R","_wallet$prices$bnb3$R","_wallet$prices$bnb$RE","stake_token_supply","CHADBNBStakingOLD","CEUSONE_FAUCET_ADDRESS","SRGONE_FAUCET_ADDRESS","SRGONE_SUPER_FAUCET_ADDRESS","LITBNB_ADDRESS","Faucets","ceusone_faucet_contract","srgone_faucet_contract","srgone_super_faucet_contract","ceusoneFaucet","setCeusoneFaucet","srgoneFaucet","setSrgoneFaucet","srgoneSuperFaucet","setSrgoneSuperFaucet","minAmountToClaim","minAmountFastpass","calls3","FacuetDetails","faucet","tokenSymbol","tokenDecimals","tokenContract","details","litAddress","link","claimTime","setClaimTime","timeToNextClaim","PaidIcon","component","RouterLink","ms","m","s","padStart","msToHMS","Coineus","_wallet$address","useDispatch","getDexScreener","tokenList","dexscreenerChain","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","_changeWeb3Modal","_callee5","web3mod","_context5","providerController","cachedProvider","connect","connectProvider","_connectWallet","_callee6","_context6","changeWeb3Modal","accounts","subscribeProvider","getAccounts","net","getId","t1","clearWallet","acc","_x2","_callee3","networkId","_context3","_x3","_callee4","_context4","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","Router","AppBar","enableColorOnDark","Toolbar","MenuIcon","textDecoration","flexGrow","connectWallet","Routes","Route","path","exact","element","Drawer","PaperProps","alignSelf","CloseIcon","button","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.fd096715.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**8)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Alert,\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, IconButton, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText, Snackbar,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport {copyTextToClipboard} from \"../utils\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport millify from \"millify\";\nimport {useState} from \"react\";\n\nimport token_list from \"../utils/tokenList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap, pair} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    function findPair(pairs) {\n\n        const pair_address = token_list.tokens[network][contract_address]?.dexscreenerPair || undefined;\n\n        if (pair_address) {\n            let p = pairs[0];\n            pairs.map(pair => {\n                if (pair_address.toLowerCase() === pair.pairAddress.toLowerCase()) {\n                    p = pair;\n                }\n            })\n            return p;\n        }\n\n        return pairs[0];\n    }\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={findPair(data.pairs)}\n                            network={network}\n                            pair={pair}\n                        />\n                        <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const [snackbarOpen, setSnackBarOpen] = useState(false);\n\n    const {data, network, contract_address, pair} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if (contract_address === 'native') {\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid container>\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar\n                        src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                    {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={name}\n                    secondary={symbol}\n                />\n            </ListItem>\n        </Grid>\n        {\n            contract_address !== 'native' && <Grid item xs={12}>\n                <ListItem\n                    secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"comments\"\n                                    onClick={() => copyTextToClipboard(contract_address, () => setSnackBarOpen(true))}>\n                            <ContentCopyIcon/>\n                        </IconButton>\n                    }>\n                    <ListItemText\n                        primary={contract_address}\n                        secondary=\"Contract Address\"\n                        primaryTypographyProps={{fontSize: '.75rem'}}\n                    />\n                </ListItem>\n            </Grid>\n        }\n\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.fdv)}\n                    secondary=\"Fully Diluted Value\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.priceUsd)}\n                    secondary=\"Price in USD\"\n                />\n                <ListItemText\n                    primary={CoineusCryptoFormat(data.priceNative)}\n                    secondary={`Price in ${data.quoteToken.symbol}`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.liquidity.usd)}\n                    secondary=\"Liquidity\"\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.base)}\n                    secondary={data.baseToken.symbol}\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.quote)}\n                    secondary={data.quoteToken.symbol}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={data.priceChange.m5 + \"%\"}\n                    secondary=\"5 mins\"\n                    className={getColorClass(data.priceChange.m5)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h1 + \"%\"}\n                    secondary=\"1 hr\"\n                    className={getColorClass(data.priceChange.h1)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h6 + \"%\"}\n                    secondary=\"6 hrs\"\n                    className={getColorClass(data.priceChange.h6)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h24 + \"%\"}\n                    secondary=\"24 hrs\"\n                    className={getColorClass(data.priceChange.h24)}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.volume.m5)}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h1)}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h6)}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h24)}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n        </Grid>\n        <Snackbar\n            open={snackbarOpen}\n            onClose={() => setSnackBarOpen(false)}\n            autoHideDuration={5000}\n        >\n            <Alert severity=\"success\" sx={{width: '100%'}} variant=\"filled\">Contract Address copied to clipboard</Alert>\n        </Snackbar>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch (id) {\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span\n                                style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity?.usd || 0)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {AreaSeries, FlexibleWidthXYPlot, GradientDefs, LineSeries} from \"react-vis\";\n\nimport '../../node_modules/react-vis/dist/style.css';\nimport {Tooltip} from \"@mui/material\";\n\nexport default function SparkChart(props, ref) {\n\n\n    const {chartdata} = props;\n\n    const marginTop = chartdata.length === 2 ? 20 : 5;\n\n    return <Tooltip title={chartdata.length < 2 ? null : \"Click to View\"} style={{cursor: chartdata.length < 2 ? null : \"pointer\"}}>\n        <div>\n            <FlexibleWidthXYPlot\n                height={40}\n                strokeWidth={2}\n                margin={{left: 5, right: 5, top: marginTop, bottom: 5}}\n            >\n                <GradientDefs>\n                    <linearGradient id=\"CoolGradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                        <stop offset=\"10%\" stopColor=\"#fbca00\" stopOpacity={0.3}/>\n                        <stop offset=\"100%\" stopColor=\"#1E1E1E\" stopOpacity={0.1}/>\n                    </linearGradient>\n                </GradientDefs>\n                <AreaSeries\n                    fill={'url(#CoolGradient)'}\n                    stroke={\"transparent\"}\n                    data={chartdata}\n                    // curve=\"curveNatural\"\n                />\n                <LineSeries\n                    color={\"#fbca00\"}\n                    data={chartdata}\n                    // curve=\"curveNatural\"\n                />\n            </FlexibleWidthXYPlot>\n        </div>\n    </Tooltip>;\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper, Tooltip, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport axios from \"axios\";\nimport SparkChart from \"./SparkChart\";\nimport {BigNumber} from \"bignumber.js\";\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        },\n        '&.arb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/arb/chain.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {\n        contract_address,\n        pair,\n        invertPrice,\n        name,\n        network,\n        price,\n        rewards,\n        rewardsClaim,\n        native,\n        wrap,\n        secondaryAction,\n        cnsDetails,\n        srgDetails,\n        detailsLabel,\n        rewardsUSD,\n        rewardsSymbol,\n        rewardsRealised,\n        rewardsRealisedUSD\n    } = props;\n\n    const [open, setOpen] = useState(false);\n    const [chartData, setChartData] = useState([]);\n    const [percentageChange, setPercentageChange] = useState(0);\n\n    useEffect(() => {\n        if (!pair) return;\n        axios.post(\n            \"https://api.thegraph.com/subgraphs/name/voltfinance/voltage-exchange\",\n            {\n                query: `\n                    {\n                      pair(id:\"${pair.toLowerCase()}\"){\n                        token0 {\n                          id\n                        }\n                        token1 {\n                          id\n                        }\n                        pairHourData(\n                          first:24, \n                          orderBy: hourStartUnix, \n                          orderDirection:desc,\n                          where: {\n                            hourStartUnix_gt: ${parseInt((new Date()).setHours(-24) / 1000)}\n                          }\n                        ){\n                          hourStartUnix\n                          reserve0\n                          reserve1\n                          reserveUSD\n                        }\n                      }\n                    }\n                    `\n            }\n        ).then(resp => {\n            if (!resp.data.data.pair) {\n                setChartData([\n                    {\n                        x: new Date().setHours(-24),\n                        y: 1\n                    },\n                    {\n                        x: new Date(),\n                        y: 1\n                    }\n                ])\n                return;\n            }\n            const {pairHourData} = resp.data.data.pair;\n\n            const data = [];\n            pairHourData.map(h => {\n\n                data.push({\n                    x: new Date(h.hourStartUnix * 1000),\n                    y: invertPrice ? h.reserve1 / h.reserve0 : h.reserve0 / h.reserve1\n                })\n\n            })\n            setChartData(data)\n        })\n    }, [])\n\n    useEffect(() => {\n        if(network !== 'fuse')return;\n        if(contract_address === '0xE27431FACb1F093BA164c9F86B3f484b39ad54CC')return;\n        axios.post(\n            \"https://api.thegraph.com/subgraphs/name/voltfinance/voltage-exchange-v2\",\n            {\n                query: `\n                        {\n                          token(id:\"${wrap?.toLowerCase() || contract_address.toLowerCase()}\"){\n                            id\n                            name\n                            dayData(\n                              first:2\n                              orderBy: date\n                              orderDirection: desc\n                            ){\n                              date\n                              priceUSD\n                            }\n                          }\n                        }\n                    `\n            }\n        ).then(resp => {\n            const {token} = resp.data.data;\n            if(!token)return;\n            const {dayData} = token;\n            if(dayData.length < 2)return;\n\n            const day0 = dayData[0].priceUSD;\n            const day1 = dayData[1].priceUSD;\n\n            const change = ((day0 - day1) / day1) * 100;\n\n            setPercentageChange(change);\n        })\n    }, [])\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    const getSRGEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = srgDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**9);\n    }\n\n    const displayPrice = (price, pc) => {\n        const color = pc >= 0 ? \"#00ff00\" : \"red\";\n        // return <>{CoineusUSDFormat(price)} <Typography variant=\"caption\" style={{color, verticalAlign:'top', display: network===\"fuse\" ? '':'none'}}>{pc.toFixed(2)}%</Typography></>\n        return CoineusUSDFormat(price);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={name}\n                secondary={displayPrice(price?.inUSD, percentageChange)}\n                primaryTypographyProps={{fontWeight: 700}}\n                style={{minWidth: 80, maxWidth: 80, flex: 1}}\n            />\n\n            <div style={{minWidth: 80, maxWidth: 80, flex: 1}} onClick={pair ? ()=>window.open(`https://dexscreener.com/${network}/${pair}`) : ()=>{}}>\n                <SparkChart chartdata={chartData}/>\n            </div>\n\n            <ListItemText\n                primary={wallet.balances[network][contract_address] > 1000000 ? millify(wallet.balances[network][contract_address]) : CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            rewards !== undefined && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewardsRealised)} ${rewardsSymbol}`}\n                        primaryTypographyProps={{fontWeight: 700}}\n                        secondary=\"Rewards All-time\"\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards)} ${rewardsSymbol}`}\n                        secondary=\"Pending\"\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700, paddingRight:1}}\n                        secondaryTypographyProps={{textAlign: 'right', paddingRight:1}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} ${detailsLabel}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            srgDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getSRGEarned())} ${detailsLabel}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}\n            pair={pair}\n        />\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\n\n\nexport default function PriceScroll() {\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24 || 0,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n\n            if(a.priceChange < b.priceChange){\n                return 1;\n            }\n\n            if(a.priceChange > b.priceChange){\n                return -1;\n            }\n\n            return 0;\n        })\n\n        setList(tmp);\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? '#00FB4D' : 'red'\n    }\n\n    const getTrend = (priceChange) => {\n\n        if(priceChange > 0) {\n            return <><TrendingUpIcon style={{verticalAlign:'middle', marginRight: 5}}/>{`${priceChange}%`}</>\n        }\n\n        if(priceChange < 0) {\n            return <><TrendingDownIcon style={{verticalAlign: 'middle', marginRight: 5}}/>{`${priceChange}%`}</>\n        }\n\n        return <>{`${priceChange}%`}</>\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            marginTop: 10,\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(165px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 155, marginTop: 25}} key={token.chain+\"_\"+token.contract_address}>\n\n                        <img\n                            src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}\n                            style={{\n                                width: 50,\n                                borderRadius: '50%',\n                                marginTop: -25,\n                                marginLeft: 'calc(50% - 25px)'\n                            }}\n                        />\n\n                        <img\n                            src={`https://coineus.app/assets/tokens/${token.chain}/logo.png`}\n                            style={{\n                                width: 20,\n                                borderRadius: '50%',\n                                top: -25,\n                                marginLeft: 'calc(50% + 15px)',\n                                position: 'relative',\n                                visibility: token.contract_address === 'native' ? 'hidden' : 'visible'\n                            }}\n                        />\n\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain',\n                            paddingTop: 0,\n                            paddingBottom: 0,\n                            marginTop: -25\n                        }}>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700, variant: 'h5', textAlign: 'center'}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                                secondaryTypographyProps={{variant: 'body1', textAlign: 'center'}}\n                            />\n                        </ListItem>\n\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain',\n                            paddingTop: 0,\n                            paddingBottom: 0\n                        }}>\n                            <ListItemText\n                                primary={getTrend(token.priceChange)}\n                                primaryTypographyProps={{fontWeight: 700, variant: 'h6', textAlign: 'center', color: getColorClass(token.priceChange)}}\n                            />\n                        </ListItem>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {},\n            arb: {}\n        },\n\n        lp: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {},\n            arb: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {},\n            arb: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {},\n            arb: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {},\n            arb: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0,\n            arb: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n        CEUSLITPair: '0x87440f829e7ed808599749630555080917c4b3d9',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n\n        ARETHUSDCPair: '0x84652bb2539513baf36e225c930fdd8eaa63ce27'\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/',\n        // arb: 'https://rpc.ankr.com/arbitrum',\n        arb: 'https://arb1.arbitrum.io/rpc'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateLPInfo(state, action) {\n            if(!state.wallet.lp[action.payload.chain][action.payload.contract_address]){\n                state.wallet.lp[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.lp[action.payload.chain][action.payload.contract_address] = action.payload.lp;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateLPInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp)).catch(err=>{\n                    console.log('error in _batch')\n                    rej(err)\n                });\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) {\n                    console.log('error in batch')\n                    rej(err);\n                }\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateLPInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/ceus_abi.json\";\nimport ceusone_abi from \"../abis/Coineus/CEUSONE.json\";\nimport srgone_abi from \"../abis/Coineus/SRGONE.json\"\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport uni_pair_abi from \"../abis/IUniswapV2Pair.json\";\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport srg_dist_abi from \"../abis/srg_dist.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n    getARB(pairs, rpc.arb, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const fuseone_contract = new web3.eth.Contract(ceusone_abi, \"0xadF951967082452c46eA853158e0838F0EB6fee5\");\n    const ceus_contract = new web3.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\n    const ceusone_contract = new web3.eth.Contract(ceusone_abi, \"0xE27431FACb1F093BA164c9F86B3f484b39ad54CC\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0xd0ce1b4A349C35e61Af02f5971e71ac502441E49');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n    const fsb_contract = new web3.eth.Contract(coineus_abi, '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31');\n    const lit_contract = new web3.eth.Contract(coineus_abi, '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F');\n\n    const btc_contract = new web3.eth.Contract(coineus_abi, '0x33284f95ccb7B948d9D352e1439561CF83d8d00d');\n    const eth_contract = new web3.eth.Contract(coineus_abi, '0xa722c13135930332Eb3d749B2F0906559D2C5b99');\n    const bnb_contract = new web3.eth.Contract(coineus_abi, '0x6acb34b1Df86E254b544189Ec32Cf737e2482058');\n    const wfuse_contract = new web3.eth.Contract(coineus_abi, '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629');\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const ceus_lit_contract = new web3.eth.Contract(uni_pair_abi, \"0x87440F829E7ED808599749630555080917c4b3D9\") //CEUS/LIT LP\n    const ceus_fuse_contract = new web3.eth.Contract(uni_pair_abi, \"0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b\") //CEUS/FUSE LP\n    const fuse_lit_contract = new web3.eth.Contract(uni_pair_abi, \"0x1a77baea67c346ce17486b078a3c3f53a99a9fcc\") //LIT/FUSE LP\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        fuseone_contract.methods.balanceOf(wallet_address).call,\n        fuseone_contract.methods.getAccount(wallet_address).call,\n        ceus_contract.methods.balanceOf(wallet_address).call,\n        ceusone_contract.methods.balanceOf(wallet_address).call,\n        ceusone_contract.methods.getAccount(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call,\n        fsb_contract.methods.balanceOf(wallet_address).call,\n        lit_contract.methods.balanceOf(wallet_address).call,\n\n        btc_contract.methods.balanceOf(wallet_address).call,\n        eth_contract.methods.balanceOf(wallet_address).call,\n        bnb_contract.methods.balanceOf(wallet_address).call,\n        wfuse_contract.methods.balanceOf(wallet_address).call,\n\n        ceus_lit_contract.methods.balanceOf(wallet_address).call,\n        ceus_lit_contract.methods.getReserves().call,\n        ceus_lit_contract.methods.totalSupply().call,\n\n        ceus_fuse_contract.methods.balanceOf(wallet_address).call,\n        ceus_fuse_contract.methods.getReserves().call,\n        ceus_fuse_contract.methods.totalSupply().call,\n\n        fuse_lit_contract.methods.balanceOf(wallet_address).call,\n        fuse_lit_contract.methods.getReserves().call,\n        fuse_lit_contract.methods.totalSupply().call,\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            fuseone_balance,\n            fuseone_info,\n            ceus_balance,\n            ceusone_balance,\n            ceusone_info,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus,\n            fsb_balance,\n            lit_balance,\n\n            btc_balance,\n            eth_balance,\n            bnb_balance,\n            wfuse_balance,\n\n            ceus_lit_balance,\n            ceus_lit_reserves,\n            ceus_lit_totalSupply,\n\n            ceus_wfuse_balance,\n            ceus_wfuse_reserves,\n            ceus_wfuse_totalSupply,\n\n            fuse_lit_balance,\n            fuse_lit_reserves,\n            fuse_lit_totalSupply,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        //fuseone\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xadF951967082452c46eA853158e0838F0EB6fee5',\n            balance: fuseone_balance / (10 ** 18)\n        }));\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xadF951967082452c46eA853158e0838F0EB6fee5\",\n            info: (() => {\n                const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = fuseone_info;\n                return {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n            })()\n        }));\n\n        //ceus\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n            balance: ceus_balance / (10 ** 18)\n        }))\n\n        //ceusone\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xE27431FACb1F093BA164c9F86B3f484b39ad54CC',\n            balance: ceusone_balance / (10 ** 18)\n        }))\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xE27431FACb1F093BA164c9F86B3f484b39ad54CC\",\n            info: (() => {\n                const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = ceusone_info;\n                return {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n            })()\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xd0ce1b4A349C35e61Af02f5971e71ac502441E49',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//volt\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',//fsb\n            balance: fsb_balance / (10 ** 9)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F',//lit\n            balance: lit_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',//btc\n            balance: btc_balance / (10 ** 8)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',//eth\n            balance: eth_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',//bnb\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',//wfuse\n            balance: wfuse_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x87440F829E7ED808599749630555080917c4b3D9',//ceus/lit lp\n            balance: ceus_lit_balance / (10**18)\n        }));\n\n        store.dispatch(updateLPInfo({\n            chain: 'fuse',\n            contract_address: '0x87440F829E7ED808599749630555080917c4b3D9',//ceus/lit lp\n            lp: {\n                token0: ceus_lit_reserves.reserve0 / (10**18) * ceus_lit_balance/ceus_lit_totalSupply,\n                token1: ceus_lit_reserves.reserve1 / (10**18) * ceus_lit_balance/ceus_lit_totalSupply,\n                share: ceus_lit_balance/ceus_lit_totalSupply * 100\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',//ceus/wfuse lp\n            balance: ceus_wfuse_balance / (10**18)\n        }));\n\n        store.dispatch(updateLPInfo({\n            chain: 'fuse',\n            contract_address: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',//ceus/wfuse lp\n            lp: {\n                token0: ceus_wfuse_reserves.reserve0 / (10**18) * ceus_wfuse_balance/ceus_wfuse_totalSupply,\n                token1: ceus_wfuse_reserves.reserve1 / (10**18) * ceus_wfuse_balance/ceus_wfuse_totalSupply,\n                share: ceus_wfuse_balance/ceus_wfuse_totalSupply * 100\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x1a77baea67c346ce17486b078a3c3f53a99a9fcc',//fuse/lit lp\n            balance: fuse_lit_balance / (10**18)\n        }));\n\n        store.dispatch(updateLPInfo({\n            chain: 'fuse',\n            contract_address: '0x1a77baea67c346ce17486b078a3c3f53a99a9fcc',//fuse/lit lp\n            lp: {\n                token0: fuse_lit_reserves.reserve0 / (10**18) * fuse_lit_balance/fuse_lit_totalSupply,\n                token1: fuse_lit_reserves.reserve1 / (10**18) * fuse_lit_balance/fuse_lit_totalSupply,\n                share: fuse_lit_balance/fuse_lit_totalSupply * 100\n            }\n        }));\n\n        //0x1a77baea67c346ce17486b078a3c3f53a99a9fcc\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            usdc_balance,\n            dgnx_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11');\n    const srg_contract = new web3BSC.eth.Contract(coineus_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n    const srgone_contract = new web3BSC.eth.Contract(srgone_abi, '0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772');\n    const busd_contract = new web3BSC.eth.Contract(coineus_abi, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56');\n    const usdc_contract = new web3BSC.eth.Contract(coineus_abi, '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d');\n    const usdt_contract = new web3BSC.eth.Contract(coineus_abi, '0x55d398326f99059fF775485246999027B3197955');\n    const lit_contract = new web3BSC.eth.Contract(bbks_abi, '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc');\n    const lit_dist = new web3BSC.eth.Contract(srg_dist_abi, '0x5b0881767d1a2Fffe19C218ae1F8fd4873943F63');\n    const chad_contract = new web3BSC.eth.Contract(bbks_abi, '0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9');\n    const chad_dist = new web3BSC.eth.Contract(srg_dist_abi, '0xC49D6A0914C4b51134c2b18c6090BC702744c188');\n    //0x67b38309bacbc77e6570e9557b23d6955a9bd7e3\n    const pepe_contract = new web3BSC.eth.Contract(bbks_abi, '0x67B38309BACBc77E6570e9557b23d6955A9bD7e3');\n    const pepe_dist = new web3BSC.eth.Contract(srg_dist_abi, '0xF10661361CC882D5a0955a0Dd8f0A7c6625Ab934');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n        srgone_contract.methods.balanceOf(wallet_address).call,\n        srgone_contract.methods.getAccount(wallet_address).call,\n        busd_contract.methods.balanceOf(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        usdt_contract.methods.balanceOf(wallet_address).call,\n        lit_contract.methods.balanceOf(wallet_address).call,\n        lit_contract.methods.checkPendingRewards(wallet_address).call,\n        lit_dist.methods.shares(wallet_address).call,\n        chad_contract.methods.balanceOf(wallet_address).call,\n        chad_contract.methods.checkPendingRewards(wallet_address).call,\n        chad_dist.methods.shares(wallet_address).call,\n        pepe_contract.methods.balanceOf(wallet_address).call,\n        pepe_contract.methods.checkPendingRewards(wallet_address).call,\n        pepe_dist.methods.shares(wallet_address).call\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            feg_balance,\n            srg_balance,\n            srgone_balance,\n            srgone_info,\n            busd_balance,\n            usdc_balance,\n            usdt_balance,\n            lit_balance,\n            lit_rewards,\n            lit_shares,\n            chad_balance,\n            chad_rewards,\n            chad_shares,\n            pepe_balance,\n            pepe_rewards,\n            pepe_shares\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',//feg\n            balance: feg_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772',//srgone\n            balance: srgone_balance / (10 ** 9)\n        }))\n        store.dispatch(updateInfo({\n            chain: 'bnb',\n            contract_address: \"0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772\",\n            info: (() => {\n                const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = srgone_info;\n                return {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n            })()\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',//busd\n            balance: busd_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',//usdc\n            balance: usdc_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x55d398326f99059fF775485246999027B3197955',//usdt\n            balance: usdt_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc',//lit\n            balance: lit_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'bnb',\n            contract_address: '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc',//lit\n            info: {\n                pending_rewards: lit_rewards / (10 ** 9),\n                total_realised: lit_shares.totalRealised / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9',//chad\n            balance: chad_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'bnb',\n            contract_address: '0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9',//chad\n            info: {\n                pending_rewards: chad_rewards / (10 ** 9),\n                total_realised: chad_shares.totalRealised / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x67B38309BACBc77E6570e9557b23d6955A9bD7e3',//pepe\n            balance: pepe_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'bnb',\n            contract_address: '0x67B38309BACBc77E6570e9557b23d6955A9bD7e3',//pepe\n            info: {\n                pending_rewards: pepe_rewards / (10 ** 9),\n                total_realised: pepe_shares.totalRealised / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(coineus_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n    const feg_contract = new web3ETH.eth.Contract(coineus_abi, '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11');\n    const usdc_contract = new web3ETH.eth.Contract(coineus_abi, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48');\n    const usdt_contract = new web3ETH.eth.Contract(coineus_abi, '0xdAC17F958D2ee523a2206206994597C13D831ec7');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n        feg_contract.methods.balanceOf(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        usdt_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            srg_balance,\n            feg_balance,\n            usdc_balance,\n            usdt_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',//feg\n            balance: feg_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',//usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',//usdt\n            balance: usdt_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}\n\nfunction getARB(pairs, rpc, wallet_address) {\n\n    const web3ETH = new Web3(rpc);\n    const srg_contract = new web3ETH.eth.Contract(bbks_abi, '0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF');\n    const srgone_contract = new web3ETH.eth.Contract(srgone_abi, '0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239');\n    const pepe_contract = new web3ETH.eth.Contract(bbks_abi, '0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577');\n    const pepe_dist = new web3ETH.eth.Contract(srg_dist_abi, '0x1bE371dAdF0787db3930Ef77e7545e06A5677FE2');\n    const chad_contract = new web3ETH.eth.Contract(bbks_abi, '0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7');\n    const chad_dist = new web3ETH.eth.Contract(srg_dist_abi, '0x5454c9613bAb471b049C9759C6cCe91BDCA3986d');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        srg_contract.methods.balanceOf(wallet_address).call,\n        srgone_contract.methods.balanceOf(wallet_address).call,\n        srgone_contract.methods.getAccount(wallet_address).call,\n\n        pepe_contract.methods.balanceOf(wallet_address).call,\n        pepe_contract.methods.checkPendingRewards(wallet_address).call,\n        pepe_dist.methods.shares(wallet_address).call,\n\n        chad_contract.methods.balanceOf(wallet_address).call,\n        chad_contract.methods.checkPendingRewards(wallet_address).call,\n        chad_dist.methods.shares(wallet_address).call\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n\n        let [\n            eth_balance,\n            srg_balance,\n            srgone_balance,\n            srgone_info,\n            pepe_balance,\n            pepe_rewards,\n            pepe_shares,\n            chad_balance,\n            chad_rewards,\n            chad_shares\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'arb',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'arb',\n            contract_address: '0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'arb',\n            contract_address: '0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239',//srgone\n            balance: srgone_balance / (10 ** 9)\n        }))\n        store.dispatch(updateInfo({\n            chain: 'arb',\n            contract_address: \"0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239\",\n            info: (() => {\n                const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = srgone_info;\n                return {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n            })()\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'arb',\n            contract_address: '0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577',//pepe\n            balance: pepe_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'arb',\n            contract_address: '0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577',//pepe\n            info: {\n                pending_rewards: pepe_rewards / (10 ** 9),\n                total_realised: pepe_shares.totalRealised / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'arb',\n            contract_address: '0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7',//chad\n            balance: chad_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'arb',\n            contract_address: '0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7',//chad\n            info: {\n                pending_rewards: chad_rewards / (10 ** 9),\n                total_realised: chad_shares.totalRealised / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateTotals('arb'));\n    })\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\n\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport axios from \"axios\";\n\n\nexport default function LPTokenListItem(props) {\n\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, token0, token1, token0Symbol, token1Symbol, name, network, price, secondaryAction} = props;\n\n    const [lpRewards, setLpRewards] = useState({});\n\n    useEffect(() => {\n        axios.post(\n            \"https://api.thegraph.com/subgraphs/name/voltfinance/voltage-exchange-v2\",\n            {\n                query: `\n                        {\n                          pairDayDatas(first:2, where:{\n                            pair_:{\n                              id:\"${contract_address.toLowerCase()}\"\n                            }\n                          }\n                            orderBy:date\n                            orderDirection: desc\n                          ){\n                            date\n                            pair {\n                              id\n                            }\n                            volumeUSD\n                            reserveUSD\n                            untrackedVolumeUSD\n                          }\n                        }\n                    `\n            }\n        ).then(resp => {\n\n            const volume = parseFloat(resp.data.data.pairDayDatas[0].volumeUSD) || resp.data.data.pairDayDatas[0].untrackedVolumeUSD || 0;\n            const liquidity = resp.data.data.pairDayDatas[0].reserveUSD || 0;\n            const voltage_fee = 0.3;\n\n            const fee_share = volume * voltage_fee / 100;\n\n            const yearly_fees = fee_share * 365;\n\n            const apr = (yearly_fees/liquidity)*100;\n\n            setLpRewards({\n                volume,\n                liquidity,\n                voltage_fee,\n                fee_share,\n                yearly_fees,\n                apr\n            });\n        })\n    }, [])\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    if (wallet.lp[network][contract_address] === undefined) {\n        return <></>;\n    }\n\n    if (wallet.balances[network][contract_address] < .01) {\n        return <></>;\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar>\n                <Avatar\n                    style={{marginLeft:-5}}\n                    src={`https://coineus.app/assets/tokens/${network}/${token0}/logo.png`}/>\n                <Avatar\n                    style={{marginTop: -40, marginLeft:20, marginRight: 20}}\n                    src={`https://coineus.app/assets/tokens/${network}/${token1}/logo.png`}/>\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                // secondary={CoineusUSDFormat(price?.inUSD)}\n                secondary=\"LP Token\"\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        <ListItem>\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.lp[network][contract_address].token0)}\n                secondary={token0Symbol}\n                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.lp[network][contract_address].token1)}\n                secondary={token1Symbol}\n                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n            <ListItemText\n                primary={wallet.lp[network][contract_address].share.toFixed(2) + \" %\"}\n                secondary=\"Pool Share\"\n                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(lpRewards.volume)}\n                secondary=\"24hr Volume\"\n                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n            <ListItemText\n                primary={CoineusUSDFormat(lpRewards.liquidity)}\n                secondary=\"Liquidity\"\n                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n            <ListItemText\n                primary={parseFloat(lpRewards.apr).toFixed(2)+\"%\"}\n                secondary=\"APR\"\n                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {/*TODO work on token details*/}\n        {/*<TokenInfoDialog*/}\n        {/*    contract_address={contract_address}*/}\n        {/*    wrap={wrap}*/}\n        {/*    network={network}*/}\n        {/*    open={open}*/}\n        {/*    close={() => setOpen(false)}/>*/}\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../../abis/ceus_abi.json';\nimport coineusone_abi from '../../abis/Coineus/CEUSONE.json';\n\nimport {useState} from \"react\";\n\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport {toWei} from \"../../utils/format\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport {CoineusCryptoFormat} from \"../../utils/currency_format\";\n\nconst CEUS_CONTRACT_ADDRESS = \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"\nconst CEUSONE_CONTRACT_ADDRESS = \"0xE27431FACb1F093BA164c9F86B3f484b39ad54CC\"\n\nexport default function CEUSONE(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, CEUS_CONTRACT_ADDRESS);\n            const contract = new web3.eth.Contract(coineusone_abi, CEUSONE_CONTRACT_ADDRESS);\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, CEUSONE_CONTRACT_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(CEUSONE_CONTRACT_ADDRESS, toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, CEUSONE_CONTRACT_ADDRESS);\n\n\n            contract\n                .methods\n                .allowance(wallet.address, CEUSONE_CONTRACT_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(CEUSONE_CONTRACT_ADDRESS, toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[CEUS_CONTRACT_ADDRESS])} CEUS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[CEUS_CONTRACT_ADDRESS])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[CEUS_CONTRACT_ADDRESS]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[CEUSONE_CONTRACT_ADDRESS])} CEUSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[CEUSONE_CONTRACT_ADDRESS]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[CEUSONE_CONTRACT_ADDRESS])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[CEUSONE_CONTRACT_ADDRESS]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                        <Box style={{padding: 20, paddingTop: 0, textAlign: 'center'}}>\n                            <Typography variant=\"caption\" color=\"primary\">1% Fee on Deposits and\n                                Withdrawals</Typography>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}\n","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport srg_abi from '../../abis/srg_abi.json';\nimport srgone_abi from '../../abis/Coineus/SRGONE.json';\n\nimport {useState} from \"react\";\n\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport CoineusLoading from \"../CoineusLoading\";\nimport {CoineusCryptoFormat} from \"../../utils/currency_format\";\nimport {toWei} from \"../../utils/format\";\n\nlet SRG_CONTRACT_ADDRESS;\nlet SRGONE_CONTRACT_ADDRESS;\n\nexport default function SRGONE(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess, network} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    switch(network){\n        case 'arb':\n            SRG_CONTRACT_ADDRESS = \"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"\n            SRGONE_CONTRACT_ADDRESS = \"0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239\"\n            break;\n        case 'bnb':\n            SRG_CONTRACT_ADDRESS = \"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"\n            SRGONE_CONTRACT_ADDRESS = \"0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772\"\n            break;\n        default:\n            return;\n    }\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const srg_contract = new web3.eth.Contract(srg_abi, SRG_CONTRACT_ADDRESS);\n            const contract = new web3.eth.Contract(srgone_abi, SRGONE_CONTRACT_ADDRESS);\n\n\n            srg_contract\n                .methods\n                .allowance(wallet.address, SRGONE_CONTRACT_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 9)) < amount) {\n                        srg_contract\n                            .methods\n                            .approve(SRGONE_CONTRACT_ADDRESS, toWei(amount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(srgone_abi, SRGONE_CONTRACT_ADDRESS);\n\n\n            contract\n                .methods\n                .allowance(wallet.address, SRGONE_CONTRACT_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 9)) < amount) {\n                        contract\n                            .methods\n                            .approve(SRGONE_CONTRACT_ADDRESS, toWei(amount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                (network === 'arb' && wallet.chain !== 42161) ||\n                (network === 'bnb' && wallet.chain !== 56)\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances[network][SRG_CONTRACT_ADDRESS])} SRG`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances[network][SRG_CONTRACT_ADDRESS])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances[network][SRG_CONTRACT_ADDRESS]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances[network][SRGONE_CONTRACT_ADDRESS])} SRGONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances[network][SRGONE_CONTRACT_ADDRESS]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances[network][SRGONE_CONTRACT_ADDRESS])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances[network][SRGONE_CONTRACT_ADDRESS]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                        <Box style={{padding: 20, paddingTop: 0, textAlign: 'center'}}>\n                            <Typography variant=\"caption\" color=\"primary\">1% Fee on Deposits and\n                                Withdrawals</Typography>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}\n","import * as React from 'react';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nconst AssetBackingOutlined = (props) => {\n    return (\n        <SvgIcon {...props}>\n            <g>\n                <path d=\"M1.6 9v8c0 .55.42 1 .93 1H3V8h-.47c-.52 0-.93.45-.93 1Zm19.87-1H21v10h.47c.52 0 .93-.45.93-1V9c0-.55-.42-1-.93-1Zm-2.65-2.59c-.26-.26-.62-.41-.99-.41H17v-.83c0-.37-.15-.73-.41-.99l-.77-.77c-.26-.26-.62-.41-.99-.41H9.16c-.37 0-.73.15-.99.41l-.76.76c-.26.26-.41.62-.41.99v.83h-.83c-.37 0-.73.15-.99.41l-.77.77c-.26.26-.41.62-.41.99v11.57c0 .56.33 1.07.85 1.29l6.6 2.83c.18.07.36.11.55.11.19 0 .38-.04.55-.11l6.6-2.83c.52-.22.85-.73.85-1.29V7.17c0-.37-.15-.73-.41-.99l-.77-.77ZM9 4.41 9.41 4h5.17l.41.41V5h-6v-.59H9Zm9 13.93-6 2.57-6-2.57V7.41L6.41 7h11.17l.41.41v10.93H18Z\"/>\n                <path d=\"M15.6 12h-.7L10 15.89l3.28.43L11.4 19h.7l4.9-3.89-3.28-.43L15.6 12Z\"/>\n            </g>\n        </SvgIcon>\n    );\n}\n\n\nconst AssetBackingFilled = (props) => {\n    return (\n        <SvgIcon {...props}>\n            <path d=\"M1.6 9v8c0 .55.42 1 .93 1H3V8h-.47c-.52 0-.93.45-.93 1Zm19.87-1H21v10h.47c.52 0 .93-.45.93-1V9c0-.55-.42-1-.93-1Zm-2.65-2.59c-.26-.26-.62-.41-.99-.41H17v-.83c0-.37-.15-.73-.41-.99l-.77-.77c-.26-.26-.62-.41-.99-.41H9.16c-.37 0-.73.15-.99.41l-.76.76c-.26.26-.41.62-.41.99v.83h-.83c-.37 0-.73.15-.99.41l-.77.77c-.26.26-.41.62-.41.99v11.57c0 .56.33 1.07.85 1.29l6.6 2.83c.18.07.36.11.55.11.19 0 .38-.04.55-.11l6.6-2.83c.52-.22.85-.73.85-1.29V7.17c0-.37-.15-.73-.41-.99l-.77-.77ZM9 4.41 9.41 4h5.17l.41.41V5h-6v-.59H9ZM12.1 19h-.7l1.88-2.68-3.28-.43L14.9 12h.7l-1.88 2.68 3.28.43L12.1 19Z\"/>\n        </SvgIcon>\n    );\n}\n\nconst AssetBackingTextOutlined = (props) => {\n    return (\n        <SvgIcon {...props}>\n            <g>\n                <path d=\"M1.6 9v8c0 .55.42 1 .93 1H3V8h-.47c-.52 0-.93.45-.93 1Zm19.87-1H21v10h.47c.52 0 .93-.45.93-1V9c0-.55-.42-1-.93-1Zm-2.65-2.59c-.26-.26-.62-.41-.99-.41H17v-.83c0-.37-.15-.73-.41-.99l-.77-.77c-.26-.26-.62-.41-.99-.41H9.16c-.37 0-.73.15-.99.41l-.76.76c-.26.26-.41.62-.41.99v.83h-.83c-.37 0-.72.14-.99.41l-.77.77c-.26.26-.41.62-.41.99v11.57c0 .56.33 1.07.85 1.29l6.6 2.83c.17.07.36.11.55.11.19 0 .38-.04.55-.11l6.6-2.83c.52-.22.85-.73.85-1.29V7.17c0-.37-.15-.73-.41-.99l-.77-.77ZM9 4.42l.41-.41h5.17l.41.41v.59h-6v-.59H9Zm9 13.93-6 2.57-6-2.57V7.41L6.41 7h11.17l.41.41v10.93l.01.01Z\"/>\n                <path d=\"M16.37 10.06h-4v6h4c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1 .55 0 1-.45 1-1v-1c0-.55-.45-1-1-1Zm-.5 4.5h-2v-.75h2v.75Zm0-2.25h-2v-.75h2v.75Zm-5.25-2.25h-3c-.55 0-1 .45-1 1v5h1.5v-1.5h2v1.5h1.5v-5c0-.55-.45-1-1-1Zm-.5 3h-2v-1.5h2v1.5Z\"/>\n            </g>\n        </SvgIcon>\n    );\n}\n\nconst AssetBackingTextFilled = (props) => {\n    return (\n        <SvgIcon {...props}>\n            <g>\n                <path d=\"M1.6 9v8c0 .55.42 1 .93 1H3V8h-.47c-.52 0-.93.45-.93 1Zm19.87-1H21v10h.47c.52 0 .93-.45.93-1V9c0-.55-.42-1-.93-1Zm-5.59 3.56h-2v.75h2v-.75Zm0 2.25h-2v.75h2v-.75Zm-5.75-2.25h-2v1.5h2v-1.5Z\"/>\n                <path d=\"M18.82 5.41c-.26-.26-.62-.41-.99-.41H17v-.83c0-.37-.15-.73-.41-.99l-.77-.77c-.26-.26-.62-.41-.99-.41H9.16c-.37 0-.72.15-.99.41l-.76.76c-.26.26-.41.62-.41.99v.83h-.83c-.37 0-.72.14-.99.41l-.77.77c-.26.26-.41.62-.41.99v11.57c0 .56.33 1.07.85 1.29l6.6 2.83c.17.07.36.11.55.11.19 0 .38-.04.55-.11l6.6-2.83c.52-.22.85-.73.85-1.29V7.17c0-.37-.15-.73-.41-.99l-.77-.77Zm-7.2 10.66h-1.5v-1.5h-2v1.5h-1.5v-5c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v5ZM8.99 5.01v-.59l.41-.41h5.17l.41.41v.59h-6 .01Zm8.38 7.06c0 .55-.45 1-1 1 .55 0 1 .45 1 1v1c0 .55-.45 1-1 1h-4v-6h4c.55 0 1 .45 1 1v1Z\"/>\n            </g>\n        </SvgIcon>\n    );\n}\n\nexport {\n    AssetBackingOutlined,\n    AssetBackingFilled,\n    AssetBackingTextOutlined,\n    AssetBackingTextFilled\n};","export const CHAIN_IDS  = {\n    ETH: 1,\n    ARB: 42161,\n    BNB: 56,\n    FUSE: 122,\n    AVAX: 43114\n}\n\nexport const CHAIN_IDS_TO_NAMES = {\n    [CHAIN_IDS.ETH]: 'eth',\n    [CHAIN_IDS.ARB]: 'arb',\n    [CHAIN_IDS.BNB]: 'bnb',\n    [CHAIN_IDS.FUSE]: 'fuse',\n    [CHAIN_IDS.AVAX]: 'avax',\n}\n\nexport const CHAIN_IDS_TO_DISPLAY_NAMES = {\n    [CHAIN_IDS.ETH]: 'ETH',\n    [CHAIN_IDS.ARB]: 'ARB',\n    [CHAIN_IDS.BNB]: 'BNB',\n    [CHAIN_IDS.FUSE]: 'FUSE',\n    [CHAIN_IDS.AVAX]: 'AVAX',\n}\n\nexport const CHAIN_IDS_TO_LOGO = {\n    [CHAIN_IDS.ETH]: 'https://coineus.app/assets/tokens/eth/logo.png',\n    [CHAIN_IDS.ARB]: 'https://coineus.app/assets/tokens/arb/chain.png',\n    [CHAIN_IDS.BNB]: 'https://coineus.app/assets/tokens/bnb/logo.png',\n    [CHAIN_IDS.FUSE]: 'https://coineus.app/assets/tokens/fuse/logo.png',\n    [CHAIN_IDS.AVAX]: 'https://coineus.app/assets/tokens/avax/logo.png',\n}","import Web3 from \"web3\";\nimport {useSelector} from \"react-redux\";\nimport {Avatar, Button, Typography} from \"@mui/material\";\nimport {CHAIN_IDS_TO_LOGO, CHAIN_IDS_TO_DISPLAY_NAMES} from '../../../constants';\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\nimport {useEffect, useRef, useState} from \"react\";\n\nconst avatarSX = {width: 24, height: 24}\n\nconst NetworkButton = (props) => {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const { children, network } = props;\n\n    const buttonParentRef = useRef(null);\n\n    const [buttonParentWidth, setButtonParentWidth] = useState(0);\n\n    useEffect(()=>{\n        setButtonParentWidth(buttonParentRef.current?.clientWidth)\n    }, [buttonParentRef.current])\n\n    if(!network){\n        throw new Error('No Network Provided');\n    }\n\n    const checkChain = () => {\n        // if(!wallet.address)return false;\n        return wallet.chain === network;\n    }\n\n    const changeNetwork = async () => {\n        if(!wallet.address)return false;\n        const web3 = new Web3(window.provider);\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{chainId: web3.utils.toHex(network)}], // chainId must be in hexadecimal numbers\n        });\n    }\n\n    return <>\n        {\n            checkChain() ?\n                children\n                :\n                <Button\n                    {...children.props}\n                    disabled={false}\n                    onClick={changeNetwork}\n                    ref={buttonParentRef}\n                >\n                    <Avatar\n                        src={CHAIN_IDS_TO_LOGO[wallet.chain]}\n                        sx={avatarSX} />\n                    <Typography variant=\"body2\" style={{marginLeft: 5, fontWeight: 700, display: buttonParentWidth > 100 ? '' : 'none'}}>{CHAIN_IDS_TO_DISPLAY_NAMES[wallet.chain]}</Typography>\n                    <ArrowRightAltIcon style={{margin: '0 5px'}}/>\n                    <Avatar\n                        src={CHAIN_IDS_TO_LOGO[network]}\n                        sx={avatarSX}\n                    />\n                    <Typography variant=\"body2\" style={{marginLeft: 5, fontWeight: 700, display: buttonParentWidth > 100 ? '' : 'none'}}>{CHAIN_IDS_TO_DISPLAY_NAMES[network]}</Typography>\n                </Button>\n        }\n    </>;\n}\n\nexport default NetworkButton;","import {Whatshot} from '@mui/icons-material';\nimport { AssetBackingOutlined } from \"../icons/AssetBackingIcon\";\nimport {\n    Avatar,\n    Button, Container,\n    Dialog,\n    FormControl,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport ASSET_BACKING_ABI from \"../../abis/Coineus/ASSET_BACKING.json\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {toWei} from \"../../utils/format\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {NetworkButton} from \"../Coineus\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport IERC20_ABI from \"../../abis/IERC20.json\";\nimport getUserBalances from \"../../utils/get_balances\";\n\nconst LIT_AB_CONTRACT = \"0x907BF9C5eb6cF615F6bc318D2CAD0f6Dc1F5b19d\";\n\nexport default function LITAssetBacking(props) {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n\n    const getBackingInfo = () => {\n        if (!open) return;\n\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n        const calls = [contract.methods.getBackingPerToken().call, contract.methods.getEligibleSupply().call, contract.methods.getONEWRAPBalance().call, contract.methods.MAIN_TOKEN().call, contract.methods.ONEWRAP().call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [backingPerToken, eligibleSupply, ONEWRAPBalance, MAIN_TOKEN, ONEWRAP] = resp;\n\n            const contract_main = new web3.eth.Contract(IERC20_ABI, MAIN_TOKEN)\n            const contract_onewrap = new web3.eth.Contract(IERC20_ABI, ONEWRAP)\n            const calls2 = [contract_main.methods.name().call, contract_main.methods.symbol().call, contract_main.methods.decimals().call, contract_onewrap.methods.name().call, contract_onewrap.methods.symbol().call, contract_onewrap.methods.decimals().call, contract.methods.getBackingAmount(toWei(wallet.balances.fuse[MAIN_TOKEN])).call,]\n\n            makeBatchRequest(web3, calls2).then(resp => {\n                const [main_name, main_symbol, main_decimals, onewrap_name, onewrap_symbol, onewrap_decimals, userTotalBacking] = resp;\n\n                setData({\n                    userTotalBacking: userTotalBacking / (10 ** 18),\n                    backingPerToken: backingPerToken / (10 ** 18),\n                    eligibleSupply: eligibleSupply / (10 ** 18),\n                    ONEWRAPBalance: ONEWRAPBalance / (10 ** 18),\n                    MAIN_TOKEN,\n                    ONEWRAP,\n                    main_name,\n                    main_symbol,\n                    main_decimals,\n                    onewrap_name,\n                    onewrap_symbol,\n                    onewrap_decimals,\n                    market_factor: wallet.prices.fuse?.[MAIN_TOKEN]?.inBase / (backingPerToken / (10 ** 18))\n                });\n                setLoading(false);\n            })\n        })\n\n    }\n\n    useEffect(() => {\n        getBackingInfo();\n        const interval = setInterval(getBackingInfo, 30000)\n        return () => clearInterval(interval);\n    }, [open, wallet.prices]);\n\n    const killForBacking = () => {\n        if (wallet.address) {\n\n            const web3 = new Web3(window.provider);\n            const main_contract = new web3.eth.Contract(IERC20_ABI, data.MAIN_TOKEN);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n            setPending(true);\n            main_contract.methods\n                .allowance(wallet.address, LIT_AB_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount)) {\n\n                        main_contract\n                            .methods\n                            .approve(LIT_AB_CONTRACT, toWei(amount))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                kill()\n                            });\n                    } else {\n                        kill()\n                    }\n\n                })\n\n            const kill = () => {\n                contract.methods.killForBacking(toWei(amount))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getBackingInfo();\n                        getUserBalances();\n                        setAmount(0);\n                        setPending(false);\n                    });\n            }\n\n        }\n    }\n\n    const ceus_price_usd = wallet.prices.fuse?.[data.ONEWRAP]?.inUSD;\n    const lit_price_usd = wallet.prices.fuse?.[data.MAIN_TOKEN]?.inUSD;\n    const lit_price_ceus = wallet.prices.fuse?.[data.MAIN_TOKEN]?.inBase;\n\n    if (open && loading) return <CoineusLoading open={loading} label=\"Loading Data\"/>\n\n    return <>\n\n        <IconButton\n            disabled={(wallet.chain !== 122)}\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <AssetBackingOutlined/>\n        </IconButton>\n\n        <Dialog open={open} fullScreen={window.innerWidth <= 400}>\n            <Paper style={{height: '100%'}}>\n                <Container maxWidth=\"xs\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <List dense>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/fuse/${data.MAIN_TOKEN}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.eligibleSupply)} ${data.main_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Eligible Supply\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(wallet.balances.fuse[data.MAIN_TOKEN])} ${data.main_symbol} (${CoineusUSDFormat(wallet.balances.fuse[data.MAIN_TOKEN] * lit_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Balance\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/fuse/${data.ONEWRAP}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.ONEWRAPBalance)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.userTotalBacking)} ${data.onewrap_symbol} (${CoineusUSDFormat(data.userTotalBacking * ceus_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(lit_price_ceus)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market Price\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Backing Per Token\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${data.market_factor?.toFixed(2)}x`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market-to-Backing Factor\"\n                                    />\n                                </ListItem>\n\n\n                                <ListItem>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                setAmount(ev.target.value)\n                                            }}\n                                        />\n                                    </FormControl>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${amount} ${data.main_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * lit_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        style={{flex: 1, maxWidth: '40%'}}\n                                    />\n                                    <ListItemAvatar style={{flex: 1, maxWidth: 0}}>\n                                        <Avatar style={{backgroundColor: 'orange', margin: 0}}><Whatshot/></Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(amount * data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * data.backingPerToken * ceus_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                        style={{flex: 1}}\n                                    />\n                                </ListItem>\n\n\n                                <ListItem style={{marginTop: 40}}>\n                                    <NetworkButton network={CHAIN_IDS.FUSE}>\n                                        <Button variant=\"contained\" fullWidth onClick={killForBacking}>Get\n                                            Backing</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                                <ListItem>\n                                    <NetworkButton network={CHAIN_IDS.FUSE}>\n                                        <Button variant=\"contained\" fullWidth\n                                                onClick={() => setOpen(false)}>Cancel</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Paper>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n    </>\n\n}","import {Whatshot} from '@mui/icons-material';\nimport { AssetBackingOutlined } from \"../icons/AssetBackingIcon\";\nimport {\n    Avatar,\n    Button, Container,\n    Dialog,\n    FormControl,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport ASSET_BACKING_ABI from \"../../abis/Coineus/ASSET_BACKING_NATIVE.json\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {toWei} from \"../../utils/format\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {NetworkButton} from \"../Coineus\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport IERC20_ABI from \"../../abis/IERC20.json\";\nimport getUserBalances from \"../../utils/get_balances\";\n\nconst CEUS_AB_CONTRACT = \"0xe893420d16f907600e1B5Ade28bf2ED7B2196D72\";\n\nexport default function CEUSAssetBacking(props) {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n\n    const getBackingInfo = () => {\n        if (!open) return;\n\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(ASSET_BACKING_ABI, CEUS_AB_CONTRACT);\n\n        const calls = [contract.methods.getBackingPerToken().call, contract.methods.getEligibleSupply().call, contract.methods.getONEWRAPBalance().call, contract.methods.MAIN_TOKEN().call, contract.methods.ONEWRAP().call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [backingPerToken, eligibleSupply, ONEWRAPBalance, MAIN_TOKEN, ONEWRAP] = resp;\n\n            const contract_main = new web3.eth.Contract(IERC20_ABI, MAIN_TOKEN)\n            const contract_onewrap = new web3.eth.Contract(IERC20_ABI, ONEWRAP)\n            const calls2 = [contract_main.methods.name().call, contract_main.methods.symbol().call, contract_main.methods.decimals().call, contract_onewrap.methods.name().call, contract_onewrap.methods.symbol().call, contract_onewrap.methods.decimals().call, contract.methods.getBackingAmount(toWei(wallet.balances.fuse[MAIN_TOKEN])).call,]\n\n            makeBatchRequest(web3, calls2).then(resp => {\n                const [main_name, main_symbol, main_decimals, onewrap_name, onewrap_symbol, onewrap_decimals, userTotalBacking] = resp;\n\n                setData({\n                    userTotalBacking: userTotalBacking / (10 ** 18),\n                    backingPerToken: backingPerToken / (10 ** 18),\n                    eligibleSupply: eligibleSupply / (10 ** 18),\n                    ONEWRAPBalance: ONEWRAPBalance / (10 ** 18),\n                    MAIN_TOKEN,\n                    ONEWRAP,\n                    main_name,\n                    main_symbol,\n                    main_decimals,\n                    onewrap_name,\n                    onewrap_symbol,\n                    onewrap_decimals,\n                    market_factor: wallet.prices.fuse?.[MAIN_TOKEN]?.inFuse / (backingPerToken / (10 ** 18))\n                });\n                setLoading(false);\n            })\n        })\n\n    }\n\n    useEffect(() => {\n        getBackingInfo();\n        const interval = setInterval(getBackingInfo, 30000)\n        return () => clearInterval(interval);\n    }, [open, wallet.prices]);\n\n    const killForBacking = () => {\n        if (wallet.address) {\n\n            const web3 = new Web3(window.provider);\n            const main_contract = new web3.eth.Contract(IERC20_ABI, data.MAIN_TOKEN);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, CEUS_AB_CONTRACT);\n\n            setPending(true);\n            main_contract.methods\n                .allowance(wallet.address, CEUS_AB_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount)) {\n\n                        main_contract\n                            .methods\n                            .approve(CEUS_AB_CONTRACT, toWei(amount))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                kill()\n                            });\n                    } else {\n                        kill()\n                    }\n\n                })\n\n            const kill = () => {\n                contract.methods.killForBacking(toWei(amount))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getBackingInfo();\n                        getUserBalances();\n                        setAmount(0);\n                        setPending(false);\n                    });\n            }\n\n        }\n    }\n\n    const wfuse_price_usd = wallet.prices.fuse?.[data.ONEWRAP]?.inUSD;\n    const ceus_price_usd = wallet.prices.fuse?.[data.MAIN_TOKEN]?.inUSD;\n    const ceus_price_fuse = wallet.prices.fuse?.[data.MAIN_TOKEN]?.inFuse;\n\n    if (open && loading) return <CoineusLoading open={loading} label=\"Loading Data\"/>\n\n    return <>\n\n        <IconButton\n            disabled={(wallet.chain !== 122)}\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <AssetBackingOutlined/>\n        </IconButton>\n\n        <Dialog open={open} fullScreen={window.innerWidth <= 400}>\n            <Paper style={{height: '100%'}}>\n                <Container maxWidth=\"xs\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <List dense>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/fuse/${data.MAIN_TOKEN}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.eligibleSupply)} ${data.main_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Eligible Supply\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(wallet.balances.fuse[data.MAIN_TOKEN])} ${data.main_symbol} (${CoineusUSDFormat(wallet.balances.fuse[data.MAIN_TOKEN] * ceus_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Balance\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/fuse/${data.ONEWRAP}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.ONEWRAPBalance)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.userTotalBacking)} ${data.onewrap_symbol} (${CoineusUSDFormat(data.userTotalBacking * wfuse_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(ceus_price_fuse)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market Price\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Backing Per Token\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${data.market_factor?.toFixed(2)}x`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market-to-Backing Factor\"\n                                    />\n                                </ListItem>\n\n\n                                <ListItem>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                setAmount(ev.target.value)\n                                            }}\n                                        />\n                                    </FormControl>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${amount} ${data.main_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * ceus_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        style={{flex: 1, maxWidth: '40%'}}\n                                    />\n                                    <ListItemAvatar style={{flex: 1, maxWidth: 0}}>\n                                        <Avatar style={{backgroundColor: 'orange', margin: 0}}><Whatshot/></Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(amount * data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * data.backingPerToken * wfuse_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                        style={{flex: 1}}\n                                    />\n                                </ListItem>\n\n\n                                <ListItem style={{marginTop: 40}}>\n                                    <NetworkButton network={CHAIN_IDS.FUSE}>\n                                        <Button variant=\"contained\" fullWidth onClick={killForBacking}>Get\n                                            Backing</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                                <ListItem>\n                                    <NetworkButton network={CHAIN_IDS.FUSE}>\n                                        <Button variant=\"contained\" fullWidth\n                                                onClick={() => setOpen(false)}>Cancel</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Paper>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n    </>\n\n}","import {Whatshot} from '@mui/icons-material';\nimport { AssetBackingOutlined } from \"../icons/AssetBackingIcon\";\nimport {\n    Avatar,\n    Button, Container,\n    Dialog,\n    FormControl,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport ASSET_BACKING_ABI from \"../../abis/Coineus/ASSET_BACKING_LITSRG20.json\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {toWei} from \"../../utils/format\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {NetworkButton} from \"../Coineus\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport IERC20_ABI from \"../../abis/IERC20.json\";\nimport getUserBalances from \"../../utils/get_balances\";\n\nconst LIT_AB_CONTRACT = \"0xA784aE7c4Ce3E854D6cB62237602DDaFC85f245D\";\n\nexport default function LITSRG20AssetBacking(props) {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n\n    const getBackingInfo = () => {\n        if (!open) return;\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n        const calls = [\n            contract.methods.getBackingPerToken().call,\n            contract.methods.getEligibleSupply().call,\n            contract.methods.getONEWRAPBalance().call,\n            contract.methods.MAIN_TOKEN().call,\n            contract.methods.ONEWRAP().call,\n            contract.methods.UNWRAPPED().call,\n        ]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [backingPerToken, eligibleSupply, ONEWRAPBalance, MAIN_TOKEN, ONEWRAP, UNWRAPPED] = resp;\n\n            const contract_main = new web3.eth.Contract(IERC20_ABI, MAIN_TOKEN)\n            const contract_onewrap = new web3.eth.Contract(IERC20_ABI, ONEWRAP)\n            const contract_unwrapped = new web3.eth.Contract(IERC20_ABI, UNWRAPPED)\n            const calls2 = [\n                contract_main.methods.name().call,\n                contract_main.methods.symbol().call,\n                contract_main.methods.decimals().call,\n                contract_onewrap.methods.name().call,\n                contract_onewrap.methods.symbol().call,\n                contract_onewrap.methods.decimals().call,\n                contract.methods.getBackingAmount(toWei(wallet.balances.bnb[MAIN_TOKEN], 9)).call,\n                contract_unwrapped.methods.balanceOf(LIT_AB_CONTRACT).call\n            ]\n\n            makeBatchRequest(web3, calls2).then(resp => {\n                const [main_name, main_symbol, main_decimals, onewrap_name, onewrap_symbol, onewrap_decimals, userTotalBacking, unwrappedBalance] = resp;\n\n                setData({\n                    userTotalBacking: userTotalBacking / (10 ** 9),\n                    backingPerToken: backingPerToken / (10 ** 9),\n                    eligibleSupply: eligibleSupply / (10 ** 9),\n                    ONEWRAPBalance: ONEWRAPBalance / (10 ** 9),\n                    MAIN_TOKEN,\n                    ONEWRAP,\n                    main_name,\n                    main_symbol,\n                    main_decimals,\n                    onewrap_name,\n                    onewrap_symbol,\n                    onewrap_decimals,\n                    market_factor: wallet.prices.bnb?.[MAIN_TOKEN]?.inBase / (backingPerToken / (10 ** 9)),\n                    unwrappedBalance: unwrappedBalance / (10 ** 9)\n                });\n                setLoading(false);\n            })\n        })\n\n    }\n\n    useEffect(() => {\n        getBackingInfo();\n        const interval = setInterval(getBackingInfo, 30000)\n        return () => clearInterval(interval);\n    }, [open, wallet.prices]);\n\n    const killForBacking = () => {\n        if (wallet.address) {\n\n            const web3 = new Web3(window.provider);\n            const main_contract = new web3.eth.Contract(IERC20_ABI, data.MAIN_TOKEN);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n            setPending(true);\n            main_contract.methods\n                .allowance(wallet.address, LIT_AB_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount, 9)) {\n\n                        main_contract\n                            .methods\n                            .approve(LIT_AB_CONTRACT, toWei(amount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                kill()\n                            });\n                    } else {\n                        kill()\n                    }\n\n                })\n\n            const kill = () => {\n                contract.methods.killForBacking(toWei(amount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getBackingInfo();\n                        getUserBalances();\n                        setAmount(0);\n                        setPending(false);\n                    });\n            }\n\n        }\n    }\n\n    const depositSRGtoSRGONE = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n            contract.methods.depositUNWRAPPEDtoONEWRAP()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getBackingInfo();\n                    getUserBalances();\n                    setPending(false);\n                });\n        }\n\n    }\n\n    const ceus_price_usd = wallet.prices.bnb?.[data.ONEWRAP]?.inUSD;\n    const lit_price_usd = wallet.prices.bnb?.[data.MAIN_TOKEN]?.inUSD;\n    const lit_price_ceus = wallet.prices.bnb?.[data.MAIN_TOKEN]?.inBase;\n\n    if (open && loading) return <CoineusLoading open={loading} label=\"Loading Data\"/>\n\n    return <>\n\n        <IconButton\n            disabled={(wallet.chain !== CHAIN_IDS.BNB)}\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <AssetBackingOutlined/>\n        </IconButton>\n\n        <Dialog open={open} fullScreen={window.innerWidth <= 400}>\n            <Paper style={{height: '100%'}}>\n                <Container maxWidth=\"xs\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <List dense>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/bnb/${data.MAIN_TOKEN}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.eligibleSupply)} ${data.main_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Eligible Supply\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(wallet.balances.bnb[data.MAIN_TOKEN])} ${data.main_symbol} (${CoineusUSDFormat(wallet.balances.bnb[data.MAIN_TOKEN] * lit_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Balance\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/bnb/${data.ONEWRAP}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.ONEWRAPBalance)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Total Backing\"\n                                    />\n                                </ListItem>\n\n                                {\n                                    data.unwrappedBalance > 0 &&\n                                    <ListItem>\n                                        <ListItemAvatar/>\n                                        <ListItemText\n                                            primary={`${CoineusCryptoFormat(data.unwrappedBalance)} SRG`}\n                                            primaryTypographyProps={{fontWeight: 700}}\n                                            secondary=\"Pending Deposit\"\n                                        />\n                                        <NetworkButton network={CHAIN_IDS.BNB}>\n                                            <Button onClick={depositSRGtoSRGONE}>\n                                                Deposit\n                                            </Button>\n                                        </NetworkButton>\n                                    </ListItem>\n                                }\n\n\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.userTotalBacking)} ${data.onewrap_symbol} (${CoineusUSDFormat(data.userTotalBacking * ceus_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(lit_price_ceus)} SRG`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market Price\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Backing Per Token\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${data.market_factor?.toFixed(2)}x`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market-to-Backing Factor\"\n                                    />\n                                </ListItem>\n\n\n                                <ListItem>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                setAmount(ev.target.value)\n                                            }}\n                                        />\n                                    </FormControl>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${amount} ${data.main_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * lit_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        style={{flex: 1, maxWidth: '40%'}}\n                                    />\n                                    <ListItemAvatar style={{flex: 1, maxWidth: 0}}>\n                                        <Avatar style={{backgroundColor: 'orange', margin: 0}}><Whatshot/></Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(amount * data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * data.backingPerToken * ceus_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                        style={{flex: 1}}\n                                    />\n                                </ListItem>\n\n\n                                <ListItem style={{marginTop: 40}}>\n                                    <NetworkButton network={CHAIN_IDS.BNB}>\n                                        <Button variant=\"contained\" fullWidth onClick={killForBacking}>Get\n                                            Backing</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                                <ListItem>\n                                    <NetworkButton network={CHAIN_IDS.BNB}>\n                                        <Button variant=\"contained\" fullWidth\n                                                onClick={() => setOpen(false)}>Cancel</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Paper>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n    </>\n\n}\n\n//srg 0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\n//srgone 0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772\n//lit 0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc","import {Whatshot} from '@mui/icons-material';\nimport { AssetBackingOutlined } from \"../icons/AssetBackingIcon\";\nimport {\n    Avatar,\n    Button, Container,\n    Dialog,\n    FormControl,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport ASSET_BACKING_ABI from \"../../abis/Coineus/ASSET_BACKING_LITSRG20.json\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {toWei} from \"../../utils/format\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {NetworkButton} from \"../Coineus\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport IERC20_ABI from \"../../abis/IERC20.json\";\nimport getUserBalances from \"../../utils/get_balances\";\n\nconst LIT_AB_CONTRACT = \"0x90D42Cc7FE837Eba62dbCA7Eca62035529b5f39E\";\n\nexport default function CHADBNBAssetBacking(props) {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n\n    const getBackingInfo = () => {\n        if (!open) return;\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n        const calls = [\n            contract.methods.getBackingPerToken().call,\n            contract.methods.getEligibleSupply().call,\n            contract.methods.getONEWRAPBalance().call,\n            contract.methods.MAIN_TOKEN().call,\n            contract.methods.ONEWRAP().call,\n            contract.methods.UNWRAPPED().call,\n        ]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [backingPerToken, eligibleSupply, ONEWRAPBalance, MAIN_TOKEN, ONEWRAP, UNWRAPPED] = resp;\n\n            const contract_main = new web3.eth.Contract(IERC20_ABI, MAIN_TOKEN)\n            const contract_onewrap = new web3.eth.Contract(IERC20_ABI, ONEWRAP)\n            const contract_unwrapped = new web3.eth.Contract(IERC20_ABI, UNWRAPPED)\n            const calls2 = [\n                contract_main.methods.name().call,\n                contract_main.methods.symbol().call,\n                contract_main.methods.decimals().call,\n                contract_onewrap.methods.name().call,\n                contract_onewrap.methods.symbol().call,\n                contract_onewrap.methods.decimals().call,\n                contract.methods.getBackingAmount(toWei(wallet.balances.bnb[MAIN_TOKEN], 9)).call,\n                contract_unwrapped.methods.balanceOf(LIT_AB_CONTRACT).call\n            ]\n\n            makeBatchRequest(web3, calls2).then(resp => {\n                const [main_name, main_symbol, main_decimals, onewrap_name, onewrap_symbol, onewrap_decimals, userTotalBacking, unwrappedBalance] = resp;\n\n                setData({\n                    userTotalBacking: userTotalBacking / (10 ** 9),\n                    backingPerToken: backingPerToken / (10 ** 9),\n                    eligibleSupply: eligibleSupply / (10 ** 9),\n                    ONEWRAPBalance: ONEWRAPBalance / (10 ** 9),\n                    MAIN_TOKEN,\n                    ONEWRAP,\n                    main_name,\n                    main_symbol,\n                    main_decimals,\n                    onewrap_name,\n                    onewrap_symbol,\n                    onewrap_decimals,\n                    market_factor: wallet.prices.bnb?.[MAIN_TOKEN]?.inBase / (backingPerToken / (10 ** 9)),\n                    unwrappedBalance: unwrappedBalance / (10 ** 9)\n                });\n                setLoading(false);\n            })\n        })\n\n    }\n\n    useEffect(() => {\n        getBackingInfo();\n        const interval = setInterval(getBackingInfo, 30000)\n        return () => clearInterval(interval);\n    }, [open, wallet.prices]);\n\n    const killForBacking = () => {\n        if (wallet.address) {\n\n            const web3 = new Web3(window.provider);\n            const main_contract = new web3.eth.Contract(IERC20_ABI, data.MAIN_TOKEN);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n            setPending(true);\n            main_contract.methods\n                .allowance(wallet.address, LIT_AB_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount, 9)) {\n\n                        main_contract\n                            .methods\n                            .approve(LIT_AB_CONTRACT, toWei(amount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                kill()\n                            });\n                    } else {\n                        kill()\n                    }\n\n                })\n\n            const kill = () => {\n                contract.methods.killForBacking(toWei(amount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getBackingInfo();\n                        getUserBalances();\n                        setAmount(0);\n                        setPending(false);\n                    });\n            }\n\n        }\n    }\n\n    const depositSRGtoSRGONE = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, LIT_AB_CONTRACT);\n\n            contract.methods.depositUNWRAPPEDtoONEWRAP()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getBackingInfo();\n                    getUserBalances();\n                    setPending(false);\n                });\n        }\n\n    }\n\n    const ceus_price_usd = wallet.prices.bnb?.[data.ONEWRAP]?.inUSD;\n    const lit_price_usd = wallet.prices.bnb?.[data.MAIN_TOKEN]?.inUSD;\n    const lit_price_ceus = wallet.prices.bnb?.[data.MAIN_TOKEN]?.inBase;\n\n    if (open && loading) return <CoineusLoading open={loading} label=\"Loading Data\"/>\n\n    return <>\n\n        <IconButton\n            disabled={(wallet.chain !== CHAIN_IDS.BNB)}\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <AssetBackingOutlined/>\n        </IconButton>\n\n        <Dialog open={open} fullScreen={window.innerWidth <= 400}>\n            <Paper style={{height: '100%'}}>\n                <Container maxWidth=\"xs\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <List dense>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/bnb/${data.MAIN_TOKEN}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.eligibleSupply)} ${data.main_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Eligible Supply\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(wallet.balances.bnb[data.MAIN_TOKEN])} ${data.main_symbol} (${CoineusUSDFormat(wallet.balances.bnb[data.MAIN_TOKEN] * lit_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Balance\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/bnb/${data.ONEWRAP}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.ONEWRAPBalance)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Total Backing\"\n                                    />\n                                </ListItem>\n\n                                {\n                                    data.unwrappedBalance > 0 &&\n                                    <ListItem>\n                                        <ListItemAvatar/>\n                                        <ListItemText\n                                            primary={`${CoineusCryptoFormat(data.unwrappedBalance)} SRG`}\n                                            primaryTypographyProps={{fontWeight: 700}}\n                                            secondary=\"Pending Deposit\"\n                                        />\n                                        <NetworkButton network={CHAIN_IDS.BNB}>\n                                            <Button onClick={depositSRGtoSRGONE}>\n                                                Deposit\n                                            </Button>\n                                        </NetworkButton>\n                                    </ListItem>\n                                }\n\n\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.userTotalBacking)} ${data.onewrap_symbol} (${CoineusUSDFormat(data.userTotalBacking * ceus_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(lit_price_ceus)} SRG`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market Price\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Backing Per Token\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${data.market_factor?.toFixed(2)}x`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market-to-Backing Factor\"\n                                    />\n                                </ListItem>\n\n\n                                <ListItem>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                setAmount(ev.target.value)\n                                            }}\n                                        />\n                                    </FormControl>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${amount} ${data.main_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * lit_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        style={{flex: 1, maxWidth: '40%'}}\n                                    />\n                                    <ListItemAvatar style={{flex: 1, maxWidth: 0}}>\n                                        <Avatar style={{backgroundColor: 'orange', margin: 0}}><Whatshot/></Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(amount * data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * data.backingPerToken * ceus_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                        style={{flex: 1}}\n                                    />\n                                </ListItem>\n\n\n                                <ListItem style={{marginTop: 40}}>\n                                    <NetworkButton network={CHAIN_IDS.BNB}>\n                                        <Button variant=\"contained\" fullWidth onClick={killForBacking}>Get\n                                            Backing</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                                <ListItem>\n                                    <NetworkButton network={CHAIN_IDS.BNB}>\n                                        <Button variant=\"contained\" fullWidth\n                                                onClick={() => setOpen(false)}>Cancel</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Paper>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n    </>\n\n}","import {Whatshot} from '@mui/icons-material';\nimport { AssetBackingOutlined } from \"../icons/AssetBackingIcon\";\nimport {\n    Avatar,\n    Button, Container,\n    Dialog,\n    FormControl,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport ASSET_BACKING_ABI from \"../../abis/Coineus/ASSET_BACKING.json\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {toWei} from \"../../utils/format\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {NetworkButton} from \"../Coineus\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport IERC20_ABI from \"../../abis/IERC20.json\";\nimport getUserBalances from \"../../utils/get_balances\";\n\nconst PEPEARB_AB_CONTRACT = \"0xB930131f9B73e229C1aE1Cf67409e99336043dC2\";\n\nexport default function PEPEARBAssetBacking(props) {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n\n    const getBackingInfo = () => {\n        if (!open) return;\n\n        const web3 = new Web3(rpc.arb);\n        const contract = new web3.eth.Contract(ASSET_BACKING_ABI, PEPEARB_AB_CONTRACT);\n\n        const calls = [\n            contract.methods.getBackingPerToken().call, \n            contract.methods.getEligibleSupply().call, \n            contract.methods.getONEWRAPBalance().call, \n            contract.methods.MAIN_TOKEN().call, \n            contract.methods.ONEWRAP().call,\n            contract.methods.UNWRAPPED().call,\n        ]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [backingPerToken, eligibleSupply, ONEWRAPBalance, MAIN_TOKEN, ONEWRAP, UNWRAPPED] = resp;\n\n            const contract_main = new web3.eth.Contract(IERC20_ABI, MAIN_TOKEN)\n            const contract_onewrap = new web3.eth.Contract(IERC20_ABI, ONEWRAP)\n            const contract_unwrapped = new web3.eth.Contract(IERC20_ABI, UNWRAPPED)\n            const calls2 = [\n                contract_main.methods.name().call, \n                contract_main.methods.symbol().call, \n                contract_main.methods.decimals().call, \n                contract_onewrap.methods.name().call, \n                contract_onewrap.methods.symbol().call, \n                contract_onewrap.methods.decimals().call, \n                contract.methods.getBackingAmount(toWei(wallet.balances.arb[MAIN_TOKEN], 9)).call,\n                contract_unwrapped.methods.balanceOf(PEPEARB_AB_CONTRACT).call\n            ]\n\n            makeBatchRequest(web3, calls2).then(resp => {\n                const [main_name, main_symbol, main_decimals, onewrap_name, onewrap_symbol, onewrap_decimals, userTotalBacking, unwrappedBalance] = resp;\n\n                setData({\n                    userTotalBacking: userTotalBacking / (10 ** 9),\n                    backingPerToken: backingPerToken / (10 ** 9),\n                    eligibleSupply: eligibleSupply / (10 ** 9),\n                    ONEWRAPBalance: ONEWRAPBalance / (10 ** 9),\n                    MAIN_TOKEN,\n                    ONEWRAP,\n                    main_name,\n                    main_symbol,\n                    main_decimals,\n                    onewrap_name,\n                    onewrap_symbol,\n                    onewrap_decimals,\n                    market_factor: wallet.prices.arb?.[MAIN_TOKEN]?.inBase / (backingPerToken / (10 ** 9)),\n                    unwrappedBalance: unwrappedBalance / (10 ** 9)\n                });\n                setLoading(false);\n            })\n        })\n\n    }\n\n    useEffect(() => {\n        getBackingInfo();\n        const interval = setInterval(getBackingInfo, 30000)\n        return () => clearInterval(interval);\n    }, [open]);\n\n    const killForBacking = () => {\n        if (wallet.address) {\n\n            const web3 = new Web3(window.provider);\n            const main_contract = new web3.eth.Contract(IERC20_ABI, data.MAIN_TOKEN);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, PEPEARB_AB_CONTRACT);\n\n            setPending(true);\n            main_contract.methods\n                .allowance(wallet.address, PEPEARB_AB_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount, 9)) {\n\n                        main_contract\n                            .methods\n                            .approve(PEPEARB_AB_CONTRACT, toWei(amount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                kill()\n                            });\n                    } else {\n                        kill()\n                    }\n\n                })\n\n            const kill = () => {\n                contract.methods.killForBacking(toWei(amount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getBackingInfo();\n                        getUserBalances();\n                        setAmount(0);\n                        setPending(false);\n                    });\n            }\n\n        }\n    }\n\n    const depositSRGtoSRGONE = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, PEPEARB_AB_CONTRACT);\n\n            contract.methods.depositUNWRAPPEDtoONEWRAP()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getBackingInfo();\n                    getUserBalances();\n                    setPending(false);\n                });\n        }\n\n    }\n\n    const ceus_price_usd = wallet.prices.arb?.[data.ONEWRAP]?.inUSD;\n    const lit_price_usd = wallet.prices.arb?.[data.MAIN_TOKEN]?.inUSD;\n    const lit_price_ceus = wallet.prices.arb?.[data.MAIN_TOKEN]?.inBase;\n\n    if (open && loading) return <CoineusLoading open={loading} label=\"Loading Data\"/>\n\n    return <>\n\n        <IconButton\n            disabled={(wallet.chain !== CHAIN_IDS.ARB)}\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <AssetBackingOutlined/>\n        </IconButton>\n\n        <Dialog open={open} fullScreen={window.innerWidth <= 400}>\n            <Paper style={{height: '100%'}}>\n                <Container maxWidth=\"xs\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <List dense>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/arb/${data.MAIN_TOKEN}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.eligibleSupply)} ${data.main_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Eligible Supply\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(wallet.balances.arb[data.MAIN_TOKEN])} ${data.main_symbol} (${CoineusUSDFormat(wallet.balances.arb[data.MAIN_TOKEN] * lit_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Balance\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/arb/${data.ONEWRAP}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.ONEWRAPBalance)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.userTotalBacking)} ${data.onewrap_symbol} (${CoineusUSDFormat(data.userTotalBacking * ceus_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Total Backing\"\n                                    />\n                                </ListItem>\n\n                                {\n                                    data.unwrappedBalance > 0 &&\n                                    <ListItem>\n                                        <ListItemAvatar/>\n                                        <ListItemText\n                                            primary={`${CoineusCryptoFormat(data.unwrappedBalance)} SRG`}\n                                            primaryTypographyProps={{fontWeight: 700}}\n                                            secondary=\"Pending Deposit\"\n                                        />\n                                        <NetworkButton network={CHAIN_IDS.ARB}>\n                                            <Button onClick={depositSRGtoSRGONE}>\n                                                Deposit\n                                            </Button>\n                                        </NetworkButton>\n                                    </ListItem>\n                                }\n                                \n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(lit_price_ceus)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market Price\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Backing Per Token\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${data.market_factor?.toFixed(2)}x`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market-to-Backing Factor\"\n                                    />\n                                </ListItem>\n\n\n                                <ListItem>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                setAmount(ev.target.value)\n                                            }}\n                                        />\n                                    </FormControl>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${amount} ${data.main_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * lit_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        style={{flex: 1, maxWidth: '40%'}}\n                                    />\n                                    <ListItemAvatar style={{flex: 1, maxWidth: 0}}>\n                                        <Avatar style={{backgroundColor: 'orange', margin: 0}}><Whatshot/></Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(amount * data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * data.backingPerToken * ceus_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                        style={{flex: 1}}\n                                    />\n                                </ListItem>\n\n\n                                <ListItem style={{marginTop: 30}}>\n                                    <NetworkButton network={CHAIN_IDS.ARB}>\n                                        <Button variant=\"contained\" fullWidth onClick={killForBacking}>Get\n                                            Backing</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                                <ListItem>\n                                    <NetworkButton network={CHAIN_IDS.ARB}>\n                                        <Button variant=\"contained\" fullWidth\n                                                onClick={() => setOpen(false)}>Cancel</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Paper>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n    </>\n\n}","import {Whatshot} from '@mui/icons-material';\nimport { AssetBackingOutlined } from \"../icons/AssetBackingIcon\";\nimport {\n    Avatar,\n    Button, Container,\n    Dialog,\n    FormControl,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport ASSET_BACKING_ABI from \"../../abis/Coineus/ASSET_BACKING_LITSRG20.json\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {toWei} from \"../../utils/format\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {NetworkButton} from \"../Coineus\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport IERC20_ABI from \"../../abis/IERC20.json\";\nimport getUserBalances from \"../../utils/get_balances\";\n\nconst CHADARB_AB_CONTRACT = \"0x72cD16D6a9bBC1576a5B781229040Ee1FC9e56E7\";\n\nexport default function CHADARBAssetBacking(props) {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n\n    const getBackingInfo = () => {\n        if (!open) return;\n\n        const web3 = new Web3(rpc.arb);\n        const contract = new web3.eth.Contract(ASSET_BACKING_ABI, CHADARB_AB_CONTRACT);\n\n        const calls = [\n            contract.methods.getBackingPerToken().call,\n            contract.methods.getEligibleSupply().call,\n            contract.methods.getONEWRAPBalance().call,\n            contract.methods.MAIN_TOKEN().call,\n            contract.methods.ONEWRAP().call,\n            contract.methods.UNWRAPPED().call,\n        ]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [backingPerToken, eligibleSupply, ONEWRAPBalance, MAIN_TOKEN, ONEWRAP, UNWRAPPED] = resp;\n\n            const contract_main = new web3.eth.Contract(IERC20_ABI, MAIN_TOKEN)\n            const contract_onewrap = new web3.eth.Contract(IERC20_ABI, ONEWRAP)\n            const contract_unwrapped = new web3.eth.Contract(IERC20_ABI, UNWRAPPED)\n            const calls2 = [\n                contract_main.methods.name().call,\n                contract_main.methods.symbol().call,\n                contract_main.methods.decimals().call,\n                contract_onewrap.methods.name().call,\n                contract_onewrap.methods.symbol().call,\n                contract_onewrap.methods.decimals().call,\n                contract.methods.getBackingAmount(toWei(wallet.balances.arb[MAIN_TOKEN], 9)).call,\n                contract_unwrapped.methods.balanceOf(CHADARB_AB_CONTRACT).call\n            ]\n\n            makeBatchRequest(web3, calls2).then(resp => {\n                const [main_name, main_symbol, main_decimals, onewrap_name, onewrap_symbol, onewrap_decimals, userTotalBacking, unwrappedBalance] = resp;\n\n                setData({\n                    userTotalBacking: userTotalBacking / (10 ** 9),\n                    backingPerToken: backingPerToken / (10 ** 9),\n                    eligibleSupply: eligibleSupply / (10 ** 9),\n                    ONEWRAPBalance: ONEWRAPBalance / (10 ** 9),\n                    MAIN_TOKEN,\n                    ONEWRAP,\n                    main_name,\n                    main_symbol,\n                    main_decimals,\n                    onewrap_name,\n                    onewrap_symbol,\n                    onewrap_decimals,\n                    market_factor: wallet.prices.arb?.[MAIN_TOKEN]?.inBase / (backingPerToken / (10 ** 9)),\n                    unwrappedBalance: unwrappedBalance / (10 ** 9)\n                });\n                setLoading(false);\n            })\n        })\n\n    }\n\n    useEffect(() => {\n        getBackingInfo();\n        const interval = setInterval(getBackingInfo, 30000)\n        return () => clearInterval(interval);\n    }, [open, wallet.prices]);\n\n    const killForBacking = () => {\n        if (wallet.address) {\n\n            const web3 = new Web3(window.provider);\n            const main_contract = new web3.eth.Contract(IERC20_ABI, data.MAIN_TOKEN);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, CHADARB_AB_CONTRACT);\n\n            setPending(true);\n            main_contract.methods\n                .allowance(wallet.address, CHADARB_AB_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount, 9)) {\n\n                        main_contract\n                            .methods\n                            .approve(CHADARB_AB_CONTRACT, toWei(amount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                kill()\n                            });\n                    } else {\n                        kill()\n                    }\n\n                })\n\n            const kill = () => {\n                contract.methods.killForBacking(toWei(amount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getBackingInfo();\n                        getUserBalances();\n                        setAmount(0);\n                        setPending(false);\n                    });\n            }\n\n        }\n    }\n\n    const depositSRGtoSRGONE = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(ASSET_BACKING_ABI, CHADARB_AB_CONTRACT);\n\n            contract.methods.depositUNWRAPPEDtoONEWRAP()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getBackingInfo();\n                    getUserBalances();\n                    setPending(false);\n                });\n        }\n\n    }\n\n    const ceus_price_usd = wallet.prices.arb?.[data.ONEWRAP]?.inUSD;\n    const lit_price_usd = wallet.prices.arb?.[data.MAIN_TOKEN]?.inUSD;\n    const lit_price_ceus = wallet.prices.arb?.[data.MAIN_TOKEN]?.inBase;\n\n    if (open && loading) return <CoineusLoading open={loading} label=\"Loading Data\"/>\n\n    return <>\n\n        <IconButton\n            disabled={(wallet.chain !== CHAIN_IDS.ARB)}\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <AssetBackingOutlined />\n        </IconButton>\n\n        <Dialog open={open} fullScreen={window.innerWidth <= 400}>\n            <Paper style={{height: '100%'}}>\n                <Container maxWidth=\"xs\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <List dense>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/arb/${data.MAIN_TOKEN}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.eligibleSupply)} ${data.main_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Eligible Supply\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(wallet.balances.arb[data.MAIN_TOKEN])} ${data.main_symbol} (${CoineusUSDFormat(wallet.balances.arb[data.MAIN_TOKEN] * lit_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Balance\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            src={`https://coineus.app/assets/tokens/arb/${data.ONEWRAP}/logo.png`}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.ONEWRAPBalance)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Total Backing\"\n                                    />\n                                </ListItem>\n\n                                {\n                                    data.unwrappedBalance > 0 &&\n                                    <ListItem>\n                                        <ListItemAvatar/>\n                                        <ListItemText\n                                            primary={`${CoineusCryptoFormat(data.unwrappedBalance)} SRG`}\n                                            primaryTypographyProps={{fontWeight: 700}}\n                                            secondary=\"Pending Deposit\"\n                                        />\n                                        <NetworkButton network={CHAIN_IDS.ARB}>\n                                            <Button onClick={depositSRGtoSRGONE}>\n                                                Deposit\n                                            </Button>\n                                        </NetworkButton>\n                                    </ListItem>\n                                }\n\n\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.userTotalBacking)} ${data.onewrap_symbol} (${CoineusUSDFormat(data.userTotalBacking * ceus_price_usd)})`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"User Total Backing\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(lit_price_ceus)} SRG`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market Price\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Backing Per Token\"\n                                    />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar/>\n                                    <ListItemText\n                                        primary={`${data.market_factor?.toFixed(2)}x`}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        secondary=\"Market-to-Backing Factor\"\n                                    />\n                                </ListItem>\n\n\n                                <ListItem>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                setAmount(ev.target.value)\n                                            }}\n                                        />\n                                    </FormControl>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${amount} ${data.main_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * lit_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700}}\n                                        style={{flex: 1, maxWidth: '40%'}}\n                                    />\n                                    <ListItemAvatar style={{flex: 1, maxWidth: 0}}>\n                                        <Avatar style={{backgroundColor: 'orange', margin: 0}}><Whatshot/></Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(amount * data.backingPerToken)} ${data.onewrap_symbol}`}\n                                        secondary={CoineusUSDFormat(amount * data.backingPerToken * ceus_price_usd)}\n                                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                        style={{flex: 1}}\n                                    />\n                                </ListItem>\n\n\n                                <ListItem style={{marginTop: 40}}>\n                                    <NetworkButton network={CHAIN_IDS.ARB}>\n                                        <Button variant=\"contained\" fullWidth onClick={killForBacking}>Get\n                                            Backing</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                                <ListItem>\n                                    <NetworkButton network={CHAIN_IDS.ARB}>\n                                        <Button variant=\"contained\" fullWidth\n                                                onClick={() => setOpen(false)}>Cancel</Button>\n                                    </NetworkButton>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Paper>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n    </>\n\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineusone_abi from '../../abis/Coineus/FUSEONE.json';\n\nimport {useState} from \"react\";\n\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport {toWei} from \"../../utils/format\";\nimport CoineusLoading from \"../CoineusLoading\";\nimport {CoineusCryptoFormat} from \"../../utils/currency_format\";\n\nconst CEUS_CONTRACT_ADDRESS = \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"\nconst FUSEONE_CONTRACT_ADDRESS = \"0xadF951967082452c46eA853158e0838F0EB6fee5\"\n\nexport default function FUSEONE(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, FUSEONE_CONTRACT_ADDRESS);\n\n            contract.methods.deposit()\n                .send({\n                    from: wallet.address,\n                    value: toWei(amount)\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    onSuccess();\n                    setAmount('');\n                    setOpen(false);\n                    setPending(false);\n                });\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, FUSEONE_CONTRACT_ADDRESS);\n\n            contract\n                .methods\n                .allowance(wallet.address, FUSEONE_CONTRACT_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(FUSEONE_CONTRACT_ADDRESS, toWei(amount))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse?.native)} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse?.native)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse?.native}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[FUSEONE_CONTRACT_ADDRESS])} FUSEONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[FUSEONE_CONTRACT_ADDRESS]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[FUSEONE_CONTRACT_ADDRESS])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[FUSEONE_CONTRACT_ADDRESS]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                        <Box style={{padding: 20, paddingTop: 0, textAlign: 'center'}}>\n                            <Typography variant=\"caption\" color=\"primary\">1% Fee on Deposits and\n                                Withdrawals</Typography>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}\n","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\n    Divider,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {useEffect, useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\nimport LPTokenListItem from \"../components/LPTokenListItem\";\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport CEUSONE from \"../components/ONES/CEUSONE\";\nimport SRGONE from \"../components/ONES/SRGONE\";\nimport LITAssetBacking from \"../components/AssetBacking/LIT\";\nimport CEUSAssetBacking from \"../components/AssetBacking/CEUS\";\nimport LITSRG20AssetBacking from \"../components/AssetBacking/LITSRG20\";\nimport CHADBNBAssetBacking from \"../components/AssetBacking/CHADBNB\";\nimport PEPEARBAssetBacking from \"../components/AssetBacking/PEPEARB\";\nimport CHADARBAssetBacking from \"../components/AssetBacking/CHADARB\";\nimport {CHAIN_IDS, CHAIN_IDS_TO_NAMES} from \"../constants\";\nimport FUSEONE from \"../components/ONES/FUSEONE\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const claimRewards = (contract_address) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(bbks_abi, contract_address);\n\n            contract.methods\n                .claimRewards()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances();\n                    setPending(false);\n                });\n        }\n    }\n\n    useEffect(()=>{\n        if(!wallet.chain)return;\n        setChainTab(CHAIN_IDS_TO_NAMES[wallet.chain])\n    }, [wallet.chain])\n\n    return (<Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {/*<Grid item xs={12}>*/}\n            {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n            {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n            {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n            {/*            more.</Typography>*/}\n            {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n            {/*    </Paper>*/}\n            {/*</Grid>*/}\n\n            <PriceScroll/>\n\n            <Grid item xs={12}>\n\n                <Paper style={{marginTop: 10}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusUSDFormat(\n                                wallet.totals.fuse +\n                                wallet.totals.avax +\n                                wallet.totals.bnb +\n                                wallet.totals.eth\n                            )}\n                            secondary=\"Total Wallet Value\"\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n\n\n                <Tabs\n                    value={chainTab}\n                    onChange={(ev, val) => {\n                        setChainTab(val)\n                    }}\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                    <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                    <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                    <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    <Tab id=\"arb\" value=\"arb\" label=\"ARB\"/>\n                </Tabs>\n\n                {\n                    chainTab === 'fuse' && <>\n                        <Paper style={{marginTop: 10}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                    secondary=\"Total FUSE Value\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n\n                        {/*FUSE*/}\n                        <TokenListItem\n                            contract_address=\"native\"\n                            wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                            network=\"fuse\"\n                            name=\"FUSE\"\n                            native\n                            price={wallet.prices.fuse?.native}\n                            pair=\"0x91520fc2942fd52949514f159aa4927b8850178d\"\n                            invertPrice={true}\n                            secondaryAction={\n                                <IconButton\n                                    disabled={wallet.chain !== 122}\n                                    edge=\"end\"\n                                    aria-label=\"stake\"\n                                    onClick={() => setStakeOpen(true)}\n                                    color=\"primary\"\n                                >\n                                    <BoltIcon/>\n                                </IconButton>\n                            }\n                        />\n                        <PowerStake\n                            open={stakeOpen}\n                            amount={wallet.balances.fuse.native}\n                            close={() => setStakeOpen(false)}\n                            onSubmit={() => {\n                                setStakeOpen(false);\n                                setPending(true);\n                            }}\n                            onSuccess={() => {\n                                getUserBalances(wallet.address);\n                                setPending(false);\n                            }}\n                            onError={(err) => {\n                                setPending(false);\n                            }}\n                        />\n\n                        {/*FUSEONE*/}\n                        <TokenListItem\n                            contract_address=\"0xadF951967082452c46eA853158e0838F0EB6fee5\"\n                            network=\"fuse\"\n                            name=\"FUSEONE\"\n                            price={wallet.prices.fuse?.[\"0xadF951967082452c46eA853158e0838F0EB6fee5\"]}\n                            secondaryAction={<FUSEONE onSuccess={() => getUserBalances(wallet.address)}/>}\n                            cnsDetails={wallet.info.fuse?.[\"0xadF951967082452c46eA853158e0838F0EB6fee5\"]}\n                            detailsLabel=\"FUSEONE\"\n                        />\n\n                        {/*CEUS*/}\n                        <TokenListItem\n                            contract_address=\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"\n                            network=\"fuse\"\n                            name=\"CEUS\"\n                            price={wallet.prices.fuse?.[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"]}\n                            pair=\"0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b\"\n                            secondaryAction={<CEUSAssetBacking />}\n                        />\n\n                        {/*CEUSONE*/}\n                        <TokenListItem\n                            contract_address=\"0xE27431FACb1F093BA164c9F86B3f484b39ad54CC\"\n                            network=\"fuse\"\n                            name=\"CEUSONE\"\n                            price={wallet.prices.fuse?.[\"0xE27431FACb1F093BA164c9F86B3f484b39ad54CC\"]}\n                            secondaryAction={<CEUSONE onSuccess={() => getUserBalances(wallet.address)}/>}\n                            cnsDetails={wallet.info.fuse?.[\"0xE27431FACb1F093BA164c9F86B3f484b39ad54CC\"]}\n                            detailsLabel=\"CEUSONE\"\n                        />\n\n                        {/*LIT*/}\n                        <TokenListItem\n                            contract_address=\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"\n                            network=\"fuse\"\n                            name=\"LIT\"\n                            price={wallet.prices.fuse?.[\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"]}\n                            pair=\"0x87440f829e7ed808599749630555080917c4b3d9\"\n                            secondaryAction={<LITAssetBacking />}\n                        />\n\n                        {/*fUSD*/}\n                        <TokenListItem\n                            contract_address=\"0xd0ce1b4A349C35e61Af02f5971e71ac502441E49\"\n                            network=\"fuse\"\n                            name=\"fUSD\"\n                            price={wallet.prices.fuse?.[\"0xd0ce1b4A349C35e61Af02f5971e71ac502441E49\"]}\n                            pair=\"0x933a10d094592eb3f2a26bcb366472eba8868a66\"\n                        />\n\n                        {/*FSB*/}\n                        <TokenListItem\n                            contract_address=\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"\n                            network=\"fuse\"\n                            name=\"FSB\"\n                            price={wallet.prices.fuse?.[\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"]}\n                            pair=\"0x3df8938e749dd3a2b21fa4dd073366cb2359158a\"\n                        />\n\n                        {/*VOLT*/}\n                        <TokenListItem\n                            contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                            network=\"fuse\"\n                            name=\"VOLT\"\n                            price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            pair=\"0xa670b12f8485aa379e99cf097017785b6aca5968\"\n                        />\n\n                        {/*BTC*/}\n                        <TokenListItem\n                            contract_address=\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"\n                            network=\"fuse\"\n                            name=\"WBTC\"\n                            price={wallet.prices.fuse?.[\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"]}\n                            pair=\"0x5484150682bfb3d655faff28b3ac0295ca5a1222\"\n                            invertPrice={true}\n                        />\n\n                        {/*ETH*/}\n                        <TokenListItem\n                            contract_address=\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"\n                            network=\"fuse\"\n                            name=\"WETH\"\n                            price={wallet.prices.fuse?.[\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"]}\n                            pair=\"0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c\"\n                        />\n\n                        {/*BNB*/}\n                        <TokenListItem\n                            contract_address=\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"\n                            network=\"fuse\"\n                            name=\"WBNB\"\n                            price={wallet.prices.fuse?.[\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"]}\n                            pair=\"0x0df48369504825c16d3fc6a74842aef3c91e90e6\"\n                        />\n\n                        <Grid item xs={12}><Divider>LP TOKENS</Divider></Grid>\n\n                        {/*CEUS/LIT*/}\n                        <LPTokenListItem\n                            contract_address=\"0x87440F829E7ED808599749630555080917c4b3D9\"\n                            token0=\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"\n                            token1=\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"\n                            token0Symbol=\"CEUS\"\n                            token1Symbol=\"LIT\"\n                            network=\"fuse\"\n                            name=\"CEUS/LIT\"\n                            price={wallet.prices.fuse?.[\"0x87440F829E7ED808599749630555080917c4b3D9\"]}\n                        />\n\n                        {/*CEUS/WFUSE*/}\n                        <LPTokenListItem\n                            contract_address=\"0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b\"\n                            token0=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                            token1=\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"\n                            token0Symbol=\"WFUSE\"\n                            token1Symbol=\"CEUS\"\n                            network=\"fuse\"\n                            name=\"WFUSE/CEUS\"\n                            price={wallet.prices.fuse?.[\"0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b\"]}\n                        />\n\n                        {/*FUSE/LIT*/}\n                        <LPTokenListItem\n                            contract_address=\"0x1a77baea67c346ce17486b078a3c3f53a99a9fcc\"\n                            token0=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                            token1=\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"\n                            token0Symbol=\"WFUSE\"\n                            token1Symbol=\"LIT\"\n                            network=\"fuse\"\n                            name=\"WFUSE/LIT\"\n                            price={wallet.prices.fuse?.[\"0x1a77baea67c346ce17486b078a3c3f53a99a9fcc\"]}\n                        />\n\n\n                    </>\n                }\n\n\n                {\n                    chainTab === 'avax' && <>\n                        <Paper style={{marginTop: 10}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusUSDFormat(wallet.totals.avax)}\n                                    secondary=\"Total AVAX Value\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n\n                        <TokenListItem\n                            contract_address=\"native\"\n                            network=\"avax\"\n                            name=\"AVAX\"\n                            native\n                            price={wallet.prices.avax?.native}\n                        />\n\n                        {/*USDC*/}\n                        <TokenListItem\n                            contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                            network=\"avax\"\n                            name=\"USDC\"\n                            price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                        />\n\n                        {/*DGNX*/}\n                        <TokenListItem\n                            contract_address=\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"\n                            network=\"avax\"\n                            name=\"DGNX\"\n                            price={wallet.prices.avax?.[\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"]}\n                        />\n\n                    </>\n                }\n\n\n                {\n                    chainTab === 'bnb' && <>\n                        <Paper style={{marginTop: 10}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                    secondary=\"Total BNB Value\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n\n                        {/*BNB*/}\n                        <TokenListItem\n                            contract_address=\"native\"\n                            network=\"bnb\"\n                            name=\"BNB\"\n                            native\n                            price={wallet.prices.bnb?.native}\n                            wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                        />\n\n                        {/*LIT SRG20*/}\n                        <TokenListItem\n                            contract_address=\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"\n                            name=\"LIT\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"]}\n                            rewardsSymbol=\"SRG\"\n                            rewards={wallet.info.bnb?.[\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"]?.pending_rewards}\n                            rewardsUSD={wallet.info.bnb?.[\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"]?.pending_rewards * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD}\n\n                            rewardsRealised={wallet.info.bnb?.[\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"]?.total_realised}\n                            rewardsRealisedUSD={wallet.info.bnb?.[\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"]?.total_realised * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD}\n                            rewardsClaim={<IconButton\n                                color=\"primary\"\n                                size=\"small\"\n                                onClick={()=>claimRewards(\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\")}\n                                disabled={wallet.chain !== 56}>\n                                <CurrencyExchangeIcon fontSize=\"small\"/>\n                            </IconButton>}\n                            secondaryAction={<LITSRG20AssetBacking />}\n                        />\n\n                        {/*CHAD SRG20*/}\n                        <TokenListItem\n                            contract_address=\"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\"\n                            name=\"CHAD\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\"]}\n                            rewardsSymbol=\"SRGONE\"\n                            rewards={wallet.info.bnb?.[\"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\"]?.pending_rewards}\n                            rewardsUSD={wallet.info.bnb?.[\"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\"]?.pending_rewards * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD}\n\n                            rewardsRealised={wallet.info.bnb?.[\"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\"]?.total_realised}\n                            rewardsRealisedUSD={wallet.info.bnb?.[\"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\"]?.total_realised * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD}\n                            rewardsClaim={<IconButton\n                                color=\"primary\"\n                                size=\"small\"\n                                onClick={()=>claimRewards(\"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\")}\n                                disabled={wallet.chain !== 56}>\n                                <CurrencyExchangeIcon fontSize=\"small\"/>\n                            </IconButton>}\n                            secondaryAction={<CHADBNBAssetBacking />}\n                        />\n\n                        {/*PEPE*/}\n                        <TokenListItem\n                            contract_address=\"0x67B38309BACBc77E6570e9557b23d6955A9bD7e3\"\n                            name=\"PEPE\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0x67B38309BACBc77E6570e9557b23d6955A9bD7e3\"]}\n                            rewardsSymbol=\"SRG\"\n                            rewards={wallet.info.bnb?.[\"0x67B38309BACBc77E6570e9557b23d6955A9bD7e3\"]?.pending_rewards}\n                            rewardsUSD={wallet.info.bnb?.[\"0x67B38309BACBc77E6570e9557b23d6955A9bD7e3\"]?.pending_rewards * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD}\n\n                            rewardsRealised={wallet.info.bnb?.[\"0x67B38309BACBc77E6570e9557b23d6955A9bD7e3\"]?.total_realised}\n                            rewardsRealisedUSD={wallet.info.bnb?.[\"0x67B38309BACBc77E6570e9557b23d6955A9bD7e3\"]?.total_realised * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD}\n                            rewardsClaim={<IconButton\n                                color=\"primary\"\n                                size=\"small\"\n                                onClick={()=>claimRewards(\"0x67B38309BACBc77E6570e9557b23d6955A9bD7e3\")}\n                                disabled={wallet.chain !== 56}>\n                                <CurrencyExchangeIcon fontSize=\"small\"/>\n                            </IconButton>}\n                        />\n\n                        {/*SRG*/}\n                        <TokenListItem\n                            contract_address=\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"\n                            name=\"SRG\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]}\n                        />\n\n                        {/*SRGONE*/}\n                        <TokenListItem\n                            contract_address=\"0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772\"\n                            name=\"SRGONE\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772\"]}\n                            secondaryAction={<SRGONE network=\"bnb\" onSuccess={() => getUserBalances(wallet.address)}/>}\n                            srgDetails={wallet.info.bnb?.[\"0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772\"]}\n                            detailsLabel=\"SRGONE\"\n                        />\n\n                        {/*BUSD*/}\n                        <TokenListItem\n                            contract_address=\"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\n                            name=\"BUSD\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"]}\n                        />\n\n                        {/*USDC*/}\n                        <TokenListItem\n                            contract_address=\"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\"\n                            name=\"USDC\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\"]}\n                        />\n\n                        {/*USDT*/}\n                        <TokenListItem\n                            contract_address=\"0x55d398326f99059fF775485246999027B3197955\"\n                            name=\"USDT\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0x55d398326f99059fF775485246999027B3197955\"]}\n                        />\n\n                        {/*FEG*/}\n                        <TokenListItem\n                            contract_address=\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"\n                            name=\"FEG\"\n                            network=\"bnb\"\n                            price={wallet.prices.bnb?.[\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"]}\n                        />\n\n                    </>\n                }\n\n\n                {\n                    chainTab === 'eth' && <>\n                        <Paper style={{marginTop: 10}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusUSDFormat(wallet.totals.eth)}\n                                    secondary=\"Total ETH Value\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n\n                        {/*ETH*/}\n                        <TokenListItem\n                            contract_address=\"native\"\n                            network=\"eth\"\n                            name=\"ETH\"\n                            native\n                            price={wallet.prices.eth?.native}\n                            wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                        />\n\n                        {/*USDC*/}\n                        <TokenListItem\n                            contract_address=\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"\n                            network=\"eth\"\n                            name=\"USDC\"\n                            price={wallet.prices.eth?.[\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"]}\n                        />\n\n                        {/*USDT*/}\n                        <TokenListItem\n                            contract_address=\"0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n                            network=\"eth\"\n                            name=\"USDT\"\n                            price={wallet.prices.eth?.[\"0xdAC17F958D2ee523a2206206994597C13D831ec7\"]}\n                        />\n\n                        {/*SRG*/}\n                        <TokenListItem\n                            contract_address=\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"\n                            name=\"SRG\"\n                            network=\"eth\"\n                            price={wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]}\n                        />\n\n                        {/*BBKS*/}\n                        <TokenListItem\n                            contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                            name=\"BBKS\"\n                            network=\"eth\"\n                            price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                        />\n\n                        {/*FEG*/}\n                        <TokenListItem\n                            contract_address=\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"\n                            name=\"FEG\"\n                            network=\"eth\"\n                            price={wallet.prices.eth?.[\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"]}\n                        />\n                    </>\n                }\n\n                {\n                    chainTab === 'arb' && <>\n                        {\n                            wallet.address && <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.arb)}\n                                        secondary=\"Total ARB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        }\n\n                        {/*ARETH*/}\n                        <TokenListItem\n                            contract_address=\"native\"\n                            network=\"arb\"\n                            name=\"ETH\"\n                            native\n                            price={wallet.prices.arb?.native}\n                        />\n\n                        {/*SRG*/}\n                        <TokenListItem\n                            contract_address=\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"\n                            network=\"arb\"\n                            name=\"SRG\"\n                            price={wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]}\n                        />\n\n                        {/*SRGONE*/}\n                        <TokenListItem\n                            contract_address=\"0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239\"\n                            name=\"SRGONE\"\n                            network=\"arb\"\n                            price={wallet.prices.arb?.[\"0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239\"]}\n                            secondaryAction={<SRGONE network=\"arb\" onSuccess={() => getUserBalances(wallet.address)}/>}\n                            srgDetails={wallet.info.arb?.[\"0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239\"]}\n                            detailsLabel=\"SRGONE\"\n                        />\n\n                        {/*PEPE*/}\n                        <TokenListItem\n                            contract_address=\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\"\n                            network=\"arb\"\n                            name=\"$PEPE\"\n                            price={wallet.prices.arb?.[\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\"]}\n\n                            rewardsSymbol=\"SRG\"\n                            rewards={wallet.info.arb?.[\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\"]?.pending_rewards}\n                            rewardsUSD={wallet.info.arb?.[\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\"]?.pending_rewards * wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]?.inUSD}\n\n                            rewardsRealised={wallet.info.arb?.[\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\"]?.total_realised}\n                            rewardsRealisedUSD={wallet.info.arb?.[\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\"]?.total_realised * wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]?.inUSD}\n                            rewardsClaim={<IconButton\n                                color=\"primary\"\n                                size=\"small\"\n                                onClick={()=>claimRewards(\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\")}\n                                disabled={wallet.chain !== CHAIN_IDS.ARB}>\n                                <CurrencyExchangeIcon fontSize=\"small\"/>\n                            </IconButton>}\n\n                            secondaryAction={<PEPEARBAssetBacking />}\n                        />\n\n                        {/*CHAD*/}\n                        <TokenListItem\n                            contract_address=\"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\"\n                            network=\"arb\"\n                            name=\"CHAD\"\n                            price={wallet.prices.arb?.[\"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\"]}\n                            \n                            rewardsSymbol=\"SRGONE\"\n                            rewards={wallet.info.arb?.[\"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\"]?.pending_rewards}\n                            rewardsUSD={wallet.info.arb?.[\"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\"]?.pending_rewards * wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]?.inUSD}\n\n                            rewardsRealised={wallet.info.arb?.[\"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\"]?.total_realised}\n                            rewardsRealisedUSD={wallet.info.arb?.[\"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\"]?.total_realised * wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]?.inUSD}\n                            rewardsClaim={<IconButton\n                                color=\"primary\"\n                                size=\"small\"\n                                onClick={()=>claimRewards(\"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\")}\n                                disabled={wallet.chain !== CHAIN_IDS.ARB}>\n                                <CurrencyExchangeIcon fontSize=\"small\"/>\n                            </IconButton>}\n                            \n                            secondaryAction={<CHADARBAssetBacking />}\n                        />\n\n                    </>\n                }\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Grid>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{CoineusCryptoFormat(amount - .1)}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\nimport uni_pair_abi from \"../abis/IUniswapV2Pair.json\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n    getARB(pairs, rpc.arb);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const ceus_fuse = new web3.eth.Contract(unipair_abi, pairs.CEUSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n    const fsb_fuse = new web3.eth.Contract(unipair_abi, pairs.FSBFUSEpair);\n    const eth_fuse = new web3.eth.Contract(unipair_abi, pairs.ETHFUSEPair);\n    const bnb_fusd = new web3.eth.Contract(unipair_abi, pairs.BNBfUSDPair);\n    const btc_fuse = new web3.eth.Contract(unipair_abi, pairs.BTCFUSEPair);\n    const ceus_lit = new web3.eth.Contract(unipair_abi, pairs.CEUSLITPair);\n\n    const ceus_lit_contract = new web3.eth.Contract(uni_pair_abi, \"0x87440F829E7ED808599749630555080917c4b3D9\") //CEUS/LIT LP\n    const ceus_fuse_contract = new web3.eth.Contract(uni_pair_abi, \"0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b\") //CEUS/FUSE LP\n    const fuse_lit_contract = new web3.eth.Contract(uni_pair_abi, \"0x1a77baea67c346ce17486b078a3c3f53a99a9fcc\") //CEUS/FUSE LP\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        ceus_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call,\n        fsb_fuse.methods.getReserves().call,\n        eth_fuse.methods.getReserves().call,\n        bnb_fusd.methods.getReserves().call,\n        btc_fuse.methods.getReserves().call,\n        ceus_lit.methods.getReserves().call,\n\n        ceus_lit_contract.methods.getReserves().call,\n        ceus_lit_contract.methods.totalSupply().call,\n\n        ceus_fuse_contract.methods.getReserves().call,\n        ceus_fuse_contract.methods.totalSupply().call,\n\n        fuse_lit_contract.methods.getReserves().call,\n        fuse_lit_contract.methods.totalSupply().call,\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                ceus_fuse_reserves,\n                volt_fuse_reserves,\n                fsb_fuse_reserves,\n                eth_fuse_reserves,\n                bnb_fusd_reserves,\n                btc_fuse_reserves,\n                ceus_lit_reserves,\n\n                ceus_lit_lp_reserves,\n                ceus_lit_lp_totalSupply,\n\n                ceus_wfuse_lp_reserves,\n                ceus_wfuse_lp_totalSupply,\n\n                fuse_lit_reserves,\n                fuse_lit_totalSupply\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //WFUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSEONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xadF951967082452c46eA853158e0838F0EB6fee5',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xd0ce1b4A349C35e61Af02f5971e71ac502441E49',\n                price: {\n                    inUSD: (fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1) * (fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0),\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CEUS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n                price: {\n                    inFuse: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1,\n                    inUSD: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CEUSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xE27431FACb1F093BA164c9F86B3f484b39ad54CC',\n                price: {\n                    inFuse: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1,\n                    inUSD: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //LIT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F',\n                price: {\n                    inFuse: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1,\n                    inUSD: ceus_lit_reserves.reserve0/ceus_lit_reserves.reserve1 * (ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0),\n                    inBase: ceus_lit_reserves.reserve0/ceus_lit_reserves.reserve1\n                }\n            }));\n\n            let total = (ceus_lit_lp_reserves.reserve0 / (10**18)) * ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0;\n\n            // CEUS/LIT LP\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x87440F829E7ED808599749630555080917c4b3D9',\n                price: {\n                    // inUSD: 0\n                    inUSD: (total*2) / (ceus_lit_lp_totalSupply / (10**18))\n                }\n            }));\n\n            let total2 = (ceus_wfuse_lp_reserves.reserve0 / (10**18)) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0;\n\n            // FUSE/CEUS LP\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n                price: {\n                    // inUSD: 0\n                    inUSD: (total2*2) / (ceus_wfuse_lp_totalSupply / (10**18))\n                }\n            }));\n\n            let total3 = (fuse_lit_reserves.reserve0 / (10**18)) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0;\n\n            // FUSE/CEUS LP\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x1a77baea67c346ce17486b078a3c3f53a99a9fcc',\n                price: {\n                    // inUSD: 0\n                    inUSD: (total3*2) / (fuse_lit_totalSupply / (10**18))\n                }\n            }));\n\n            //FSB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',\n                price: {\n                    inFuse: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1,\n                    inUSD: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1/(10**9) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',\n                price: {\n                    inFuse: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1,\n                    inUSD: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',\n                price: {\n                    inFuse: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1,\n                    inUSD: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1\n                }\n            }));\n\n            //BTC\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',\n                price: {\n                    inFuse: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1,\n                    inUSD: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1/(10**10) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                dgnx_avax_reserves,\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.BNBFEGPair);\n    const srg_bnb = new web3BSC.eth.Contract(srg_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n    const lit_bnb = new web3BSC.eth.Contract(srg_abi, '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc');\n    const chad_bnb = new web3BSC.eth.Contract(srg_abi, '0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9');\n    const pepe_bnb = new web3BSC.eth.Contract(srg_abi, '0x67B38309BACBc77E6570e9557b23d6955A9bD7e3');\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call,\n        srg_bnb.methods.calculatePrice().call,\n        lit_bnb.methods.calculatePrice().call,\n        chad_bnb.methods.calculatePrice().call,\n        pepe_bnb.methods.calculatePrice().call,\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves,\n                srg_bnb_price,\n                lit_bnb_price,\n                chad_bnb_price,\n                pepe_bnb_price,\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',\n                price: {\n                    inUSD: (srg_bnb_price/(10**9)) * bnb_price,\n                    inETH: (srg_bnb_price/(10**9))\n                }\n            }));\n\n            //SRGONE\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772',\n                price: {\n                    inUSD: (srg_bnb_price/(10**9)) * bnb_price,\n                    inETH: (srg_bnb_price/(10**9))\n                }\n            }));\n\n            //LIT\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc',\n                price: {\n                    inUSD: (lit_bnb_price/(10**9)) * (srg_bnb_price/(10**18)) * bnb_price,\n                    inETH: (lit_bnb_price/(10**9)),\n                    inBase: (lit_bnb_price/(10**18))\n                }\n            }));\n\n            //CHAD\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9',\n                price: {\n                    inUSD: (chad_bnb_price/(10**9)) * (srg_bnb_price/(10**18)) * bnb_price,\n                    inETH: (chad_bnb_price/(10**9)),\n                    inBase: (chad_bnb_price/(10**18))\n                }\n            }));\n\n            //PEPE\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x67B38309BACBc77E6570e9557b23d6955A9bD7e3',\n                price: {\n                    inUSD: (pepe_bnb_price/(10**9)) * (srg_bnb_price/(10**18)) * bnb_price,\n                    inETH: (pepe_bnb_price/(10**9)),\n                    inBase: (pepe_bnb_price/(10**18))\n                }\n            }));\n\n            //FEG\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',\n                price: {\n                    inUSD: (feg_bnb_reserves.reserve0/feg_bnb_reserves.reserve1) * bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //BUSD\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            //USDT\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x55d398326f99059fF775485246999027B3197955',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.ETHFEGPair);\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: (srg_eth_price/(10**9)) * eth_price,\n                    inETH: (srg_eth_price/(10**9))\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price/(10**18)) * (srg_eth_price/(10**9)) * eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //FEG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',\n                price: {\n                    inUSD: (feg_eth_reserves.reserve1/feg_eth_reserves.reserve0) * eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            //USDT\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\nfunction getARB(pairs, rpc) {\n\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ARETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, '0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF');\n    const pepe_arb = new web3ETH.eth.Contract(srg_abi, '0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577');\n    const chad_contract = new web3ETH.eth.Contract(srg_abi, '0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7');\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        pepe_arb.methods.calculatePrice().call,\n        chad_contract.methods.calculatePrice().call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n\n        const [\n            eth_usdc_reserves,\n            srg_eth_price,\n            pepe_arb_price,\n            chad_arb_price\n        ] = resp;\n\n        const eth_price = eth_usdc_reserves.reserve1 / eth_usdc_reserves.reserve0 * (10 ** 12)\n\n        //ETH\n        store.dispatch(updatePrices({\n            chain: 'arb',\n            contract_address: 'native',\n            price: {\n                inUSD: eth_price,\n                inETH: 1\n            }\n        }));\n\n        const srg_price = (srg_eth_price / (10 ** 9)) * eth_price;\n        //SRG\n        store.dispatch(updatePrices({\n            chain: 'arb',\n            contract_address: '0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF',\n            price: {\n                inUSD: srg_price,\n                inSRG: 1\n            }\n        }));\n\n        //SRGONE\n        store.dispatch(updatePrices({\n            chain: 'arb',\n            contract_address: '0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239',\n            price: {\n                inUSD: srg_price,\n                inETH: 1\n            }\n        }));\n\n        //PEPE\n        store.dispatch(updatePrices({\n            chain: 'arb',\n            contract_address: '0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577',\n            price: {\n                inUSD: (pepe_arb_price/(10**18)) * (srg_eth_price/(10**9)) * eth_price,\n                inSRG: 1,\n                inBase: (pepe_arb_price/(10**18))\n            }\n        }));\n\n        //CHAD\n        store.dispatch(updatePrices({\n            chain: 'arb',\n            contract_address: '0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7',\n            price: {\n                inUSD: (chad_arb_price/(10**18)) * (srg_eth_price/(10**9)) * eth_price,\n                inSRG: 1,\n                inBase: (chad_arb_price/(10**18))\n            }\n        }));\n\n        store.dispatch(updateTotals('arb'));\n\n    })\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {CHAIN_IDS} from \"../constants\";\nimport {NetworkButton} from \"../components/Coineus\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address && wallet.chain === 122) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address, wallet.chain]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (<Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                    <Typography\n                        variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                    <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                    <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                    style={{marginTop: 10}}/>\n                    <Typography variant=\"caption\" textAlign=\"right\"\n                                style={{display: 'block'}}>{CoineusCryptoFormat(data.amount_delegated)} /\n                        5,000,000</Typography>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={7}>\n                <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                       onClick={() => setDisplayInUSD(!displayInUSD)}>\n                    <Typography\n                        variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                    <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                </Paper>\n            </Grid>\n\n            <Grid item xs={5}>\n                <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                    <Typography\n                        variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                    <Typography variant=\"caption\">Estimated APR</Typography>\n                </Paper>\n            </Grid>\n\n            {\n                data.staked_amount > 0 && <Grid item xs={12}>\n                    <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                        <List disablePadding>\n                            <ListItem disableGutters disablePadding>\n                                <ListItemText\n                                    secondary=\"Est. Rewards Per Block\"\n                                    secondaryTypographyProps={{style: {color: '#000'}}}\n                                    style={{margin: 0}}\n                                />\n                                <ListItemText\n                                    secondary={`${CoineusCryptoFormat(_rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                    secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                    style={{margin: 0}}\n                                />\n                            </ListItem>\n                            <ListItem disableGutters disablePadding>\n                                <ListItemText\n                                    secondary=\"Est. Rewards Per Day\"\n                                    secondaryTypographyProps={{style: {color: '#000'}}}\n                                    style={{margin: 0}}\n                                />\n                                <ListItemText\n                                    secondary={`${CoineusCryptoFormat((_rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                    secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                    style={{margin: 0}}\n                                />\n                            </ListItem>\n                            <ListItem disableGutters disablePadding>\n                                <ListItemText\n                                    secondary=\"Est. Rewards Per Year\"\n                                    secondaryTypographyProps={{style: {color: '#000'}}}\n                                    style={{margin: 0}}\n                                />\n                                <ListItemText\n                                    secondary={`${CoineusCryptoFormat(_rewardPerYear / (10 ** 18))} FUSE`}\n                                    secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                    style={{margin: 0}}\n                                />\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n            }\n            <Grid item xs={12}>\n                <Paper>\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={action}\n                        onChange={(ev, val) => {\n                            setAction(val)\n                            setAmount('')\n                        }}\n                    >\n                        <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                        <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                    </Tabs>\n                    {\n                        action === \"stake\" && <Box style={{padding: 20}}>\n                            <List>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"FUSE Balance\"\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </List>\n                            <FormControl fullWidth style={{marginBottom: 20}}>\n                                <TextField\n                                    autoComplete=\"off\"\n                                    type=\"number\"\n                                    value={amount}\n                                    placeholder=\"Enter Amount\"\n                                    onChange={(ev) => {\n                                        if (ev.target.value > 5000000) return;\n                                        setAmount(ev.target.value)\n                                    }}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position=\"end\">\n                                            <Button variant=\"contained\" onClick={() => {\n                                                setAmount(wallet.balances.fuse.native - .1)\n                                            }\n                                            }>MAX</Button>\n                                        </InputAdornment>,\n                                    }}\n                                />\n                            </FormControl>\n                            <NetworkButton network={CHAIN_IDS.FUSE}>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                            </NetworkButton>\n                            <List style={{marginTop: 20}}>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Day\"\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat((rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(rewardPerYear / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Box>\n                    }\n\n                    {\n                        action === \"unstake\" && <Box style={{padding: 20}}>\n                            <List>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Staked FUSE\"\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(data.staked_amount / (10 ** 18) || \"--\")} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </List>\n                            <FormControl fullWidth style={{marginBottom: 20}}>\n                                <TextField\n                                    autoComplete=\"off\"\n                                    type=\"number\"\n                                    value={amount}\n                                    placeholder=\"Enter Amount\"\n                                    onChange={(ev) => {\n                                        if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                        setAmount(ev.target.value)\n                                    }}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position=\"end\">\n                                            <Button variant=\"contained\" onClick={() => {\n                                                setAmount(data.staked_amount / (10 ** 18))\n                                            }\n                                            }>MAX</Button>\n                                        </InputAdornment>,\n                                    }}\n                                />\n                            </FormControl>\n                            <Button fullWidth variant=\"contained\"\n                                    disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                    onClick={withdraw}>Unstake</Button>\n                        </Box>\n                    }\n\n                </Paper>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Grid>\n    )\n}","import {\n    Avatar,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper, Tab, Tabs,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport srgone_abi from \"../abis/Coineus/SRGONE.json\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst assurance_fund_address = \"0x09501F8Ca9476d0c516E121FB4dCE4B7b2301d51\";\nconst coineus_validator_address = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        },\n        '&.arb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/arb/chain.png')`,\n        }\n    }\n}));\n\nexport default function CoineusPortfolio() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const [fuseData, setFuseData] = useState({});\n    const [bnbData, setBnbData] = useState({});\n    const [ethData, setEthData] = useState({});\n    const [arbData, setArbData] = useState({});\n\n    useEffect(() => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n        const consensusContract = new web3FUSE.eth.Contract(consensus_abi, consensusAddress);\n        const ceus_contract = new web3FUSE.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\n        const ceusone_contract = new web3FUSE.eth.Contract(coineus_abi, \"0xE27431FACb1F093BA164c9F86B3f484b39ad54CC\");\n        const lit_contract = new web3FUSE.eth.Contract(coineus_abi, '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F');\n\n\n        const callsF = [\n            web3FUSE.eth.getBalance(coineus_fund_address),\n            web3FUSE.eth.getBalance(assurance_fund_address),\n            consensusContract.methods.delegatedAmount(coineus_fund_address, coineus_validator_address).call,\n            consensusContract.methods.delegatedAmount(assurance_fund_address, coineus_validator_address).call,\n            ceus_contract.methods.balanceOf(coineus_fund_address).call,\n            ceusone_contract.methods.balanceOf(coineus_fund_address).call,\n            lit_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3FUSE, callsF).then(resp => {\n            let [\n                coineus_fund_balance,\n                assurance_fund_balance,\n                coineus_fund_staked,\n                assurance_fund_staked,\n                ceus_fund_balance,\n                ceusone_fund_balance,\n                lit_fund_balance\n            ] = resp;\n\n            coineus_fund_balance = coineus_fund_balance / (10 ** 18);\n            assurance_fund_balance = assurance_fund_balance / (10 ** 18);\n            coineus_fund_staked = coineus_fund_staked / (10 ** 18);\n            assurance_fund_staked = assurance_fund_staked / (10 ** 18);\n            ceus_fund_balance = ceus_fund_balance / (10 ** 18);\n            ceusone_fund_balance = ceusone_fund_balance / (10 ** 18);\n            lit_fund_balance = lit_fund_balance / (10 ** 18);\n\n            setFuseData(\n                {\n                    coineus_fund_balance,\n                    assurance_fund_balance,\n                    coineus_fund_staked,\n                    assurance_fund_staked,\n                    ceus_fund_balance,\n                    ceusone_fund_balance,\n                    lit_fund_balance\n                }\n            )\n        })\n\n        const web3AVAX = new Web3(rpc.avax);\n        const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n        const calls = [\n            web3AVAX.eth.getBalance(coineus_fund_address),\n            dgnx_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_avax_balance,\n                coineus_fund_dgnx_balance,\n            ] = resp;\n\n            setData({\n                coineus_avax_balance: coineus_avax_balance / (10 ** 18),\n                coineus_fund_dgnx_balance\n            })\n\n        });\n\n        const web3BNB = new Web3(rpc.bnb);\n        const lit_bnb_contract = new web3BNB.eth.Contract(bbks_abi, '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc');\n        const srg_bnb_contract = new web3BNB.eth.Contract(coineus_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n        const srgone_bnb_contract = new web3BNB.eth.Contract(srgone_abi, '0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772');\n\n        const callsBNB = [\n            web3BNB.eth.getBalance(coineus_fund_address),\n            lit_bnb_contract.methods.balanceOf(coineus_fund_address).call,\n            srg_bnb_contract.methods.balanceOf(coineus_fund_address).call,\n            srgone_bnb_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3BNB, callsBNB).then(resp => {\n            let [\n                coineus_bnb_balance,\n                lit_bnb_balance,\n                srg_bnb_balance,\n                srgone_bnb_balance,\n            ] = resp;\n\n            setBnbData({\n                coineus_bnb_balance: coineus_bnb_balance / (10 ** 18),\n                lit_bnb_balance: lit_bnb_balance / (10 ** 9),\n                srg_bnb_balance: srg_bnb_balance / (10 ** 9),\n                srgone_bnb_balance: srgone_bnb_balance / (10 ** 9)\n            })\n\n        });\n\n        const web3ETH = new Web3(rpc.eth);\n        const bbks_contract = new web3ETH.eth.Contract(coineus_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n        const srg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n\n        const callsETH = [\n            web3ETH.eth.getBalance(coineus_fund_address),\n            srg_eth_contract.methods.balanceOf(coineus_fund_address).call,\n            bbks_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3ETH, callsETH).then(resp => {\n            let [\n                coineus_eth_balance,\n                srg_eth_balance,\n                bbks_eth_balance,\n            ] = resp;\n\n            setEthData({\n                coineus_eth_balance: coineus_eth_balance / (10 ** 18),\n                srg_eth_balance: srg_eth_balance / (10 ** 9),\n                bbks_eth_balance: bbks_eth_balance / (10 ** 9)\n            })\n\n        });\n\n        const web3ARB = new Web3(rpc.arb);\n        const srg_arb_contract = new web3ARB.eth.Contract(coineus_abi, '0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF');\n        const srgone_arb_contract = new web3ARB.eth.Contract(srgone_abi, '0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239');\n        const pepe_contract = new web3ARB.eth.Contract(coineus_abi, '0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577');\n\n        const callsARB = [\n            web3ARB.eth.getBalance(coineus_fund_address),\n            srg_arb_contract.methods.balanceOf(coineus_fund_address).call,\n            srgone_arb_contract.methods.balanceOf(coineus_fund_address).call,\n            pepe_contract.methods.balanceOf(coineus_fund_address).call\n        ];\n\n        makeBatchRequest(web3ARB, callsARB).then(resp => {\n\n            let [\n                coineus_arb_balance,\n                srg_arb_balance,\n                srgone_arb_balance,\n                pepe_arb_balance,\n            ] = resp;\n\n            setArbData({\n                coineus_arb_balance: coineus_arb_balance / (10 ** 18),\n                srg_arb_balance: srg_arb_balance / (10 ** 9),\n                srgone_arb_balance: srgone_arb_balance / (10 ** 9),\n                pepe_arb_balance: pepe_arb_balance / (10 ** 9)\n            })\n\n        });\n\n    }, []);\n\n    const totalValue =\n        (\n            (\n                fuseData.coineus_fund_balance +\n                fuseData.coineus_fund_staked +\n                fuseData.assurance_fund_balance +\n                fuseData.assurance_fund_staked\n            ) * wallet.prices.fuse?.native?.inUSD\n        ) + //FUSE\n        ((fuseData.ceus_fund_balance) * wallet.prices.fuse?.[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"]?.inUSD) + //CEUS\n        ((fuseData.ceusone_fund_balance) * wallet.prices.fuse?.[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"]?.inUSD) + //CEUSONE\n        ((fuseData.lit_fund_balance) * wallet.prices.fuse?.[\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"]?.inUSD) + //LIT\n\n        (data.coineus_avax_balance * wallet.prices.avax.native?.inUSD) + //AVAX\n        formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD +//DGNX\n\n        bnbData.coineus_bnb_balance * wallet.prices.bnb.native?.inUSD +// BNB\n        ((bnbData.lit_bnb_balance) * wallet.prices.bnb?.[\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"]?.inUSD) + //LIT\n        ((bnbData.srg_bnb_balance) * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD) + //SRG\n        ((bnbData.srgone_bnb_balance) * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD) + //SRGONE\n\n        ethData.coineus_eth_balance * wallet.prices.eth.native?.inUSD +// eth\n        (ethData.bbks_eth_balance * wallet.prices.eth?.['0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25']?.inUSD) + //BBKS\n        (ethData.srg_eth_balance * wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]?.inUSD) +//SRG\n\n        arbData.coineus_arb_balance * wallet.prices.arb.native?.inUSD +// eth\n        (arbData.pepe_arb_balance * wallet.prices.arb?.['0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577']?.inUSD) + //BBKS\n        (arbData.srg_arb_balance * wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]?.inUSD) +//SRG\n        (arbData.srgone_arb_balance * wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]?.inUSD) //SRGONE\n\n    return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n        <Grid item xs={12}>\n            <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                <ListItem>\n                    <ListItemText\n                        primary={CoineusUSDFormat(totalValue)}\n                        secondary=\"Total Fund Value\"\n                        primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem', textAlign: 'right'}}\n                        secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                    />\n                </ListItem>\n            </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n            <Tabs\n                value={chainTab}\n                onChange={(ev, val) => {\n                    setChainTab(val)\n                }}\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n            >\n                <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                <Tab id=\"arb\" value=\"arb\" label=\"ARB\"/>\n            </Tabs>\n        </Grid>\n\n        {\n            chainTab === 'fuse' && <>\n\n                <TokenStatsSection data={{\n                    symbol: \"FUSE\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/fuse/logo.png\",\n                    usdValue: CoineusUSDFormat((\n                        fuseData.coineus_fund_balance +\n                        fuseData.coineus_fund_staked +\n                        fuseData.assurance_fund_balance +\n                        fuseData.assurance_fund_staked\n                    ) * wallet.prices.fuse?.native?.inUSD),\n                    balance: CoineusCryptoFormat(fuseData.coineus_fund_balance + fuseData.assurance_fund_balance),\n                    secondaryBalance: CoineusCryptoFormat(fuseData.coineus_fund_staked + fuseData.assurance_fund_staked),\n                    secondarySymbol: 'FUSE',\n                    secondaryLabel: 'Staked',\n                    network: 'fuse',\n                    native: true\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"CEUS\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/fuse/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8/logo.png\",\n                    usdValue: CoineusUSDFormat((\n                        fuseData.ceus_fund_balance\n                    ) * wallet.prices.fuse?.[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"]?.inUSD),\n                    balance: CoineusCryptoFormat(fuseData.ceus_fund_balance),\n                    network: 'fuse'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"CEUSONE\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/fuse/0xE27431FACb1F093BA164c9F86B3f484b39ad54CC/logo.png\",\n                    usdValue: CoineusUSDFormat((\n                        fuseData.ceusone_fund_balance\n                    ) * wallet.prices.fuse?.[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"]?.inUSD),\n                    balance: CoineusCryptoFormat(fuseData.ceusone_fund_balance),\n                    network: 'fuse'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"LIT\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/fuse/0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F/logo.png\",\n                    usdValue: CoineusUSDFormat((\n                        fuseData.lit_fund_balance\n                    ) * wallet.prices.fuse?.[\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"]?.inUSD),\n                    balance: CoineusCryptoFormat(fuseData.lit_fund_balance),\n                    network: 'fuse'\n                }}/>\n\n            </>\n        }\n\n        {\n            chainTab === 'bnb' && <>\n\n                <TokenStatsSection data={{\n                    symbol: \"BNB\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/bnb/logo.png\",\n                    usdValue: CoineusUSDFormat(bnbData.coineus_bnb_balance * wallet.prices.bnb.native?.inUSD),\n                    balance: CoineusCryptoFormat(bnbData.coineus_bnb_balance),\n                    network: 'bnb'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"LIT\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/bnb/0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc/logo.png\",\n                    usdValue: CoineusUSDFormat(bnbData.lit_bnb_balance * wallet.prices.bnb?.[\"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\"]?.inUSD),\n                    balance: CoineusCryptoFormat(bnbData.lit_bnb_balance),\n                    network: 'bnb'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"SRG\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/bnb/0x9f19c8e321bD14345b797d43E01f0eED030F5Bff/logo.png\",\n                    usdValue: CoineusUSDFormat(bnbData.srg_bnb_balance * wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]?.inUSD),\n                    balance: CoineusCryptoFormat(bnbData.srg_bnb_balance),\n                    network: 'bnb'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"SRGONE\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/bnb/0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772/logo.png\",\n                    usdValue: CoineusUSDFormat(bnbData.srgone_bnb_balance * wallet.prices.bnb?.[\"0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772\"]?.inUSD),\n                    balance: CoineusCryptoFormat(bnbData.srgone_bnb_balance),\n                    network: 'bnb'\n                }}/>\n\n            </>\n        }\n\n        {\n            chainTab === 'avax' && <>\n                <TokenStatsSection data={{\n                    symbol: \"AVAX\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/avax/logo.png\",\n                    usdValue: CoineusUSDFormat(data.coineus_avax_balance * wallet.prices.avax.native?.inUSD),\n                    balance: CoineusCryptoFormat(data.coineus_avax_balance),\n                    network: 'avax',\n                    native: true\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"DGNX\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\",\n                    usdValue: CoineusUSDFormat((data.coineus_fund_dgnx_balance / 10 ** 18) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD),\n                    balance: CoineusCryptoFormat((data.coineus_fund_dgnx_balance / 10 ** 18)),\n                    network: 'avax'\n                }}/>\n\n            </>\n        }\n\n        {\n            chainTab === 'eth' && <>\n\n                <TokenStatsSection data={{\n                    symbol: \"ETH\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/eth/logo.png\",\n                    usdValue: CoineusUSDFormat(ethData.coineus_eth_balance * wallet.prices.eth.native?.inUSD),\n                    balance: CoineusCryptoFormat(ethData.coineus_eth_balance),\n                    network: 'eth',\n                    native: true\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"BBKS\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/eth/0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25/logo.png\",\n                    usdValue: CoineusUSDFormat(ethData.bbks_eth_balance * wallet.prices.eth?.['0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25']?.inUSD),\n                    balance: CoineusCryptoFormat(ethData.bbks_eth_balance),\n                    network: 'eth'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"SRG\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/eth/0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe/logo.png\",\n                    usdValue: CoineusUSDFormat(ethData.srg_eth_balance * wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]?.inUSD),\n                    balance: CoineusCryptoFormat(ethData.srg_eth_balance),\n                    network: 'eth'\n                }}/>\n            </>\n        }\n\n        {\n            chainTab === 'arb' && <>\n\n                <TokenStatsSection data={{\n                    symbol: \"ETH\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/eth/logo.png\",\n                    usdValue: CoineusUSDFormat(arbData.coineus_arb_balance * wallet.prices.arb?.native?.inUSD),\n                    balance: CoineusCryptoFormat(arbData.coineus_arb_balance),\n                    network: 'arb',\n                    native: true\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"$PEPE\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/arb/0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577/logo.png\",\n                    usdValue: CoineusUSDFormat(arbData.pepe_arb_balance * wallet.prices.arb?.[\"0x722D8fA60Fe59a14aBd194D94F1090Aa473A8577\"]?.inUSD),\n                    balance: CoineusCryptoFormat(arbData.pepe_arb_balance),\n                    network: 'arb'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"SRG\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/arb/0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF/logo.png\",\n                    usdValue: CoineusUSDFormat(arbData.srg_arb_balance * wallet.prices.arb?.[\"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\"]?.inUSD),\n                    balance: CoineusCryptoFormat(arbData.srg_arb_balance),\n                    network: 'arb'\n                }}/>\n\n                <TokenStatsSection data={{\n                    symbol: \"SRGONE\",\n                    label: \"Fund Holdings\",\n                    logo: \"https://coineus.app/assets/tokens/arb/0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239/logo.png\",\n                    usdValue: CoineusUSDFormat(arbData.srgone_arb_balance * wallet.prices.arb?.[\"0xB0eF2f510e3d2CC7c0F545A7c82F3B76eC36B239\"]?.inUSD),\n                    balance: CoineusCryptoFormat(arbData.srgone_arb_balance),\n                    network: 'arb'\n                }}/>\n            </>\n        }\n\n    </Grid>\n}\n\nfunction TokenStatsSection(props) {\n\n    const classes = useStyles();\n\n    const {\n        native,\n        symbol,\n        label,\n        logo,\n        usdValue,\n        balance,\n        secondaryBalance,\n        secondarySymbol,\n        secondaryLabel,\n        network\n    } = props.data;\n\n    return <Grid item xs={12}>\n        <Paper>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={logo}/>\n                        {!native && <span className={clsx(classes.networkChip, network)}/>}\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={symbol}\n                        primaryTypographyProps={{fontWeight: 700}}\n                        secondary={label}\n                    />\n                    <ListItemText\n                        primary={usdValue}\n                        secondary=\"USD Value\"\n                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {\n                    balance !== undefined && <ListItem>\n                        <ListItemText\n                            primary={`${balance} ${symbol}`}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary=\"Wallet\"\n                        />\n                        {\n                            secondaryBalance !== undefined && <ListItemText\n                                primary={`${secondaryBalance} ${secondarySymbol}`}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={secondaryLabel}\n                            />\n                        }\n                    </ListItem>\n                }\n            </List>\n        </Paper>\n    </Grid>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton, Grid, Avatar} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Autorenew,\n    Whatshot,\n    AccountBalance\n} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {minted, supply, liquidity, fund, litLP, ceusone} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aBurned = 360 * ((minted - supply) / minted) * (Math.PI / 180);\n    const aLiquidity = 360 * (liquidity / minted) * (Math.PI / 180);\n    const aFund = 360 * (fund / minted) * (Math.PI / 180);\n    const aLitLP = 360 * (litLP / supply) * (Math.PI / 180);\n    const aCeusone = 360 * (ceusone / supply) * (Math.PI / 180);\n\n    const angles = {\n\n        burnedStart: 0,\n        burnedEnd: aBurned,\n\n        liquidityStart: aBurned + divider,\n        liquidityEnd: aBurned + aLiquidity,\n\n        litLPStart: aBurned + aLiquidity + divider,\n        litLPEnd: aBurned + aLiquidity + aLitLP,\n\n        fundStart: aBurned + aLiquidity + aLitLP + divider,\n        fundEnd: aBurned + aLiquidity + aLitLP + aFund,\n\n        ceusoneStart: aBurned + aLiquidity + aLitLP + aFund + divider,\n        ceusoneEnd: aBurned + aLiquidity + aLitLP + aFund + aCeusone,\n\n        supplyStart:  aBurned + divider,\n        supplyEnd: 360 * (Math.PI / 180) - divider,\n    }\n\n\n    const colors = {\n        supply: '#737373',\n        burned: '#fa5700',\n        fund: '#1c6fe0',\n        liquidity: '#fbca00',\n        litlp: '#DDDDDD',\n        ceusone: '#c5a700'\n    }\n\n    if (\n        supply === undefined ||\n        liquidity === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: angles.supplyStart,\n                            angle: angles.supplyEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angles.burnedStart,\n                            angle: angles.burnedEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                        {\n                            angle0: angles.liquidityStart,\n                            angle: angles.liquidityEnd,\n                            opacity: 1,\n                            radius: 7.5,\n                            radius0: 7.25,\n                            color: colors.liquidity,\n                        },\n                        {\n                            angle0: angles.fundStart,\n                            angle: angles.fundEnd,\n                            opacity: 1,\n                            radius: 7.5,\n                            radius0: 7.25,\n                            color: colors.fund,\n                        },\n                        {\n                            angle0: angles.litLPStart,\n                            angle: angles.litLPEnd,\n                            opacity: 1,\n                            radius: 7.5,\n                            radius0: 7.25,\n                            color: colors.litlp,\n                        },\n                        {\n                            angle0: angles.ceusoneStart,\n                            angle: angles.ceusoneEnd,\n                            opacity: 1,\n                            radius: 7.5,\n                            radius0: 7.25,\n                            color: colors.ceusone,\n                        }\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -180,\n                    position: 'relative',\n                    fontSize: 26,\n                    fontWeight: '700'\n                }}\n            >\n                {(((minted - supply) / minted) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -130,\n                    position: 'relative',\n                    fontSize: 26,\n                    fontWeight: '700',\n                    color: colors.ceusone\n                }}\n            >\n                {((ceusone / supply) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % DEPOSITED\n        </span>\n            </Typography>\n\n            <Grid container>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply}\n                                  label=\"SUPPLY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned}\n                                  value={minted - supply}\n                                  label=\"BURNED\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Avatar\n                        src={`https://coineus.app/assets/tokens/fuse/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8/logo.png`} sx={{ width: 24, height: 24 }}/>}\n                                  color={colors.liquidity} value={liquidity}\n                                  label=\"CEUS LP\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Avatar\n                        src={`https://coineus.app/assets/tokens/fuse/0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F/logo.png`} sx={{ width: 24, height: 24 }}/>} color={colors.litlp} value={litLP}\n                                  label=\"LIT LP\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<AccountBalance style={{color: colors.fund}}/>} color={colors.fund} value={fund}\n                                  label=\"FUND\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Avatar\n                        src={`https://coineus.app/assets/tokens/fuse/0xE27431FACb1F093BA164c9F86B3f484b39ad54CC/logo.png`} sx={{ width: 24, height: 24 }}/>} color={colors.ceusone} value={ceusone}\n                                  label=\"CEUSONE\"/>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon style={{paddingLeft: 15}}>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {Grid} from \"@mui/material\";\n\nimport {useSelector} from \"react-redux\";\nimport BurnSupply from \"../components/BurntSupply\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\n\nconst web3 = new Web3(\"https://rpc.fuse.io\");\nconst ceus_contract = new web3.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\n\nconst calls = [\n    ceus_contract.methods.totalSupply().call,\n    ceus_contract.methods.balanceOf('0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b').call,\n    ceus_contract.methods.balanceOf('0xb80267eA7fa368374ee4d4Bf10044778232AdEFe').call,\n    ceus_contract.methods.balanceOf('0x87440f829e7ed808599749630555080917c4b3d9').call,\n    ceus_contract.methods.balanceOf('0xE27431FACb1F093BA164c9F86B3f484b39ad54CC').call,\n];\n\nexport default function Stats() {\n\n    const [supply, setSupply] = useState(0);\n    const [liquidity, setLiquidity] = useState(0);\n    const [fund, setFund] = useState(0);\n    const [litLP, setLitLP] = useState(0);\n    const [ceusoneContract, setCeusoneContract] = useState(0);\n\n    useEffect(() => {\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                ceus_supply,\n                ceus_liquidity,\n                ceus_fund,\n                lit_lp,\n                ceusone,\n            ] = resp;\n\n            setSupply(ceus_supply / (10 ** 18));\n            setLiquidity(ceus_liquidity / (10 ** 18));\n            setFund(ceus_fund / (10 ** 18));\n            setLitLP(lit_lp / (10 ** 18));\n            setCeusoneContract(ceusone / (10 ** 18));\n        })\n    }, [])\n\n    return (<Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <BurnSupply\n                    minted={2000000}\n                    supply={supply}\n                    liquidity={liquidity}\n                    fund={fund}\n                    litLP={litLP}\n                    ceusone={ceusoneContract}\n                />\n            </Grid>\n        </Grid>\n    )\n\n}","import {\n    Avatar,\n    Button,\n    Container, Divider,\n    FormControl,\n    Grid,\n    InputAdornment, Link,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from '../abis/IPancakeRouter.json';\nimport uni_abi from '../abis/IUniswapV2Pair.json';\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\nimport {toWei} from \"../utils/format\";\nimport {CHAIN_IDS} from \"../constants\";\nimport {NetworkButton} from \"../components/Coineus\";\n\nconst pairAddress = '0x6483f166b9e4310a165a55fea04f867499aded06';\nconst routerAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E';\nconst easyBridgeAddress = '0xf79fa369aF0FC52260Bef080A62Cb2501863cfF7';\n\nexport default function EasyBridge() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n    const [amount, setAmount] = useState(\"\");\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0])\n    const [fuseOut, setFuseOut] = useState(0);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const setMax = () => {\n        setAmount(wallet.balances.bnb.native - .003);\n    }\n\n    const getFuseAmt = () => {\n\n        if (!amount || !reserves[0] || !reserves[1]) {\n            setFuseOut(undefined)\n            return;\n        }\n        const web3 = new Web3(rpc.bnb);\n\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(toWei(amount), reserves[1], reserves[0]).call((err, resp) => {\n            setFuseOut(resp / (10 ** 18) * .98);\n        })\n    }\n\n    useEffect(getFuseAmt, [amount, reserves]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const bridge = () => {\n\n        const web3 = new Web3(window.provider);\n\n        web3.eth\n            .sendTransaction({\n                    to: easyBridgeAddress,\n                    from: wallet.address,\n                    value: web3.utils.toBN(amount * (10 ** 18))\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.logs[10].data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    const checkChain = () => {\n        return wallet.chain === 56;\n    }\n\n    const changeNetwork = async () => {\n        const web3 = new Web3(window.provider);\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{chainId: web3.utils.toHex(56)}], // chainId must be in hexadecimal numbers\n        });\n    }\n\n    return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n        <Grid item xs={12}>\n            <Paper style={{padding: 20}}>\n                <FormControl fullWidth>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder=\"Enter Amount\"\n                        onChange={(ev) => {\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            inputProps: {\n                                style: {textAlign: \"right\"},\n                            },\n                            startAdornment: <Avatar style={{marginRight: 10}} sx={{width: 24, height: 24}}\n                                                    src={`https://coineus.app/assets/tokens/bnb/logo.png`}/>,\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={setMax}>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <ListItem disablePadding style={{marginTop: 10}}>\n                    <ListItemAvatar>\n                        <Avatar style={{marginLeft: 15}} sx={{width: 24, height: 24}}\n                                src={`https://coineus.app/assets/tokens/fuse/logo.png`}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(fuseOut)} FUSE`}\n                        secondary=\"Estimated Out\"\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <NetworkButton network={CHAIN_IDS.BNB}>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 10}}\n                        onClick={bridge}\n                        disabled={!wallet.address || amount > wallet.balances.bnb.native || toWei(amount) <= 0}\n                    >BRIDGE</Button>\n                </NetworkButton>\n            </Paper>\n            <Divider style={{marginTop: 10}}>SMART CHAIN</Divider>\n            <TokenListItem\n                contract_address=\"native\"\n                network=\"bnb\"\n                name=\"BNB\"\n                native\n                price={wallet.prices.bnb?.native}\n                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n            />\n\n            <Divider style={{marginTop: 10}}>FUSE NETWORK</Divider>\n            <TokenListItem\n                contract_address=\"native\"\n                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                network=\"fuse\"\n                name=\"FUSE\"\n                native\n                price={wallet.prices.fuse?.native}\n            />\n\n            {\n                amtRecieved !== undefined && <>\n                    <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                    <Paper\n                        style={{\n                            backgroundColor: 'white',\n                            color: \"#000\",\n                            padding: 20,\n                            fontFamily: 'monospace'\n                        }}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Typography style={{fontFamily: 'monospace'}}>Bridged</Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                    {`${CoineusCryptoFormat(amtRecieved)} FUSE`}\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={12} style={{marginTop: 20}}/>\n\n\n                            <Grid item xs={6}>\n                                <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                    {`${CoineusCryptoFormat(txCost)} BNB`}\n                                </Typography>\n                            </Grid>\n\n\n                            <Grid item xs={6}/>\n                            <Grid item xs={6}>\n                                <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                    {`${CoineusUSDFormat(txCost * wallet.prices.bnb?.native?.inUSD)} USD`}\n                                </Typography>\n                            </Grid>\n\n\n                            <Grid item xs={12} style={{marginTop: 20}}/>\n\n                            <Grid item xs={6}>\n                                <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                    <Link\n                                        style={{color: \"#000\", textDecorationColor: '#000'}}\n                                        href={`https://bscscan.com/tx/${txHash}`}\n                                        target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={12} style={{marginTop: 20}}>\n                                <Typography style={{fontFamily: 'monospace'}}>FUSE Balance update\n                                    pending...</Typography>\n                            </Grid>\n                        </Grid>\n\n                    </Paper>\n                </>\n            }\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Grid>\n}","import {\n    Button,\n    FormControl,\n    Grid, List, ListItem, ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport ceus_abi from \"../abis/ceus_abi.json\";\nimport lit_abi from \"../abis/Lightning.json\";\nimport litsrg20_abi from \"../abis/LITSRG20.json\";\nimport chad_abi from \"../abis/CHAD.json\";\n\n\nimport {NetworkButton} from \"../components/Coineus\";\nimport {CHAIN_IDS} from \"../constants\";\n\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst COINEUS_FUND_ADDRESS = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst CEUS_CONTRACT_ADDRESS = \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\";\nconst LIT_CONTRACT_ADDRESS = \"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\";\nconst CHAD_CONTRACT_ADDRESS = \"0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9\";\nconst CHADARB_CONTRACT_ADDRESS = \"0x6cD42aAE3249EF5951f0C91b00E953fe0D1202a7\";\nconst LITBNB_CONTRACT_ADDRESS = \"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\";\nconst SRGBNB_CONTRACT_ADDRESS = \"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\";\nconst SRGARB_CONTRACT_ADDRESS = \"0x31aD8255CB8E428E8B0f6Ab6a6f44804642720aF\";\n\nconst CHAD_BURNER = \"0xd45902275AcA4e99e12Fa4A92B2A110433C16B97\";\nconst CHAD_ASSET_BACKING = \"0x90D42Cc7FE837Eba62dbCA7Eca62035529b5f39E\";\nconst CHAD_STAKING = \"0x425fA8237b8dA473126CD60Cd73fb0D263231Dfb\";\n\nconst CHADARB_BURNER = \"0x6F9581a7223425ea2ABF0b264dA40FcA37C2Eb1E\";\nconst CHADARB_ASSET_BACKING = \"0x72cD16D6a9bBC1576a5B781229040Ee1FC9e56E7\";\nconst CHADARB_STAKING = \"0x29329F99cFCa3FFda0C03657343566b58FD4B653\";\n\nexport default function Admin() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const [chadTaxBal, setChadTaxBal] = useState(0);\n    const [chadARBTaxBal, setChadARBTaxBal] = useState(0);\n    const [litBNBTaxBal, setLitBNBTaxBal] = useState(0);\n\n    const [pendingCHADBurn, setPendingCHADBurn] = useState(0);\n    const [pendingCHADARBBurn, setPendingCHADARBBurn] = useState(0);\n\n    const getInfo = () => {\n        const web3BSC = new Web3(rpc.bnb);\n        const srgbnb_contract = new web3BSC.eth.Contract(chad_abi, SRGBNB_CONTRACT_ADDRESS);\n        const chad_contract = new web3BSC.eth.Contract(chad_abi, CHAD_CONTRACT_ADDRESS);\n        const litBNB_contract = new web3BSC.eth.Contract(litsrg20_abi, LITBNB_CONTRACT_ADDRESS);\n\n        const callsBSC = [\n            chad_contract.methods.taxBalance().call,\n            litBNB_contract.methods.taxBalance().call,\n            srgbnb_contract.methods.balanceOf(CHAD_BURNER).call\n        ];\n\n        makeBatchRequest(web3BSC, callsBSC).then(resp => {\n            const [\n                chadTaxBal,\n                litBNBTaxBal,\n                pendingCHADBurn\n            ] = resp;\n\n            setChadTaxBal(chadTaxBal);\n            setLitBNBTaxBal(litBNBTaxBal);\n            setPendingCHADBurn(pendingCHADBurn);\n        });\n\n        const web3ARB = new Web3(rpc.arb);\n        const srgarb_contract = new web3ARB.eth.Contract(chad_abi, SRGARB_CONTRACT_ADDRESS);\n        const chadarb_contract = new web3ARB.eth.Contract(chad_abi, CHADARB_CONTRACT_ADDRESS);\n\n        const callsARB = [\n            chadarb_contract.methods.taxBalance().call,\n            srgarb_contract.methods.balanceOf(CHADARB_BURNER).call\n        ];\n\n        makeBatchRequest(web3ARB, callsARB).then(resp => {\n            const [\n                chadARBTaxBal,\n                pendingCHADARBBurn\n            ] = resp;\n\n            setChadARBTaxBal(chadARBTaxBal);\n            setPendingCHADARBBurn(pendingCHADARBBurn);\n        });\n\n    }\n\n    useEffect(getInfo, []);\n\n    const burn = () => {\n        const web3 = new Web3(window.provider);\n        const ceus_contract = new web3.eth.Contract(ceus_abi, CEUS_CONTRACT_ADDRESS);\n\n        ceus_contract.methods.performBurn(web3.utils.toWei(amount))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    const burnLIT = () => {\n        console.log('burn')\n        const web3 = new Web3(window.provider);\n        const lit_contract = new web3.eth.Contract(lit_abi, LIT_CONTRACT_ADDRESS);\n\n        lit_contract.methods.performBurn(web3.utils.toWei(amount))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    const distChadTax = () => {\n        const web3 = new Web3(window.provider);\n        const chad_contract = new web3.eth.Contract(chad_abi, wallet.chain === CHAIN_IDS.BNB ? CHAD_CONTRACT_ADDRESS : CHADARB_CONTRACT_ADDRESS);\n\n        chad_contract.methods.distributeTaxes()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const processChadBurnTax = () => {\n        const web3 = new Web3(window.provider);\n\n        const processABI = [\n            {\n                \"inputs\": [],\n                \"name\": \"process\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            }\n        ]\n\n        const CHAD_BURNER_CONTRACT = new web3.eth.Contract(processABI, wallet.chain === CHAIN_IDS.BNB ? CHAD_BURNER : CHADARB_BURNER);\n\n        CHAD_BURNER_CONTRACT.methods.process()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const processChadABTax = () => {\n        const web3 = new Web3(window.provider);\n\n        const processABI = [\n            {\n                \"inputs\": [],\n                \"name\": \"process\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            }\n        ]\n\n        const CHAD_ASSET_BACKING_CONTRACT = new web3.eth.Contract(processABI, wallet.chain === CHAIN_IDS.BNB ? CHAD_ASSET_BACKING : CHADARB_ASSET_BACKING);\n\n        CHAD_ASSET_BACKING_CONTRACT.methods.process()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const processChadStakingTax = () => {\n        const web3 = new Web3(window.provider);\n\n        const processABI = [\n            {\n                \"inputs\": [],\n                \"name\": \"process\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            }\n        ]\n\n        const CHAD_STAKING_CONTRACT = new web3.eth.Contract(processABI, wallet.chain === CHAIN_IDS.BNB ? CHAD_STAKING : CHADARB_STAKING);\n\n        CHAD_STAKING_CONTRACT.methods.process()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const distLitBNBTax = () => {\n        const web3 = new Web3(window.provider);\n        const chad_contract = new web3.eth.Contract(litsrg20_abi, LITBNB_CONTRACT_ADDRESS);\n\n        chad_contract.methods.withdrawTaxBalance()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n        {\n            wallet.address === COINEUS_FUND_ADDRESS && <>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Burn CEUS</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n                        <NetworkButton network={CHAIN_IDS.FUSE}>\n                            <Button fullWidth variant=\"contained\"\n                                    disabled={!amount}\n                                    onClick={burn}>BURN CEUS</Button>\n                        </NetworkButton>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Burn LIT</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n\n                        <NetworkButton network={CHAIN_IDS.FUSE}>\n                            <Button fullWidth variant=\"contained\"\n                                    disabled={!amount}\n                                    onClick={burnLIT}>BURN LIT</Button>\n                        </NetworkButton>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">CHAD BNB TAX BALANCE</Typography>\n                        <List dense>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(formatWeiToNumber(chadTaxBal, 9)) + \" SRG\"}\n                                    secondary=\"Pending Tax Balance\"\n                                />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(formatWeiToNumber(pendingCHADBurn, 9)) + \" SRG\"}\n                                    secondary=\"Pending CHAD BNB Burn\"\n                                />\n                            </ListItem>\n                        </List>\n\n\n                        <Grid container spacing={2}>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button variant=\"contained\" onClick={distChadTax}>Disburse Taxes</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button variant=\"contained\" onClick={processChadBurnTax}>Process Burn</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button variant=\"contained\" onClick={processChadABTax}>Process Asset Backing</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button variant=\"contained\" onClick={processChadStakingTax}>Process Staking</Button>\n                                </NetworkButton>\n\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">CHAD ARB TAX BALANCE</Typography>\n                        <List dense>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(formatWeiToNumber(chadARBTaxBal, 9)) + \" SRG\"}\n                                    secondary=\"Pending Tax Balance\"\n                                />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(formatWeiToNumber(pendingCHADARBBurn, 9)) + \" SRG\"}\n                                    secondary=\"Pending CHAD ARB Burn\"\n                                />\n                            </ListItem>\n                        </List>\n\n\n                        <Grid container spacing={2}>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.ARB}>\n                                    <Button variant=\"contained\" onClick={distChadTax}>Disburse Taxes</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.ARB}>\n                                    <Button variant=\"contained\" onClick={processChadBurnTax}>Process Burn</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.ARB}>\n                                    <Button variant=\"contained\" onClick={processChadABTax}>Process Asset Backing</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item>\n                                <NetworkButton network={CHAIN_IDS.ARB}>\n                                    <Button variant=\"contained\" onClick={processChadStakingTax}>Process Staking</Button>\n                                </NetworkButton>\n\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">LIT BNB TAX BALANCE</Typography>\n                        <List dense>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(formatWeiToNumber(litBNBTaxBal, 9)) + \" SRG\"}\n                                    secondary=\"Pending Tax Balance\"\n                                />\n                            </ListItem>\n                        </List>\n\n                        <NetworkButton network={CHAIN_IDS.BNB}>\n                            <Button fullWidth variant=\"contained\" onClick={distLitBNBTax}>Disburse Taxes</Button>\n                        </NetworkButton>\n                    </Paper>\n                </Grid>\n            </>\n        }\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Grid>\n}","import {FormControl, TextField} from \"@mui/material\";\n\nexport default function SwapInput(props) {\n\n    const {label, max, disabled, value, onChange,  startAdornment, endAdornment} = props;\n\n    return (\n        <FormControl\n            style={{\n                backgroundColor: 'rgb(0,0,0)',\n                border: 'none',\n                borderColor: 'unset',\n                borderRadius: 4\n            }}\n            fullWidth>\n            <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                inputMode=\"decimal\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"off\"\n                pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                placeholder=\"0\"\n                max={max}\n                disabled={disabled}\n                value={value}\n                onChange={onChange}\n                label={label}\n                InputProps={{\n                    inputProps: {\n                        style: {\n                            textAlign: 'right',\n                        }\n                    },\n                    startAdornment: startAdornment,\n                    endAdornment: endAdornment\n                }}\n            />\n        </FormControl>\n    )\n}\n","import {\n    Avatar,\n    Button,\n    Dialog, DialogContent,\n    InputAdornment,\n    ListItemAvatar, ListItemText,\n    MenuItem,\n    MenuList\n} from \"@mui/material\";\nimport {useTheme} from \"@mui/styles\";\nimport {useState} from \"react\";\n\nconst tokens = [\n    {\n        name: 'Fuse',\n        symbol: 'FUSE',\n        contract_address: 'native'\n    },\n    {\n        name: 'Coineus',\n        symbol: 'CEUS',\n        contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'\n    },\n    {\n        name: 'Lightning',\n        symbol: 'LIT',\n        contract_address: '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F'\n    }\n]\n\nexport default function TokenList(props) {\n    const theme = useTheme();\n\n    const [open, setOpen] = useState(false);\n    const {selectedToken, setSelectedToken} = props;\n\n    return <>\n        <InputAdornment position=\"start\">\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{\n                    backgroundColor: theme.palette.background.paper,\n                    backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05))',\n                    color: \"#fff\"\n                }}\n                startIcon={<Avatar\n                    src={`https://coineus.app/assets/tokens/fuse/${selectedToken.contract_address === 'native' ? '' : selectedToken.contract_address + \"/\"}logo.png`}\n                    style={{width: 24, height: 24}}/>}\n                onClick={() => setOpen(true)}\n            >{selectedToken.symbol}</Button>\n        </InputAdornment>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <DialogContent style={{padding: 5}}>\n                <MenuList disablePadding>\n                    {\n                        tokens.map(token => {\n                            return <MenuItem key={token.symbol} onClick={() => {\n                                setSelectedToken(token);\n                                setOpen(false)\n                            }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={`https://coineus.app/assets/tokens/fuse/${token.contract_address === 'native' ? '' : token.contract_address + \"/\"}logo.png`}/>\n                                </ListItemAvatar>\n                                <ListItemText primary={token.symbol} secondary={token.name}/>\n                            </MenuItem>\n                        })\n                    }\n\n                </MenuList>\n            </DialogContent>\n            <Button onClick={() => setOpen(false)}>Close</Button>\n        </Dialog>\n    </>;\n}","import {Divider, Grid, Link, Paper, Typography} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {useSelector} from \"react-redux\";\n\nexport default function TransactionReceipt(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {amtSent, amtRecieved, selectedInputToken, selectedOutputToken, txCost, txHash} = props.receipt;\n\n    return <>\n        <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n        <Paper\n            style={{\n                backgroundColor: 'white',\n                color: \"#000\",\n                padding: 20,\n                fontFamily: 'monospace'\n            }}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace'}}>Spent</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                        {`${CoineusCryptoFormat(amtSent)} ${selectedInputToken.symbol}`}\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace'}}>Received</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                        {`${CoineusCryptoFormat(amtRecieved)} ${selectedOutputToken.symbol}`}\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12} style={{marginTop: 20}}/>\n\n\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                        {`${CoineusCryptoFormat(txCost)} FUSE`}\n                    </Typography>\n                </Grid>\n\n\n                <Grid item xs={6}/>\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                        {`${CoineusUSDFormat(txCost * wallet.prices.fuse?.native?.inUSD)} USD`}\n                    </Typography>\n                </Grid>\n\n\n                <Grid item xs={12} style={{marginTop: 20}}/>\n\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                        <Link\n                            style={{color: \"#000\", textDecorationColor: '#000'}}\n                            href={`https://explorer.fuse.io/tx/${txHash}`}\n                            target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                    </Typography>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    </>\n}","import {Button, Fab, Grid, Paper, Typography} from \"@mui/material\";\nimport SwapInput from \"../components/SwapInput\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport Web3 from \"web3\";\nimport router_abi from \"../abis/IPancakeRouter.json\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport getUserBalances from \"../utils/get_balances\";\nimport TokenList from \"../components/Swap/TokenList\";\nimport {toWei} from \"../utils/format\";\nimport SwapVertIcon from '@mui/icons-material/SwapVert';\nimport {NetworkButton} from \"../components/Coineus\";\nimport {CHAIN_IDS} from \"../constants\";\nimport TransactionReceipt from \"../components/Swap/TransactionReceipt\";\n\n\nconst routerAddress = '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5';\n\nconst defaultFuse = {\n    name: 'Fuse',\n    symbol: 'FUSE',\n    contract_address: 'native'\n}\n\nconst defaultCeus = {\n    name: 'Coineus',\n    symbol: 'CEUS',\n    contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'\n}\n\nconst PATHS = {\n    FUSE_CEUS: [\n        '0x0be9e53fd7edac9f859882afdda116645287c629',\n        '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8'\n    ],\n    FUSE_LIT: [\n        '0x0be9e53fd7edac9f859882afdda116645287c629',\n        '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8',\n        '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F'\n    ],\n\n    CEUS_FUSE: [\n        '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8',\n        '0x0be9e53fd7edac9f859882afdda116645287c629'\n    ],\n    CEUS_LIT: [\n        '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8',\n        '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F'\n    ],\n\n    LIT_FUSE: [\n        '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F',\n        '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8',\n        '0x0be9e53fd7edac9f859882afdda116645287c629'\n    ],\n    LIT_CEUS: [\n        '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F',\n        '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8'\n    ]\n}\n\nexport default function Swap() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [selectedInputToken, setSelectedInputToken] = useState(defaultFuse);\n\n    const [selectedOutputToken, setSelectedOutputToken] = useState(defaultCeus);\n\n    const [selectFocus, setSelectFocus] = useState('input');\n\n    const [amountIn, setAmountIn] = useState(0);\n    const [amountOut, setAmountOut] = useState(0);\n    const [slippage, setSlippage] = useState(.995);\n    const [pending, setPending] = useState(false);\n    const [amtPending, setAmtPending] = useState(false);\n\n    const [amtSent, setAmtSent] = useState(undefined);\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getRoute = () => {\n        const route = selectedInputToken.symbol + \"_\" + selectedOutputToken.symbol;\n        return PATHS[route];\n    }\n\n    const getAmountsOut = () => {\n        if (toWei(amountIn) === 'NaN') return;\n        if (selectedInputToken.symbol === selectedOutputToken.symbol) return;\n        if (selectFocus === 'output') return;\n\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        setAmtPending(true);\n\n        contract.methods.getAmountsOut(toWei(amountIn), getRoute()).call((err, resp) => {\n            resp ? setAmountOut((resp[resp.length - 1] / (10 ** 18)).toFixed(8)) : setAmountOut(0);\n            setAmtPending(false);\n        })\n    }\n\n    const getAmountsIn = () => {\n        if (toWei(amountOut) === 'NaN') return;\n        if (selectedInputToken.symbol === selectedOutputToken.symbol) return;\n        if (selectFocus === 'input') return;\n\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        setAmtPending(true);\n\n        contract.methods.getAmountsIn(toWei(amountOut), getRoute()).call((err, resp) => {\n            resp ? setAmountIn((resp[0] / (10 ** 18)).toFixed(8)) : setAmountIn(0);\n            setAmtPending(false);\n        })\n    }\n\n    useEffect(getAmountsOut, [amountIn, selectedInputToken, selectedOutputToken]);\n    useEffect(getAmountsIn, [amountOut, selectedInputToken, selectedOutputToken]);\n\n    useEffect(() => {\n        //handle selecting same token\n        if (selectedInputToken.symbol === selectedOutputToken.symbol) {\n            if (selectFocus === 'input') {\n                if (selectedInputToken.symbol === 'FUSE') {\n                    setSelectedOutputToken(defaultCeus)\n                } else {\n                    setSelectedOutputToken(defaultFuse)\n                }\n            } else {\n                if (selectedOutputToken.symbol === 'FUSE') {\n                    setSelectedInputToken(defaultCeus)\n                } else {\n                    setSelectedInputToken(defaultFuse)\n                }\n            }\n        }\n    }, [selectedInputToken, selectedOutputToken])\n\n    const swap = async () => {\n\n        setAmtSent(undefined);\n        setAmtRecieved(undefined);\n        setTxHash(undefined);\n        setTxCost(undefined);\n\n        const web3 = new Web3(window.provider);\n\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n        const gasPrice = await web3.eth.getGasPrice();\n\n        let method;\n\n        if (selectedInputToken.symbol === 'FUSE') {\n            console.log(selectFocus === 'input' ? 'swapExactETHForTokens' : 'swapETHForExactTokens');\n            method = contract.methods[selectFocus === 'input' ? 'swapExactETHForTokens' : 'swapETHForExactTokens'](\n                toWei(amountOut * slippage),\n                getRoute(),\n                wallet.address,\n                (((new Date()).getTime() + 60000) / 1000).toFixed(0)\n            ).send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei(amountIn),\n                    gas: 300000,\n                    gasPrice\n                }\n            )\n\n        } else if (selectedOutputToken.symbol === 'FUSE') {\n            console.log(selectFocus === 'input' ? 'swapExactTokensForETH' : 'swapTokensForExactETH');\n\n            method = contract.methods[selectFocus === 'input' ? 'swapExactTokensForETH' : 'swapTokensForExactETH'](\n                toWei(amountIn),\n                toWei(amountOut * slippage),\n                getRoute(),\n                wallet.address,\n                (((new Date()).getTime() + 60000) / 1000).toFixed(0)\n            ).send(\n                {\n                    from: wallet.address,\n                    gas: 300000,\n                    gasPrice\n                }\n            )\n\n        } else {\n            console.log(selectFocus === 'input' ? 'swapExactTokensForTokens' : 'swapTokensForExactTokens');\n\n            method = contract.methods[selectFocus === 'input' ? 'swapExactTokensForTokens' : 'swapTokensForExactTokens'](\n                toWei(amountIn),\n                toWei(amountOut * slippage),\n                getRoute(),\n                wallet.address,\n                (((new Date()).getTime() + 60000) / 1000).toFixed(0)\n            ).send(\n                {\n                    from: wallet.address,\n                    gas: 300000,\n                    gasPrice\n                }\n            );\n        }\n\n        method.once('transactionHash', function (tx) {\n            setPending(true);\n            setTxHash(tx);\n        })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .on('receipt', function(receipt) {\n                setAmtSent(receipt.events.Transfer[0].returnValues.value / (10 ** 18));\n                setAmtRecieved(receipt.events.Transfer[receipt.events.Transfer.length - 1].returnValues.value / (10 ** 18));\n            })\n            .then(function (receipt,a,b) {\n                getUserBalances(wallet.address);\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    const swapInputOutputTokens = () => {\n        const inToken = {...selectedInputToken};\n        const outToken = {...selectedOutputToken};\n        setSelectedInputToken(outToken);\n        setSelectedOutputToken(inToken);\n    }\n\n    return (<Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} onFocus={() => setSelectFocus('input')}>\n                            <Typography variant=\"caption\"\n                                        style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse[selectedInputToken.contract_address])}</Typography>\n                            <SwapInput\n                                value={amountIn || \"\"}\n                                onChange={(ev) => {\n                                    if(amtPending)return;\n                                    setAmountIn(ev.target.value)\n                                }}\n                                startAdornment={<TokenList selectedToken={selectedInputToken}\n                                                           setSelectedToken={setSelectedInputToken}\n                                />}\n                            />\n                        </Grid>\n                        <Grid item xs={12} alignContent=\"center\" style={{textAlign: 'center', height: 0, paddingTop: 0}}>\n                            <Fab size=\"small\" variant=\"contained\" color=\"primary\" style={{marginTop: -12}} onClick={swapInputOutputTokens}>\n                                <SwapVertIcon/>\n                            </Fab>\n                        </Grid>\n                        <Grid item xs={12} onFocus={() => setSelectFocus('output')}>\n                            <SwapInput\n                                value={amountOut || \"\"}\n                                onChange={(ev) => {\n                                    if(amtPending)return;\n                                    setAmountOut(ev.target.value)\n                                }}\n                                startAdornment={<TokenList selectedToken={selectedOutputToken}\n                                                           setSelectedToken={setSelectedOutputToken}\n                                />}\n                            />\n                            <Typography variant=\"caption\"\n                                        style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse[selectedOutputToken.contract_address])}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <NetworkButton network={CHAIN_IDS.FUSE}>\n                                <Button fullWidth variant=\"contained\" onClick={swap}>SWAP</Button>\n                            </NetworkButton>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                {\n                    amtRecieved !== undefined && <TransactionReceipt receipt={{amtSent, amtRecieved, selectedInputToken, selectedOutputToken, txCost, txHash}} />\n                }\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Grid>\n    )\n}","import {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Grid,\n    ListItem,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nimport Web3 from \"web3\";\n\nimport consensus_abi from \"../../abis/consensus_abi.json\";\nimport {CoineusCryptoFormat} from \"../../utils/currency_format\";\nimport {DataGrid, GridToolbar, GridToolbarContainer, GridToolbarExport} from \"@mui/x-data-grid\";\nimport CoineusLoading from \"../../components/CoineusLoading\";\n\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst web3 = new Web3(\"https://rpc.fuse.io\");\nconst consensus = new web3.eth.Contract(consensus_abi, consensusAddress);\n\nexport default function Validator() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [staking, setStaking] = useState({});\n    const [validators, setValidators] = useState({});\n    const [pending, setPending] = useState(true);\n    const [pendingTX, setPendingTX] = useState(false);\n\n    const getConsensus = () => {\n\n        if (!wallet.address) return;\n\n        const calls = [\n            consensus.methods.totalStakeAmount().call,\n            consensus.methods.MIN_STAKE().call,\n            consensus.methods.MAX_STAKE().call,\n            consensus.methods.MAX_VALIDATORS().call,\n            consensus.methods.MAX_STRIKE_COUNT().call,\n            consensus.methods.DEFAULT_VALIDATOR_FEE().call,\n            consensus.methods.getMinValidatorFee().call,\n\n            consensus.methods.getValidators().call,\n            consensus.methods.jailedValidators().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                total_stake_amount,\n                min_stake,\n                max_stake,\n                max_validators,\n                max_strike_count,\n                default_validator_fee,\n                min_validator_fee,\n                validators,\n                jailed_validators\n            ] = resp;\n\n            const promises = [];\n\n            const list = validators.concat(jailed_validators);\n\n            list.map(v => {\n                promises.push(getValidatorInfo(v));\n            })\n\n            const vs = [];\n            Promise.all(promises).then(resp => {\n                resp.map(v => {\n                    v.id = v.validator_address;\n                    vs.push(v);\n                });\n\n                setStaking({\n                    total_stake_amount: total_stake_amount / (10 ** 18),\n                    min_stake: min_stake / (10 ** 18),\n                    max_stake: max_stake / (10 ** 18),\n                    max_validators: max_validators / 1,\n                    max_strike_count: max_strike_count / 1,\n                    default_validator_fee: default_validator_fee / (10 ** 18),\n                    min_validator_fee: min_validator_fee / (10 ** 18)\n                })\n\n                setValidators(vs);\n                setPending(false);\n            })\n\n        })\n\n    }\n\n    const getValidatorInfo = (validator) => {\n\n        return new Promise(resolve => {\n            const calls = [\n                consensus.methods.isJailed(validator).call,\n                consensus.methods.isValidator(validator).call,\n                consensus.methods.isPendingValidator(validator).call,\n                consensus.methods.getStrikes(validator).call,\n                consensus.methods.validatorFee(validator).call,\n                consensus.methods.stakeAmount(validator).call,\n                consensus.methods.delegators(validator).call,\n            ];\n\n            makeBatchRequest(web3, calls).then(resp => {\n\n                const [\n                    is_jailed,\n                    is_validator,\n                    is_pending_validator,\n                    strikes,\n                    validator_fee,\n                    staked_amount,\n\n                    delegators\n                ] = resp;\n\n                getDelegatorInfo(validator, delegators).then(resp => {\n\n                    resolve({\n                        validator_address: validator,\n                        is_jailed,\n                        is_validator,\n                        is_pending_validator,\n                        strikes: strikes / 1,\n                        validator_fee: validator_fee / (10 ** 18),\n                        staked_amount: staked_amount / (10 ** 18),\n                        delegators: resp\n                    });\n\n                });\n            })\n        })\n    }\n\n    const getDelegatorInfo = (validator, delegators) => {\n\n        return new Promise(resolve => {\n\n            const calls = [];\n            const balances = [];\n\n            delegators.map(d => {\n                if (!d) return;\n                calls.push(consensus.methods.delegatedAmount(d, validator).call);\n            });\n\n            makeBatchRequest(web3, calls).then(resp => {\n                let index = 0;\n                delegators.map(d => {\n                    if (!d) return;\n                    balances.push({\n                        id: d,\n                        address: d,\n                        amount: resp[index] / 10 ** 18\n                    });\n                    index++;\n                });\n                resolve(balances);\n            });\n\n        })\n    }\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 60000 * 10)\n        return () => clearInterval(interval);\n    }, [rpc.fuse, wallet.address]);\n\n    return (\n        <Container maxWidth=\"xl\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <DataGrid\n                        initialState={{\n                            sorting: {\n                                sortModel: [{field: 'staked_amount', sort: 'desc'}],\n                            },\n                        }}\n                        disableRowSelectionOnClick\n                        loading={pending}\n                        slots={{\n                            toolbar: () => (<GridToolbarContainer>\n                                <GridToolbarExport/>\n                            </GridToolbarContainer>)\n                        }}\n                        columns={[\n                            {field: 'validator_address', headerName: 'Validator', flex: 1, minWidth: 380},\n                            {\n                                field: 'staked_amount',\n                                headerName: 'Staked',\n                                flex: 1,\n                                align: 'right',\n                                valueFormatter: (params) => {\n                                    return `${CoineusCryptoFormat(params.value)}`;\n                                }\n                            },\n                            {\n                                field: 'validator_fee',\n                                headerName: 'Fee',\n                                align: 'right',\n                                valueFormatter: (params) => {\n                                    return `${params.value * 100}%`;\n                                }\n                            },\n                            {\n                                field: 'delegators_count',\n                                headerName: 'Delegators',\n                                align: 'right',\n                                renderCell: (params) => (\n                                    <DelegatorDialog delegators={params.row.delegators}/>\n\n                                )\n                            },\n                            {\n                                field: 'is_validator',\n                                headerName: 'Active',\n                                renderCell: (params) => {\n                                    return params.value ? <CheckBoxIcon style={{color: 'green'}}/> :\n                                        <CancelIcon style={{color: 'red'}}/>;\n                                }\n                            },\n                            {\n                                field: 'is_pending_validator',\n                                headerName: 'Pending',\n                                renderCell: (params) => {\n                                    return params.value ? <CheckBoxIcon style={{color: 'green'}}/> :\n                                        <CancelIcon style={{color: 'red'}}/>;\n                                }\n                            },\n                            {\n                                field: 'is_jailed',\n                                headerName: 'Jailed',\n                                renderCell: (params) => {\n                                    return params.value ?\n                                        (\n                                            params.row.validator_address === wallet.address ?\n                                                <Button\n                                                    variant=\"contained\"\n                                                    onClick={() => {\n                                                        setPendingTX(true);\n                                                        const web3 = new Web3(window.provider);\n                                                        const contract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\");\n                                                        contract.methods.unJail()\n                                                            .send({\n                                                                from: wallet.address,\n                                                                gasPrice: 10000000000\n                                                            })\n                                                            .once('transactionHash', function (tx) {\n                                                                setPendingTX(true);\n                                                            })\n                                                            .on('error', function (error) {\n                                                                setPendingTX(false);\n                                                            })\n                                                            .then(function (receipt) {\n                                                                setPendingTX(false);\n                                                            })\n                                                            .catch((error) => {\n                                                                setPendingTX(false);\n                                                            });\n                                                    }}>UNJAIL</Button> :\n                                                <CheckBoxIcon\n                                                    style={{color: 'green'}}\n                                                />\n                                        ) :\n                                        <CancelIcon style={{color: 'red'}}/>;\n                                }\n                            },\n                            {field: 'strikes', headerName: 'Strikes', align: 'right'}\n                        ]}\n                        autoHeight={true}\n                        rows={validators}\n                        pageSizeOptions={[5, 10, 25]}\n                    />\n                </Grid>\n            </Grid>\n            <CoineusLoading open={pendingTX} label=\"Transaction Pending\"/>\n        </Container>\n    )\n}\n\nfunction DelegatorDialog(props) {\n\n    const {delegators} = props;\n\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <Button onClick={() => setOpen(true)}>{delegators.length}</Button>\n\n        <Dialog open={open} maxWidth=\"sm\" fullWidth>\n            <DialogContent>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <DataGrid\n                            initialState={{\n                                sorting: {\n                                    sortModel: [{field: 'amount', sort: 'desc'}],\n                                },\n                            }}\n                            disableRowSelectionOnClick\n                            autoHeight={true}\n                            rows={delegators}\n                            columns={[\n                                {field: 'address', headerName: 'Address', flex: 1, minWidth: 400},\n                                {\n                                    field: 'amount',\n                                    headerName: 'Amount',\n                                    headerAlign: 'right',\n                                    align: 'right',\n                                    minWidth: 100,\n                                    valueFormatter: (params) => {\n                                        return `${CoineusCryptoFormat(params.value)}`;\n                                    }\n                                }\n                            ]}\n                            pageSizeOptions={[5, 10, 25]}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    </>\n}","import {ApolloClient, InMemoryCache, gql} from '@apollo/client';\nimport {useEffect, useState} from \"react\";\nimport {\n    Avatar, AvatarGroup, Button, Grid, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, Paper, Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {useSelector} from \"react-redux\";\nimport masterchef_abi from \"../abis/Voltage/MasterChefVoltV3.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from \"../abis/IPancakeRouter.json\";\nimport erc20_abi from \"../abis/IERC20.json\";\nimport {toWei} from \"../utils/format\";\nimport {CHAIN_IDS} from \"../constants\";\nimport {NetworkButton} from \"../components/Coineus\";\n\nconst client = new ApolloClient({\n    uri: 'https://api.thegraph.com/subgraphs/name/voltfinance/voltage-exchange-v2', cache: new InMemoryCache(),\n});\n\nconst VOLTAGE_MASTERCHEF = \"0xE3e184a7b75D0Ae6E17B58F5283b91B4E0A2604F\";\n\nexport default function VoltageLiquidity() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [positions, setPositions] = useState([]);\n    const [userPoolInfo, setUserPoolInfo] = useState({})\n\n    useEffect(() => {\n        if (!wallet.address) return;\n        client\n            .query({\n                query: gql`{\n  user(id: \"${wallet.address.toLowerCase()}\") {\n    liquidityPositions(where:{\n      liquidityTokenBalance_gt:0\n    }) {\n      liquidityTokenBalance\n      pair {\n        id\n        name\n        token0 {\n          id\n          name\n          symbol\n        }\n        token1 {\n          id\n          name\n          symbol\n        }\n        reserve0\n        reserve1\n        totalSupply\n        reserveUSD\n        token0Price\n        token1Price\n        volumeToken0\n        volumeToken1\n        volumeUSD\n      }\n    }\n  }\n}`,\n            })\n            .then((result) => {\n                if (result.data.user) setPositions(result.data.user.liquidityPositions)\n            });\n    }, [wallet.address]);\n\n    const getUserInfo = () => {\n        if (!wallet.address) return;\n\n        const web3 = new Web3(rpc.fuse);\n        const voltage = new web3.eth.Contract(masterchef_abi, VOLTAGE_MASTERCHEF);\n\n        voltage.methods.poolLength().call((err, resp) => {\n\n            const poolCount = parseInt(resp);\n\n            const calls = []\n            for (let i = 0; i < poolCount; i++) {\n                calls.push(voltage.methods.poolInfo(i).call)\n            }\n            for (let i = 0; i < poolCount; i++) {\n                calls.push(voltage.methods.userInfo(i, wallet.address).call)\n            }\n            for (let i = 0; i < poolCount; i++) {\n                calls.push(voltage.methods.pendingTokens(i, wallet.address).call)\n            }\n\n            makeBatchRequest(web3, calls).then(resp => {\n\n                const userData = {}\n\n                for (let i = 0; i < poolCount; i++) {\n\n                    const {accVoltPerShare, allocPoint, lastRewardTimestamp, lpToken, rewarder} = resp[i]\n                    const {amount, rewardDebt} = resp[i + poolCount]\n                    const {\n                        bonusTokenAddress, bonusTokenSymbol, pendingBonusToken, pendingVolt\n                    } = resp[i + (poolCount * 2)];\n\n                    userData[lpToken] = {\n                        poolIndex: i,\n                        accVoltPerShare,\n                        allocPoint,\n                        lastRewardTimestamp,\n                        lpToken,\n                        rewarder,\n                        amount: amount / 1,\n                        rewardDebt,\n                        bonusTokenAddress,\n                        bonusTokenSymbol,\n                        pendingBonusToken,\n                        pendingVolt\n                    }\n                }\n                setUserPoolInfo(userData);\n            })\n\n        })\n    }\n    useEffect(() => {\n        getUserInfo();\n        const interval = setInterval(getUserInfo, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const claimRewards = (poolIndex) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(masterchef_abi, VOLTAGE_MASTERCHEF);\n\n            contract.methods\n                .deposit(poolIndex, 0)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const withdraw = (poolIndex, balance) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(masterchef_abi, VOLTAGE_MASTERCHEF);\n\n            contract.methods\n                .withdraw(poolIndex, balance)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const removeLP = (lpToken, tokenA, tokenB, liquidity, amountA, amountB) => {\n        console.log(lpToken, tokenA, tokenB, toWei(liquidity), toWei(amountA), toWei(amountB))\n\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(router_abi, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5');\n\n            const lp_contract = new web3.eth.Contract(erc20_abi, lpToken);\n\n            lp_contract.methods.allowance(wallet.address, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5').call((err, resp) => {\n\n                if (err) return;\n\n                if (resp < liquidity) {\n                    lp_contract\n                        .methods\n                        .approve('0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5', toWei(liquidity))\n                        .send({from: wallet.address})\n                        .once('transactionHash', function (tx) {\n                            setPending(true)\n                        })\n                        .on('error', function (error) {\n                            setPending(false)\n                        })\n                        .then(function (receipt) {\n                            setPending(false)\n                            remove()\n                        });\n                } else {\n                    remove()\n                }\n            })\n\n            const remove = () => {\n                contract.methods\n                    .removeLiquidity(tokenA, tokenB, toWei(liquidity), toWei(amountA * .99), toWei(amountB * .99), wallet.address, 11111111111)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserInfo();\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <Grid container spacing={2} style={{marginTop: 20, paddingBottom: 80}}>\n\n        {positions.length === 0 && <Grid item xs={12}>\n            <Paper style={{padding: 20}}>\n                <Typography>No Liquidity Positions Found</Typography>\n            </Paper>\n        </Grid>}\n\n\n        {positions.map((position, i) => {\n\n            const {liquidityTokenBalance: balance, pair} = position;\n\n            const {\n                id,\n                name,\n                token0,\n                token1,\n                reserve0,\n                reserve1,\n                totalSupply,\n                reserveUSD,\n                token0Price,\n                token1Price,\n                volumeToken0,\n                volumeToken1,\n                volumeUSD\n            } = pair;\n\n            const share = (balance / totalSupply);\n\n            const token0USD = reserveUSD / 2 / reserve0;\n            const token1USD = reserveUSD / 2 / reserve1;\n\n            const lpToken = Web3.utils.toChecksumAddress(id);\n\n            return <Grid item xs={12} key={id}>\n                <Paper>\n                    <List dense>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <AvatarGroup>\n                                    <Avatar\n                                        src={`https://coineus.app/assets/tokens/fuse/${Web3.utils.toChecksumAddress(token0.id)}/logo.png`}/>\n                                    <Avatar\n                                        src={`https://coineus.app/assets/tokens/fuse/${Web3.utils.toChecksumAddress(token1.id)}/logo.png`}/>\n                                </AvatarGroup>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={name}\n                                secondary={(share * 100).toFixed(2) + \"% Pool Share\"}\n                                primaryTypographyProps={{marginLeft: 1, fontWeight: 700}}\n                                secondaryTypographyProps={{marginLeft: 1}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(balance)}\n                                secondary={CoineusUSDFormat(reserveUSD * share)}\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={token0.name}\n                                secondary={`${token0.symbol} - ${CoineusUSDFormat(token0USD)}`}\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(reserve0 * share)}\n                                secondary={CoineusUSDFormat(reserveUSD * share / 2)}\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={token1.name}\n                                secondary={`${token1.symbol} - ${CoineusUSDFormat(token1USD)}`}\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(reserve1 * share)}\n                                secondary={CoineusUSDFormat(reserveUSD * share / 2)}\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <NetworkButton network={CHAIN_IDS.FUSE}>\n                                <Button fullWidth variant=\"contained\"\n                                        onClick={() => removeLP(lpToken, token0.id, token1.id, balance, reserve0 * share, reserve1 * share)}>REMOVE</Button>\n                            </NetworkButton>\n                        </ListItem>\n                        {userPoolInfo[lpToken]?.amount > 0 && <>\n                            <ListSubheader>Pending Farming Rewards</ListSubheader>\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"Deposited\"\n                                />\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(userPoolInfo[lpToken]?.amount / (10 ** 18))}\n                                    primaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar style={{minWidth: 30}}>\n                                    <Avatar\n                                        src=\"https://coineus.app/assets/tokens/fuse/0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4/logo.png\"\n                                        sx={{width: 24, height: 24}}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary=\"VOLT\"\n                                />\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(userPoolInfo[lpToken]?.pendingVolt / (10 ** 18))}\n                                    primaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar style={{minWidth: 30}}>\n                                    <Avatar\n                                        src={`https://coineus.app/assets/tokens/fuse/${userPoolInfo[lpToken]?.bonusTokenAddress}/logo.png`}\n                                        sx={{width: 24, height: 24}}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={userPoolInfo[lpToken]?.bonusTokenSymbol}\n                                />\n                                <ListItemText\n                                    primary={CoineusCryptoFormat(userPoolInfo[lpToken]?.pendingBonusToken / (10 ** 18))}\n                                    primaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n\n                            <ListItem style={{marginTop: 10}}>\n                                <NetworkButton network={CHAIN_IDS.FUSE}>\n                                    <Button variant=\"contained\" fullWidth size=\"small\"\n                                            onClick={() => claimRewards(userPoolInfo[lpToken]?.poolIndex)}>Claim</Button>\n                                </NetworkButton>\n                            </ListItem>\n\n                            <ListItem style={{marginTop: 10}}>\n                                <NetworkButton network={CHAIN_IDS.FUSE}>\n                                    <Button variant=\"contained\" fullWidth size=\"small\"\n                                            onClick={() => withdraw(userPoolInfo[lpToken]?.poolIndex, balance)}>Withdraw</Button>\n                                </NetworkButton>\n                            </ListItem>\n                        </>}\n                    </List>\n                </Paper>\n            </Grid>\n        })}\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Grid>\n}","import {Alert, Button, Divider, Grid, ListItem, ListItemText, Paper, TextField} from \"@mui/material\";\n\nimport faucet_abi from '../../abis/Coineus/CEUSONEFaucet.json';\nimport {useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport {formatWeiToNumber, toWei} from \"../../utils/format\";\nimport CoineusLoading from \"../../components/CoineusLoading\";\nimport coineus_abi from \"../../abis/ceus_abi.json\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport {NetworkButton} from \"../../components/Coineus\";\n\nconst FAUCET_ADDRESS = '0x3E4a3A2459A2Fa02544E792D728917C708872922';\nconst CEUSONE_ADDRESS = '0xE27431FACb1F093BA164c9F86B3f484b39ad54CC';\nconst LIT_ADDRESS = '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F';\n\nexport default function CEUSONEFaucet() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [faucetData, setFaucetData] = useState(undefined);\n    const [userFaucetData, setUserFaucetData] = useState(undefined);\n    const [disabled, setDisabled] = useState(false);\n    const [disabledReason, setDisabledReason] = useState(undefined);\n\n    //ADMIN\n    const [_amountToIncreaseBy, _setAmountToIncreaseBy] = useState(0);\n    const [_maxAmountToIncreaseTo, _setMaxAmountToIncreaseTo] = useState(0);\n    const [_minAmountForFastpass, _setMinAmountForFastpass] = useState(0);\n    const [_minAmountToClaim, _setMinAmountToClaim] = useState(0);\n    const [_timeBetweenClaims, _setTimeBetweenClaims] = useState(0);\n    const [_depositAmount, _setDepositAmount] = useState(0);\n\n    const web3FUSE = new Web3(rpc.fuse);\n    const faucet_contract = new web3FUSE.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n    const getInfo = () => {\n        const calls = [\n            faucet_contract.methods.getClaimableAmount().call,\n            faucet_contract.methods.getStats().call,\n            faucet_contract.methods.getLockedAmount().call,\n            faucet_contract.methods.getClaimPaused().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getMinAmountForFastpass().call,\n            faucet_contract.methods.getAmountToIncreaseBy().call,\n            faucet_contract.methods.getMaxAmountToIncreaseTo().call,\n            faucet_contract.methods.getTimeBetweenClaims().call,\n\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [claimable, stats, lockedAmount,\n\n                paused, minBalance, fastpassAmount, amountToIncreaseBy, maxAmountToIncreaseTo, timeBetweenClaims] = resp;\n\n            setFaucetData({\n                claimable, stats, lockedAmount,\n\n                paused, minBalance, fastpassAmount\n            })\n\n            _setAmountToIncreaseBy(formatWeiToNumber(amountToIncreaseBy))\n            _setMaxAmountToIncreaseTo(formatWeiToNumber(maxAmountToIncreaseTo))\n            _setMinAmountForFastpass(formatWeiToNumber(fastpassAmount))\n            _setMinAmountToClaim(formatWeiToNumber(minBalance))\n            _setTimeBetweenClaims(timeBetweenClaims / 60 / 60 / 24)\n\n        })\n    }\n\n    const getUserInfo = () => {\n\n        if (!wallet.address) {\n            return;\n        }\n\n        const calls = [faucet_contract.methods.getStatsByAddress(wallet.address).call]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [stats] = resp;\n\n            setUserFaucetData({\n                stats\n            })\n\n        })\n    }\n\n    //update disabled status\n    useEffect(() => {\n\n        if (!wallet.address) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to claim`)\n            return;\n        }\n\n        if (wallet.chain !== 122) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to Fuse Network`)\n            return;\n        }\n\n        if (faucetData && faucetData.paused) {\n\n            setDisabled(true);\n            setDisabledReason(`Claiming is paused`);\n            return;\n        }\n\n        if (faucetData && wallet.balances.fuse[LIT_ADDRESS] < (faucetData.minBalance / (10 ** 18))) {\n\n            setDisabled(true);\n            setDisabledReason(`You need to hold at least ${(faucetData.minBalance / (10 ** 18))} LIT to claim`);\n            return;\n        }\n\n        const now = (new Date()).getTime();\n        if (userFaucetData && userFaucetData.stats && userFaucetData.stats.timeCanClaim > parseInt(now / 1000)) {\n            setDisabled(true);\n            setDisabledReason(`You can claim again at ${new Date(userFaucetData.stats.timeCanClaim * 1000).toLocaleString()}`);\n            return true;\n        }\n\n        setDisabled(false);\n        setDisabledReason(undefined);\n\n    }, [wallet.address, wallet.chain, faucetData, userFaucetData])\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 30000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        getUserInfo();\n        const interval = setInterval(getUserInfo, 30000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods\n                .claim()\n                .send({\n                    from: wallet.address, gasPrice: 10000000000\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                    console.log(tx)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    console.log(error);\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    getUserInfo();\n                    setPending(false);\n                });\n\n        }\n    }\n\n    //ADMIN\n    const toggleFaucet = (state) => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setClaimPaused(state)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setAmountToIncreaseBy = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setAmountToIncreaseBy(_amountToIncreaseBy)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMaxAmountToIncreaseTo = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMaxAmountToIncreaseTo(_maxAmountToIncreaseTo)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMinAmountForFastpass = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMinAmountForFastpass(_minAmountForFastpass)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMinAmountToClaim = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMinAmountToClaim(_minAmountToClaim)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setTimeBetweenClaims = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setTimeBetweenClaims(_timeBetweenClaims)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const deposit = () => {\n\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const ceusone_contract = new web3.eth.Contract(coineus_abi, CEUSONE_ADDRESS);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            ceusone_contract\n                .methods\n                .allowance(wallet.address, FAUCET_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < _depositAmount) {\n                        ceusone_contract\n                            .methods\n                            .approve(FAUCET_ADDRESS, toWei(_depositAmount))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(_depositAmount))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getInfo()\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n        {wallet.address === '0xb80267eA7fa368374ee4d4Bf10044778232AdEFe' && faucetData !== undefined &&\n            <Grid item xs={12}>\n                <Paper>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <NetworkButton network={CHAIN_IDS.FUSE}>\n                                <Button\n                                    variant=\"contained\"\n                                    fullWidth\n                                    disabled={!faucetData.paused}\n                                    onClick={() => toggleFaucet(false)}>Open Faucet</Button>\n                            </NetworkButton>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <NetworkButton network={CHAIN_IDS.FUSE}>\n                                <Button\n                                    variant=\"contained\"\n                                    fullWidth\n                                    disabled={faucetData.paused}\n                                    onClick={() => toggleFaucet(true)}>Close Faucet</Button>\n                            </NetworkButton>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Amount To Increase By\"\n                                value={_amountToIncreaseBy}\n                                onChange={ev => _setAmountToIncreaseBy(ev.target.value)}\n                                InputProps={{\n                                    endAdornment: <NetworkButton network={CHAIN_IDS.FUSE}><Button\n                                        variant=\"contained\"\n                                        onClick={setAmountToIncreaseBy}>submit</Button></NetworkButton>\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Max Amount To Increase To\"\n                                value={_maxAmountToIncreaseTo}\n                                onChange={ev => _setMaxAmountToIncreaseTo(ev.target.value)}\n                                InputProps={{\n                                    endAdornment: <NetworkButton network={CHAIN_IDS.FUSE}><Button\n                                        variant=\"contained\"\n                                        onClick={setMaxAmountToIncreaseTo}>submit</Button></NetworkButton>,\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Min Amount To Claim\"\n                                value={_minAmountToClaim}\n                                onChange={ev => _setMinAmountToClaim(ev.target.value)}\n                                InputProps={{\n                                    endAdornment: <NetworkButton network={CHAIN_IDS.FUSE}><Button\n                                        variant=\"contained\"\n                                        onClick={setMinAmountToClaim}>submit</Button></NetworkButton>,\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Min Amount For Fastpass\"\n                                value={_minAmountForFastpass}\n                                onChange={ev => _setMinAmountForFastpass(ev.target.value)}\n                                InputProps={{\n                                    endAdornment: <NetworkButton network={CHAIN_IDS.FUSE}><Button\n                                        variant=\"contained\"\n                                        onClick={setMinAmountForFastpass}>submit</Button></NetworkButton>,\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Time Between Claims in Days\"\n                                value={_timeBetweenClaims}\n                                onChange={ev => _setTimeBetweenClaims(ev.target.value)}\n                                InputProps={{\n                                    endAdornment: <NetworkButton network={CHAIN_IDS.FUSE}><Button\n                                        variant=\"contained\"\n                                        onClick={setTimeBetweenClaims}>submit</Button></NetworkButton>,\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Deposit\"\n                                value={_depositAmount}\n                                onChange={ev => _setDepositAmount(ev.target.value)}\n                                InputProps={{\n                                    endAdornment: <NetworkButton network={CHAIN_IDS.FUSE}><Button\n                                        variant=\"contained\"\n                                        onClick={deposit}>submit</Button></NetworkButton>,\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>}\n\n        {faucetData !== undefined && <Grid item xs={12}>\n            <Grid item xs={12}>\n                <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.claimable))} CEUSONE` || '--'}\n                            secondary={`Claimable Amount (≈${CoineusUSDFormat(formatWeiToNumber(faucetData.claimable) * wallet.prices.fuse[CEUSONE_ADDRESS]?.inUSD)})`}\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '1.75rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n\n                <NetworkButton network={CHAIN_IDS.FUSE}>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 20}}\n                        disabled={disabled}\n                        onClick={claim}\n                    >CLAIM</Button>\n                </NetworkButton>\n            </Grid>\n        </Grid>}\n\n        {disabled && <Grid item xs={12}>\n            <Alert severity=\"error\" variant=\"filled\">{disabledReason}</Alert>\n        </Grid>}\n\n        {faucetData !== undefined && <Grid item xs={12}>\n            <Divider style={{marginBottom: 10}}>OVERALL FAUCET STATS</Divider>\n            <Paper>\n                <ListItem>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.claimedAllTime))} CEUSONE`}\n                        secondary=\"Claimed All-Time\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusUSDFormat(formatWeiToNumber(faucetData.stats.claimedAllTime) * wallet.prices.fuse[CEUSONE_ADDRESS]?.inUSD)}`}\n                        secondary=\"Today's Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText\n                        primary={faucetData.stats.numberOfClaimsAllTime}\n                        secondary=\"Number of Claims\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.averageClaim))} CEUSONE`}\n                        secondary=\"Average Claimed\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.highestClaimed))} CEUSONE`}\n                        secondary=\"Highest Amount Claimed All-Time\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemText\n                        primary={faucetData.stats.highestClaimedBy}\n                        secondary=\"Highest Amount Claimed By\"\n                        primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                    />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.lockedAmount))} CEUSONE (${CoineusUSDFormat(formatWeiToNumber(faucetData.lockedAmount) * wallet.prices.fuse[CEUSONE_ADDRESS]?.inUSD)})`}\n                        secondary=\"Amount Locked\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.minBalance))} LIT (${CoineusUSDFormat(formatWeiToNumber(faucetData.minBalance) * wallet.prices.fuse[LIT_ADDRESS]?.inUSD)})`}\n                        secondary=\"Hold To Claim\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.fastpassAmount))} LIT (${CoineusUSDFormat(formatWeiToNumber(faucetData.fastpassAmount) * wallet.prices.fuse[LIT_ADDRESS]?.inUSD)})`}\n                        secondary=\"Hold For Fastpass\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n            </Paper>\n        </Grid>}\n\n        {userFaucetData !== undefined && <Grid item xs={12}>\n            <Divider style={{marginBottom: 10}}>MY FAUCET STATS</Divider>\n            <Paper>\n                <ListItem>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime))} CEUSONE`}\n                        secondary=\"Claimed All-Time\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusUSDFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime) * wallet.prices.fuse[CEUSONE_ADDRESS]?.inUSD)}`}\n                        secondary=\"Today's Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n\n                </ListItem>\n                <ListItem>\n                    <ListItemText\n                        primary={userFaucetData.stats.numberOfClaimsAllTime}\n                        secondary=\"Number of Claims\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.averageClaim))} CEUSONE`}\n                        secondary=\"Average Claimed\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.highestClaimed))} CEUSONE`}\n                        secondary=\"Highest Amount Claimed All-Time\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.balances.fuse[LIT_ADDRESS])} LIT (${CoineusUSDFormat(wallet.balances.fuse[LIT_ADDRESS] * wallet.prices.fuse[LIT_ADDRESS]?.inUSD)})`}\n                        secondary=\"My LIT Balance\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                </ListItem>\n            </Paper>\n        </Grid>}\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n    </Grid>)\n}","import {Alert, Button, Divider, Grid, ListItem, ListItemText, Paper, TextField} from \"@mui/material\";\n\nimport faucet_abi from '../../abis/Coineus/CEUSONEFaucet.json';\nimport {useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport CoineusLoading from \"../../components/CoineusLoading\";\nimport coineus_abi from \"../../abis/ceus_abi.json\";\nimport {formatWeiToNumber, toWei} from \"../../utils/format\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport {NetworkButton} from \"../../components/Coineus\";\n\nconst FAUCET_ADDRESS = '0x79a957755f1757c3e5307d472f2936Dea2Fdccc7';\nconst SRGONE_ADDRESS = '0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772';\nconst LIT_ADDRESS = '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc';\n\nexport default function SRGONEFaucet() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [faucetData, setFaucetData] = useState(undefined);\n    const [userFaucetData, setUserFaucetData] = useState(undefined);\n    const [disabled, setDisabled] = useState(false);\n    const [disabledReason, setDisabledReason] = useState(undefined);\n\n    //ADMIN\n    const [_amountToIncreaseBy, _setAmountToIncreaseBy] = useState(0);\n    const [_maxAmountToIncreaseTo, _setMaxAmountToIncreaseTo] = useState(0);\n    const [_minAmountForFastpass, _setMinAmountForFastpass] = useState(0);\n    const [_minAmountToClaim, _setMinAmountToClaim] = useState(0);\n    const [_timeBetweenClaims, _setTimeBetweenClaims] = useState(0);\n    const [_depositAmount, _setDepositAmount] = useState(0);\n\n    const web3BNB = new Web3(rpc.bnb);\n    const faucet_contract = new web3BNB.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n    const getInfo = () => {\n        const calls = [\n            faucet_contract.methods.getClaimableAmount().call,\n            faucet_contract.methods.getStats().call,\n            faucet_contract.methods.getLockedAmount().call,\n\n            faucet_contract.methods.getClaimPaused().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getMinAmountForFastpass().call,\n            faucet_contract.methods.getAmountToIncreaseBy().call,\n            faucet_contract.methods.getMaxAmountToIncreaseTo().call,\n            faucet_contract.methods.getTimeBetweenClaims().call,\n\n        ]\n\n        makeBatchRequest(web3BNB, calls).then(resp => {\n            let [\n                claimable,\n                stats,\n                lockedAmount,\n\n                paused,\n                minBalance,\n                fastpassAmount,\n                amountToIncreaseBy,\n                maxAmountToIncreaseTo,\n                timeBetweenClaims\n            ] = resp;\n\n            setFaucetData({\n                claimable,\n                stats,\n                lockedAmount,\n\n                paused,\n                minBalance,\n                fastpassAmount\n            })\n\n            _setAmountToIncreaseBy(formatWeiToNumber(amountToIncreaseBy, 9))\n            _setMaxAmountToIncreaseTo(formatWeiToNumber(maxAmountToIncreaseTo, 9))\n            _setMinAmountForFastpass(formatWeiToNumber(fastpassAmount, 9))\n            _setMinAmountToClaim(formatWeiToNumber(minBalance, 9))\n            _setTimeBetweenClaims(timeBetweenClaims / 60 / 60 / 24)\n\n        })\n    }\n\n    const getUserInfo = () => {\n\n        if (!wallet.address) {\n            return;\n        }\n\n        const calls = [\n            faucet_contract.methods.getStatsByAddress(wallet.address).call\n        ]\n\n        makeBatchRequest(web3BNB, calls).then(resp => {\n            let [\n                stats\n            ] = resp;\n\n            setUserFaucetData({\n                stats\n            })\n\n        })\n    }\n\n    //update disabled status\n    useEffect(() => {\n\n        if (!wallet.address) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to claim`)\n            return;\n        }\n\n        if (wallet.chain !== 56) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to Binance Smart Chain`)\n            return;\n        }\n\n\n        if (\n            faucetData &&\n            faucetData.paused) {\n\n            setDisabled(true);\n            setDisabledReason(`Claiming is paused`);\n            return;\n        }\n\n        if (\n            faucetData &&\n            wallet.balances.bnb[LIT_ADDRESS] <\n            formatWeiToNumber(faucetData.minBalance, 9)) {\n\n            setDisabled(true);\n            setDisabledReason(`You need to hold at least ${formatWeiToNumber(faucetData.minBalance, 9)} LIT to claim`);\n            return;\n        }\n\n        const now = (new Date()).getTime();\n        if (userFaucetData && userFaucetData.stats && userFaucetData.stats.timeCanClaim > parseInt(now / 1000)) {\n            setDisabled(true);\n            setDisabledReason(`You can claim again at ${new Date(userFaucetData.stats.timeCanClaim * 1000).toLocaleString()}`);\n            return true;\n        }\n\n        setDisabled(false);\n        setDisabledReason(undefined);\n\n    }, [wallet.address, wallet.chain, faucetData, userFaucetData])\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 30000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        getUserInfo();\n        const interval = setInterval(getUserInfo, 30000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods\n                .claim()\n                .send({\n                    from: wallet.address,\n                    gasPrice: 10000000000\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                    console.log(tx)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    console.log(error);\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    getUserInfo();\n                    setPending(false);\n                });\n\n        }\n    }\n\n    //ADMIN\n    const toggleFaucet = (state) => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setClaimPaused(state)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setAmountToIncreaseBy = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setAmountToIncreaseBy(_amountToIncreaseBy)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMaxAmountToIncreaseTo = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMaxAmountToIncreaseTo(_maxAmountToIncreaseTo)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMinAmountForFastpass = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMinAmountForFastpass(_minAmountForFastpass)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMinAmountToClaim = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMinAmountToClaim(_minAmountToClaim)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setTimeBetweenClaims = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setTimeBetweenClaims(_timeBetweenClaims)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const deposit = () => {\n\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const srgone_contract = new web3.eth.Contract(coineus_abi, SRGONE_ADDRESS);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            srgone_contract\n                .methods\n                .allowance(wallet.address, FAUCET_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 9)) < toWei(_depositAmount, 9)) {\n                        srgone_contract\n                            .methods\n                            .approve(FAUCET_ADDRESS, toWei(_depositAmount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(_depositAmount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getInfo()\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {\n                wallet.address === '0xb80267eA7fa368374ee4d4Bf10044778232AdEFe' && faucetData !== undefined &&\n                <Grid item xs={12}>\n                    <Paper>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={!faucetData.paused}\n                                        onClick={() => toggleFaucet(false)}>Open Faucet</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={faucetData.paused}\n                                        onClick={() => toggleFaucet(true)}>Close Faucet</Button>\n                                </NetworkButton>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Amount To Increase By\"\n                                    value={_amountToIncreaseBy}\n                                    onChange={ev => _setAmountToIncreaseBy(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setAmountToIncreaseBy}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Max Amount To Increase To\"\n                                    value={_maxAmountToIncreaseTo}\n                                    onChange={ev => _setMaxAmountToIncreaseTo(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setMaxAmountToIncreaseTo}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Min Amount To Claim\"\n                                    value={_minAmountToClaim}\n                                    onChange={ev => _setMinAmountToClaim(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setMinAmountToClaim}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Min Amount For Fastpass\"\n                                    value={_minAmountForFastpass}\n                                    onChange={ev => _setMinAmountForFastpass(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setMinAmountForFastpass}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Time Between Claims in Days\"\n                                    value={_timeBetweenClaims}\n                                    onChange={ev => _setTimeBetweenClaims(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setTimeBetweenClaims}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Deposit\"\n                                    value={_depositAmount}\n                                    onChange={ev => _setDepositAmount(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={deposit}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            }\n\n            {\n                faucetData !== undefined && <Grid item xs={12}>\n                    <Grid item xs={12}>\n                        <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.claimable, 9))} SRGONE` || '--'}\n                                    secondary={`Claimable Amount (≈${CoineusUSDFormat(formatWeiToNumber(faucetData.claimable, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)})`}\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '1.75rem', textAlign: 'right'}}\n                                    secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n\n                        <NetworkButton network={CHAIN_IDS.BNB}>\n                            <Button\n                                variant=\"contained\"\n                                fullWidth\n                                style={{marginTop: 20}}\n                                disabled={disabled}\n                                onClick={claim}\n                            >CLAIM</Button>\n                        </NetworkButton>\n                    </Grid>\n                </Grid>\n            }\n\n            {\n                disabled && <Grid item xs={12}>\n                    <Alert severity=\"error\" variant=\"filled\">{disabledReason}</Alert>\n                </Grid>\n            }\n\n            {\n                faucetData !== undefined && <Grid item xs={12}>\n                    <Divider style={{marginBottom: 10}}>OVERALL FAUCET STATS</Divider>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.claimedAllTime, 9))} SRGONE`}\n                                secondary=\"Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusUSDFormat(formatWeiToNumber(faucetData.stats.claimedAllTime, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)}`}\n                                secondary=\"Today's Value\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={faucetData.stats.numberOfClaimsAllTime}\n                                secondary=\"Number of Claims\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.averageClaim, 9))} SRGONE`}\n                                secondary=\"Average Claimed\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.highestClaimed, 9))} SRGONE`}\n                                secondary=\"Highest Amount Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={faucetData.stats.highestClaimedBy}\n                                secondary=\"Highest Amount Claimed By\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.lockedAmount, 9))} SRGONE (${CoineusUSDFormat(formatWeiToNumber(faucetData.lockedAmount, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)})`}\n                                secondary=\"Amount Locked\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.minBalance, 9))} LIT (${CoineusUSDFormat(formatWeiToNumber(faucetData.minBalance, 9) * wallet.prices.bnb[LIT_ADDRESS]?.inUSD)})`}\n                                secondary=\"Hold To Claim\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.fastpassAmount, 9))} LIT (${CoineusUSDFormat(formatWeiToNumber(faucetData.fastpassAmount, 9) * wallet.prices.bnb[LIT_ADDRESS]?.inUSD)})`}\n                                secondary=\"Hold For Fastpass\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n            }\n\n            {\n                userFaucetData !== undefined && <Grid item xs={12}>\n                    <Divider style={{marginBottom: 10}}>MY FAUCET STATS</Divider>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime, 9))} SRGONE`}\n                                secondary=\"Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusUSDFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)}`}\n                                secondary=\"Today's Value\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={userFaucetData.stats.numberOfClaimsAllTime}\n                                secondary=\"Number of Claims\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.averageClaim, 9))} SRGONE`}\n                                secondary=\"Average Claimed\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.highestClaimed, 9))} SRGONE`}\n                                secondary=\"Highest Amount Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(wallet.balances.bnb[LIT_ADDRESS])} LIT (${CoineusUSDFormat(wallet.balances.bnb[LIT_ADDRESS] * wallet.prices.bnb[LIT_ADDRESS]?.inUSD)})`}\n                                secondary=\"My LIT Balance\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n            }\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Grid>\n    )\n}","import {\n    Alert,\n    Avatar,\n    Button,\n    Divider,\n    Grid,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField\n} from \"@mui/material\";\n\nimport faucet_abi from '../../abis/SRGONESuperFaucet.json';\nimport {useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\nimport CoineusLoading from \"../../components/CoineusLoading\";\nimport coineus_abi from \"../../abis/ceus_abi.json\";\nimport {formatWeiToNumber, toWei} from \"../../utils/format\";\nimport {CHAIN_IDS} from \"../../constants\";\nimport {NetworkButton} from \"../../components/Coineus\";\n\nconst FAUCET_ADDRESS = '0xD4d6433001ef820d78b8782df0074dBF30e2C0CC';\nconst SRGONE_ADDRESS = '0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772';\nconst SRG_ADDRESS = '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff';\nconst LIT_ADDRESS = '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc';\nconst LIT_DISTRIBUTOR = '0x5b0881767d1a2Fffe19C218ae1F8fd4873943F63';\nconst CHAD_ADDRESS = '0xcC8A1364Bd05e05402e8b28dAe554b5d6216E6B9';\nconst CHAD_DISTRIBUTOR = '0xC49D6A0914C4b51134c2b18c6090BC702744c188';\n\nexport default function SRGONESuperFaucet() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [faucetData, setFaucetData] = useState(undefined);\n    const [userFaucetData, setUserFaucetData] = useState(undefined);\n    const [disabled, setDisabled] = useState(false);\n    const [disabledReason, setDisabledReason] = useState(undefined);\n\n    //ADMIN\n    const [_amountToIncreaseBy, _setAmountToIncreaseBy] = useState(0);\n    const [_maxAmountToIncreaseTo, _setMaxAmountToIncreaseTo] = useState(0);\n    const [_minAmountForFastpass, _setMinAmountForFastpass] = useState(0);\n    const [_minAmountToClaim, _setMinAmountToClaim] = useState(0);\n    const [_timeBetweenClaims, _setTimeBetweenClaims] = useState(0);\n    const [_depositAmount, _setDepositAmount] = useState(0);\n\n    const web3BNB = new Web3(rpc.bnb);\n    const faucet_contract = new web3BNB.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n    const srg_contract = new web3BNB.eth.Contract(coineus_abi, SRG_ADDRESS);\n    const lit_contract = new web3BNB.eth.Contract(coineus_abi, LIT_ADDRESS);\n    const lit_dist_contract = new web3BNB.eth.Contract(faucet_abi, LIT_DISTRIBUTOR);\n    const chad_contract = new web3BNB.eth.Contract(coineus_abi, CHAD_ADDRESS);\n    const chad_dist_contract = new web3BNB.eth.Contract(faucet_abi, CHAD_DISTRIBUTOR);\n\n    const getInfo = () => {\n        const calls = [\n            faucet_contract.methods.getClaimableAmount().call,\n            faucet_contract.methods.getStats().call,\n            faucet_contract.methods.getLockedAmount().call,\n\n            faucet_contract.methods.getClaimPaused().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getMinAmountForFastpass().call,\n            faucet_contract.methods.getAmountToIncreaseBy().call,\n            faucet_contract.methods.getMaxAmountToIncreaseTo().call,\n            faucet_contract.methods.getTimeBetweenClaims().call,\n\n            srg_contract.methods.balanceOf(FAUCET_ADDRESS).call,\n            lit_contract.methods.balanceOf(FAUCET_ADDRESS).call,\n            lit_dist_contract.methods.shares(FAUCET_ADDRESS).call,\n            chad_contract.methods.balanceOf(FAUCET_ADDRESS).call,\n            chad_dist_contract.methods.getUnpaidEarnings(FAUCET_ADDRESS).call\n\n        ]\n\n        makeBatchRequest(web3BNB, calls).then(resp => {\n            let [\n                claimable,\n                stats,\n                lockedAmount,\n\n                paused,\n                minBalance,\n                fastpassAmount,\n                amountToIncreaseBy,\n                maxAmountToIncreaseTo,\n                timeBetweenClaims,\n\n                faucetAmtSRG,\n                faucetAmtLIT,\n                faucetLITShares,\n                faucetAmtCHAD,\n                faucetAmtCHADUnpaid\n            ] = resp;\n\n            setFaucetData({\n                claimable,\n                stats,\n                lockedAmount,\n\n                paused,\n                minBalance,\n                fastpassAmount,\n\n                faucetAmtSRG,\n                faucetAmtLIT,\n                faucetLITShares,\n                faucetAmtCHAD,\n                faucetAmtCHADUnpaid\n            })\n\n            _setAmountToIncreaseBy(formatWeiToNumber(amountToIncreaseBy, 9))\n            _setMaxAmountToIncreaseTo(formatWeiToNumber(maxAmountToIncreaseTo, 9))\n            _setMinAmountForFastpass(formatWeiToNumber(fastpassAmount, 9))\n            _setMinAmountToClaim(formatWeiToNumber(minBalance, 9))\n            _setTimeBetweenClaims(timeBetweenClaims / 60 / 60 / 24)\n\n        })\n    }\n\n    const getUserInfo = () => {\n\n        if (!wallet.address) {\n            return;\n        }\n\n        const calls = [\n            faucet_contract.methods.getStatsByAddress(wallet.address).call\n        ]\n\n        makeBatchRequest(web3BNB, calls).then(resp => {\n            let [\n                stats\n            ] = resp;\n\n            setUserFaucetData({\n                stats\n            })\n\n        })\n    }\n\n    //update disabled status\n    useEffect(() => {\n\n        if (!wallet.address) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to claim`)\n            return;\n        }\n\n        if (wallet.chain !== 56) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to Binance Smart Chain`)\n            return;\n        }\n\n\n        if (\n            faucetData &&\n            faucetData.paused) {\n\n            setDisabled(true);\n            setDisabledReason(`Claiming is paused`);\n            return;\n        }\n\n        if (\n            faucetData &&\n            wallet.balances.bnb[LIT_ADDRESS] <\n            formatWeiToNumber(faucetData.minBalance, 9)) {\n\n            setDisabled(true);\n            setDisabledReason(`You need to hold at least ${formatWeiToNumber(faucetData.minBalance, 9)} LIT to claim`);\n            return;\n        }\n\n        const now = (new Date()).getTime();\n        if (userFaucetData && userFaucetData.stats && userFaucetData.stats.timeCanClaim > parseInt(now / 1000)) {\n            setDisabled(true);\n            setDisabledReason(`You can claim again at ${new Date(userFaucetData.stats.timeCanClaim * 1000).toLocaleString()}`);\n            return true;\n        }\n\n        setDisabled(false);\n        setDisabledReason(undefined);\n\n    }, [wallet.address, wallet.chain, faucetData, userFaucetData])\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 30000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        getUserInfo();\n        const interval = setInterval(getUserInfo, 30000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods\n                .claim()\n                .send({\n                    from: wallet.address,\n                    gasPrice: 10000000000\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                    console.log(tx)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    console.log(error);\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    getUserInfo();\n                    setPending(false);\n                });\n\n        }\n    }\n\n    //ADMIN\n    const toggleFaucet = (state) => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setClaimPaused(state)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setAmountToIncreaseBy = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setAmountToIncreaseBy(_amountToIncreaseBy)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMaxAmountToIncreaseTo = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMaxAmountToIncreaseTo(_maxAmountToIncreaseTo)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMinAmountForFastpass = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMinAmountForFastpass(_minAmountForFastpass)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setMinAmountToClaim = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setMinAmountToClaim(_minAmountToClaim)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const setTimeBetweenClaims = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.setTimeBetweenClaims(_timeBetweenClaims)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const depositSRG = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.depositSRG()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const updateSharesLIT = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods.updateShares(LIT_ADDRESS)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimCHADSRGONE = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, CHAD_DISTRIBUTOR);\n\n            contract.methods.claimDividend(FAUCET_ADDRESS)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo()\n                    setPending(false);\n                });\n        }\n    }\n\n    const deposit = () => {\n\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const srgone_contract = new web3.eth.Contract(coineus_abi, SRGONE_ADDRESS);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            srgone_contract\n                .methods\n                .allowance(wallet.address, FAUCET_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 9)) < toWei(_depositAmount, 9)) {\n                        srgone_contract\n                            .methods\n                            .approve(FAUCET_ADDRESS, toWei(_depositAmount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(_depositAmount, 9))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getInfo()\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {\n                wallet.address === '0xb80267eA7fa368374ee4d4Bf10044778232AdEFe' && faucetData !== undefined &&\n                <Grid item xs={12}>\n                    <Paper>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={!faucetData.paused}\n                                        onClick={() => toggleFaucet(false)}>Open Faucet</Button>\n                                </NetworkButton>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <NetworkButton network={CHAIN_IDS.BNB}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={faucetData.paused}\n                                        onClick={() => toggleFaucet(true)}>Close Faucet</Button>\n                                </NetworkButton>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Amount To Increase By\"\n                                    value={_amountToIncreaseBy}\n                                    onChange={ev => _setAmountToIncreaseBy(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setAmountToIncreaseBy}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Max Amount To Increase To\"\n                                    value={_maxAmountToIncreaseTo}\n                                    onChange={ev => _setMaxAmountToIncreaseTo(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setMaxAmountToIncreaseTo}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Min Amount To Claim\"\n                                    value={_minAmountToClaim}\n                                    onChange={ev => _setMinAmountToClaim(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setMinAmountToClaim}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Min Amount For Fastpass\"\n                                    value={_minAmountForFastpass}\n                                    onChange={ev => _setMinAmountForFastpass(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setMinAmountForFastpass}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Time Between Claims in Days\"\n                                    value={_timeBetweenClaims}\n                                    onChange={ev => _setTimeBetweenClaims(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={setTimeBetweenClaims}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Deposit\"\n                                    value={_depositAmount}\n                                    onChange={ev => _setDepositAmount(ev.target.value)}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={deposit}>submit</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Pending SRG\"\n                                    value={formatWeiToNumber(faucetData.faucetAmtSRG, 9)}\n                                    disabled={true}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={depositSRG}>DEPOSIT</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"LIT Shares\"\n                                    value={formatWeiToNumber(faucetData.faucetLITShares.amount, 9)}\n                                    disabled={true}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={updateSharesLIT}>UPDATE</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Pending Rewards CHAD\"\n                                    value={formatWeiToNumber(faucetData.faucetAmtCHADUnpaid, 9)}\n                                    disabled={true}\n                                    InputProps={{\n                                        endAdornment: <NetworkButton network={CHAIN_IDS.BNB}><Button\n                                            variant=\"contained\"\n                                            onClick={claimCHADSRGONE}>CLAIM</Button></NetworkButton>,\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            }\n\n            {\n                faucetData !== undefined && <Grid item xs={12}>\n                    <Grid item xs={12}>\n                        <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.claimable, 9))} SRGONE` || '--'}\n                                    secondary={`Claimable Amount (≈${CoineusUSDFormat(formatWeiToNumber(faucetData.claimable, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)})`}\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '1.75rem', textAlign: 'right'}}\n                                    secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n\n                        <NetworkButton network={CHAIN_IDS.BNB}>\n                            <Button\n                                variant=\"contained\"\n                                fullWidth\n                                style={{marginTop: 20}}\n                                disabled={disabled}\n                                onClick={claim}\n                            >CLAIM</Button>\n                        </NetworkButton>\n                    </Grid>\n                </Grid>\n            }\n\n            {\n                disabled && <Grid item xs={12}>\n                    <Alert severity=\"error\" variant=\"filled\">{disabledReason}</Alert>\n                </Grid>\n            }\n\n            {\n                faucetData !== undefined && <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/bnb/${LIT_ADDRESS}/logo.png`}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.faucetAmtLIT, 9))} LIT`}\n                                secondary=\"Lightning Token Locked\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/bnb/${CHAD_ADDRESS}/logo.png`}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.faucetAmtCHAD, 9))} CHAD`}\n                                secondary=\"Chad Token Locked\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n            }\n\n            {\n                faucetData !== undefined && <Grid item xs={12}>\n                    <Divider style={{marginBottom: 10}}>OVERALL FAUCET STATS</Divider>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.claimedAllTime, 9))} SRGONE`}\n                                secondary=\"Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusUSDFormat(formatWeiToNumber(faucetData.stats.claimedAllTime, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)}`}\n                                secondary=\"Today's Value\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={faucetData.stats.numberOfClaimsAllTime}\n                                secondary=\"Number of Claims\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.averageClaim, 9))} SRGONE`}\n                                secondary=\"Average Claimed\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.highestClaimed, 9))} SRGONE`}\n                                secondary=\"Highest Amount Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={faucetData.stats.highestClaimedBy}\n                                secondary=\"Highest Amount Claimed By\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.lockedAmount, 9))} SRGONE (${CoineusUSDFormat(formatWeiToNumber(faucetData.lockedAmount, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)})`}\n                                secondary=\"Amount Locked\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.minBalance, 9))} LIT (${CoineusUSDFormat(formatWeiToNumber(faucetData.minBalance, 9) * wallet.prices.bnb[LIT_ADDRESS]?.inUSD)})`}\n                                secondary=\"Hold To Claim\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.fastpassAmount, 9))} LIT (${CoineusUSDFormat(formatWeiToNumber(faucetData.fastpassAmount, 9) * wallet.prices.bnb[LIT_ADDRESS]?.inUSD)})`}\n                                secondary=\"Hold For Fastpass\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n            }\n\n            {\n                userFaucetData !== undefined && <Grid item xs={12}>\n                    <Divider style={{marginBottom: 10}}>MY FAUCET STATS</Divider>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime, 9))} SRGONE`}\n                                secondary=\"Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusUSDFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime, 9) * wallet.prices.bnb[SRGONE_ADDRESS]?.inUSD)}`}\n                                secondary=\"Today's Value\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={userFaucetData.stats.numberOfClaimsAllTime}\n                                secondary=\"Number of Claims\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.averageClaim, 9))} SRGONE`}\n                                secondary=\"Average Claimed\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.highestClaimed, 9))} SRGONE`}\n                                secondary=\"Highest Amount Claimed All-Time\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(wallet.balances.bnb[LIT_ADDRESS])} LIT (${CoineusUSDFormat(wallet.balances.bnb[LIT_ADDRESS] * wallet.prices.bnb[LIT_ADDRESS]?.inUSD)})`}\n                                secondary=\"My LIT Balance\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n            }\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Grid>\n    )\n}","import {Avatar, Button, ListItemIcon, ListItemText, Menu, MenuItem, MenuList} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useState} from \"react\";\nimport {CHAIN_IDS} from \"../constants\";\nimport Web3 from \"web3\";\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\nexport default function ChainSelector() {\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const changeNetwork = async (network) => {\n        if(!wallet.address)return false;\n        const web3 = new Web3(window.provider);\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{chainId: web3.utils.toHex(network)}], // chainId must be in hexadecimal numbers\n        });\n        setAnchorEl(null)\n    }\n\n    const checkIconSize = {width: 16, height: 16}\n\n    return <>\n        <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={handleClick}\n            style={{minWidth:0, display: !wallet.chain ? 'none' : ''}}\n        >{getChainLogo(wallet.chain)}</Button>\n\n        <Menu\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n        >\n            <MenuList>\n                <MenuItem onClick={()=>changeNetwork(CHAIN_IDS.FUSE)}>\n                    <ListItemIcon>\n                        {getChainLogo(CHAIN_IDS.FUSE)}\n                    </ListItemIcon>\n                    <ListItemText>Fuse Network {wallet.chain === CHAIN_IDS.FUSE ? <CheckCircleIcon color=\"primary\" sx={checkIconSize}/> : ''}</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={()=>changeNetwork(CHAIN_IDS.BNB)}>\n                    <ListItemIcon>\n                        {getChainLogo(CHAIN_IDS.BNB)}\n                    </ListItemIcon>\n                    <ListItemText>Binance Smart Chain {wallet.chain === CHAIN_IDS.BNB ? <CheckCircleIcon color=\"primary\" sx={checkIconSize}/> : ''}</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={()=>changeNetwork(CHAIN_IDS.AVAX)}>\n                    <ListItemIcon>\n                        {getChainLogo(CHAIN_IDS.AVAX)}\n                    </ListItemIcon>\n                    <ListItemText>Avalance {wallet.chain === CHAIN_IDS.AVAX ? <CheckCircleIcon color=\"primary\" sx={checkIconSize}/> : ''}</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={()=>changeNetwork(CHAIN_IDS.ETH)}>\n                    <ListItemIcon>\n                        {getChainLogo(CHAIN_IDS.ETH)}\n                    </ListItemIcon>\n                    <ListItemText>Ethereum {wallet.chain === CHAIN_IDS.ETH ? <CheckCircleIcon color=\"primary\" sx={checkIconSize}/> : ''}</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={()=>changeNetwork(CHAIN_IDS.ARB)}>\n                    <ListItemIcon>\n                        {getChainLogo(CHAIN_IDS.ARB)}\n                    </ListItemIcon>\n                    <ListItemText>Arbitrum {wallet.chain === CHAIN_IDS.ARB ? <CheckCircleIcon color=\"primary\" sx={checkIconSize}/> : ''}</ListItemText>\n                </MenuItem>\n            </MenuList>\n        </Menu>\n\n\n    </>\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 22, height: 22}\n    const style = {}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        case 42161:\n            return <Avatar src='https://coineus.app/assets/tokens/arb/chain.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import Web3 from \"web3\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\n\nimport farm_abi from \"../abis/MultiRewards.json\";\nimport ierc20_abi from \"../abis/IERC20.json\";\nimport {formatWei, formatWeiToNumber, toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {\n    Button,\n    FormControl,\n    Grid, InputAdornment,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {NetworkButton} from \"../components/Coineus\";\nimport {CHAIN_IDS} from \"../constants\";\nimport BigNumber from \"bignumber.js\";\n\nconst FARM_CONTRACT = \"0x7243265f91e138a11548DF4253E3ec056b6348f8\";\n\nconst REWARD_TOKEN1 = \"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\";\n\nexport default function Farm() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const web3 = new Web3(rpc.fuse);\n    const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [allowance, setAllowance] = useState(\"\");\n    const [apy, setApy] = useState(\"\");\n\n    const getInfo = () => {\n\n        if (!wallet.address) return;\n\n        const calls = [\n            farm_contract.methods.stakingToken().call,\n            farm_contract.methods.totalSupply().call,\n            farm_contract.methods.balanceOf(wallet.address).call,\n            farm_contract.methods.rewardData(REWARD_TOKEN1).call,\n            farm_contract.methods.rewards(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.userRewardPerTokenPaid(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.earned(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.rewardPerToken(REWARD_TOKEN1).call,\n            farm_contract.methods.getRewardForDuration(REWARD_TOKEN1).call,\n            farm_contract.methods.rewardTokens(0).call\n        ]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                sToken,\n                totalStaked,\n                stakedAmount,\n                rewardToken1Data,\n                rewards1,\n                userRewardPerTokenPaid1,\n                earned1,\n                rewardPerToken1,\n                getRewardForDuration1,\n                rewardTokens1\n            ] = resp;\n\n            const stake_token = new web3.eth.Contract(ierc20_abi, sToken)\n\n            const calls = [\n                stake_token.methods.balanceOf(wallet.address).call,\n                stake_token.methods.allowance(wallet.address, FARM_CONTRACT).call\n            ];\n\n            makeBatchRequest(web3, calls).then(resp => {\n\n                const [\n                    stake_token_balance,\n                    allowance\n                ] = resp;\n\n                const totalRewards = getRewardForDuration1;\n                const rewardPrice = wallet.prices.fuse?.[REWARD_TOKEN1].inUSD; //LIT Price\n                const totalRewardsInUSD = formatWeiToNumber(totalRewards, 18) * rewardPrice\n\n                const durationInDays = rewardToken1Data.rewardsDuration / (3600 * 24)\n                const apyPercent = ((totalRewardsInUSD / totalStaked) * (365 / durationInDays))\n                setApy(apyPercent);\n                setAllowance(allowance);\n\n                const secondsLeft = parseInt(((rewardToken1Data.periodFinish * 1000) - new Date().getTime()) / 1000);\n                const rewardsRemaining = secondsLeft * rewardToken1Data.rewardRate / (10 ** 18);\n                const potentialEarnings = rewardsRemaining * (stakedAmount / totalStaked);\n\n                setData({\n                    stake_token: sToken,\n                    stake_token_balance: formatWeiToNumber(stake_token_balance),\n                    totalStaked: formatWeiToNumber(totalStaked),\n                    stakedAmount: formatWeiToNumber(stakedAmount),\n                    rewardToken1Data,\n                    rewards1: formatWeiToNumber(rewards1),\n                    userRewardPerTokenPaid1: formatWeiToNumber(userRewardPerTokenPaid1),\n                    earned1: formatWeiToNumber(earned1),\n                    rewardPerToken1: formatWeiToNumber(rewardPerToken1),\n                    getRewardForDuration1: formatWeiToNumber(getRewardForDuration1),\n                    rewardTokens1,\n                    rewardsRemaining,\n                    potentialEarnings\n                })\n            })\n\n        })\n    }\n\n    /**\n     * addRewards(rewardToken, managerAddress, duration) - add reward token\n     * 2592000 = 30 days\n     */\n\n    const stake = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n\n            const stake_token_contract = new web3.eth.Contract(ierc20_abi, data.stake_token);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n\n\n            stake_token_contract\n                .methods\n                .allowance(wallet.address, FARM_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount)) {\n                        stake_token_contract\n                            .methods\n                            .approve(FARM_CONTRACT, toWei(amount))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                stake()\n                            });\n                    } else {\n                        stake()\n                    }\n                })\n\n            const stake = () => {\n                farm_contract.methods.stake(toWei(amount))\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getInfo();\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const getReward = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n            farm_contract.methods.getReward()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                });\n        }\n\n    }\n\n    const exit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n            farm_contract.methods.exit()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    useEffect(() => {\n        getInfo();\n    }, [wallet.address]);\n\n    return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n        <Grid item xs={12}>\n            <Paper style={{padding: 20}}>\n                <Typography variant=\"h6\">Stake FUSE/CEUS LP</Typography>\n                <ListItem disableGutters>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.totalStaked)}\n                        secondary=\"Total Staked\"\n                    />\n                    <ListItemText\n                        primary={new Date(data.rewardToken1Data?.periodFinish * 1000).toLocaleString()}\n                        secondary=\"Pool Ends\"\n                    />\n                </ListItem>\n                <ListItem disableGutters>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.getRewardForDuration1)}\n                        secondary=\"Rewards Start\"\n                    />\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.rewardsRemaining)}\n                        secondary=\"Rewards Remaining\"\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder=\"Enter Amount\"\n                        onChange={(ev) => {\n                            setAmount(ev.target.value)\n                        }}\n                        helperText={`FUSE/CEUS LP Balance: ${data.stake_token_balance}`}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(data.stake_token_balance - (1/(10**12)))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <NetworkButton network={CHAIN_IDS.FUSE}>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        onClick={() => stake()}>STAKE</Button>\n                </NetworkButton>\n            </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n            <Paper>\n                <List>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(data.stakedAmount)}\n                            secondary=\"My Staked Amount\"\n                        />\n                        <ListItemSecondaryAction>\n                            <NetworkButton network={CHAIN_IDS.FUSE}>\n                                <Button onClick={() => exit()}>Withdraw</Button>\n                            </NetworkButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={(data.stakedAmount / data.totalStaked * 100 || 0).toFixed(2) + \"%\"}\n                            secondary=\"My Stake Share\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(data.potentialEarnings)} LIT`}\n                            secondary=\"My Remaining Potential Rewards\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(data.earned1)} LIT`}\n                            secondary=\"My Pending Rewards\"\n                        />\n                        <ListItemSecondaryAction>\n                            <NetworkButton network={CHAIN_IDS.FUSE}>\n                                <Button onClick={() => getReward()}>Claim</Button>\n                            </NetworkButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n\n        </Grid>\n        <Grid item xs={12}>\n            <Paper>\n                <List>\n                    <ListItem>\n                        <ListItemText\n                            primary={formatWeiToNumber(allowance)}\n                            secondary=\"Allowance\"\n                        />\n                    </ListItem>\n                </List>\n            </Paper>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Grid>\n}","import Web3 from \"web3\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\n\nimport farm_abi from \"../abis/MultiRewards.json\";\nimport ierc20_abi from \"../abis/IERC20.json\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {\n    Button,\n    FormControl,\n    Grid, InputAdornment,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {NetworkButton} from \"../components/Coineus\";\nimport {CHAIN_IDS} from \"../constants\";\n\n// const FARM_CONTRACT = \"0x678266b93f77d36756db35166967C213fD0b5aE6\";\nconst FARM_CONTRACT = \"0xF793a9803c1260C470858cd20D75E37e5BF3C999\";\nconst REWARD_TOKEN1 = \"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\";\n\nexport default function CHADBNBStaking() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const web3 = new Web3(rpc.bnb);\n    const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [allowance, setAllowance] = useState(\"\");\n    const [apy, setApy] = useState(\"\");\n\n    const getInfo = () => {\n\n        if (!wallet.address) return;\n\n        const calls = [\n            farm_contract.methods.stakingToken().call,\n            farm_contract.methods.totalSupply().call,\n            farm_contract.methods.balanceOf(wallet.address).call,\n            farm_contract.methods.rewardData(REWARD_TOKEN1).call,\n            farm_contract.methods.rewards(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.userRewardPerTokenPaid(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.earned(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.rewardPerToken(REWARD_TOKEN1).call,\n            farm_contract.methods.getRewardForDuration(REWARD_TOKEN1).call,\n            farm_contract.methods.rewardTokens(0).call\n        ]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                sToken,\n                totalStaked,\n                stakedAmount,\n                rewardToken1Data,\n                rewards1,\n                userRewardPerTokenPaid1,\n                earned1,\n                rewardPerToken1,\n                getRewardForDuration1,\n                rewardTokens1\n            ] = resp;\n\n            const stake_token = new web3.eth.Contract(ierc20_abi, sToken)\n\n            const calls = [\n                stake_token.methods.balanceOf(wallet.address).call,\n                stake_token.methods.allowance(wallet.address, FARM_CONTRACT).call,\n                stake_token.methods.totalSupply().call\n            ];\n\n            makeBatchRequest(web3, calls).then(resp => {\n\n                const [\n                    stake_token_balance,\n                    allowance,\n                    stake_token_supply\n                ] = resp;\n\n                const totalRewards = getRewardForDuration1;\n                const rewardPrice = wallet.prices.bnb?.[REWARD_TOKEN1]?.inUSD; //SRG Price\n                const totalRewardsInUSD = formatWeiToNumber(totalRewards, 9) * rewardPrice\n\n                const durationInDays = rewardToken1Data.rewardsDuration / (3600 * 24)\n                const apyPercent = ((totalRewardsInUSD / totalStaked) * (365 / durationInDays))\n                setApy(apyPercent);\n\n                setAllowance(allowance);\n\n                const secondsLeft = parseInt(((rewardToken1Data.periodFinish * 1000) - new Date().getTime()) / 1000);\n                const rewardsRemaining = secondsLeft * rewardToken1Data.rewardRate / (10 ** 9);\n                const potentialEarnings = rewardsRemaining * (stakedAmount / totalStaked);\n\n                setData({\n                    stake_token: sToken,\n                    stake_token_balance: formatWeiToNumber(stake_token_balance, 9),\n                    totalStaked: formatWeiToNumber(totalStaked, 9),\n                    stakedAmount: formatWeiToNumber(stakedAmount, 9),\n                    rewardToken1Data,\n                    rewards1: formatWeiToNumber(rewards1, 9),\n                    userRewardPerTokenPaid1: formatWeiToNumber(userRewardPerTokenPaid1, 9),\n                    earned1: formatWeiToNumber(earned1, 9),\n                    rewardPerToken1: formatWeiToNumber(rewardPerToken1, 9),\n                    getRewardForDuration1: formatWeiToNumber(getRewardForDuration1, 9),\n                    rewardTokens1,\n                    rewardsRemaining,\n                    potentialEarnings,\n                    stake_token_supply: stake_token_supply/(10**9)\n                })\n            })\n\n        })\n    }\n\n    /**\n     * addRewards(rewardToken, managerAddress, duration) - add reward token\n     * 2592000 = 30 days\n     * 604800 = 7 days\n     */\n\n    const stake = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n\n            const stake_token_contract = new web3.eth.Contract(ierc20_abi, data.stake_token);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n\n            stake_token_contract\n                .methods\n                .allowance(wallet.address, FARM_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (parseInt(resp) < parseInt(toWei(amount, 9))) {\n                        stake_token_contract\n                            .methods\n                            .approve(FARM_CONTRACT, toWei(amount, 9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                stake()\n                            });\n                    } else {\n                        stake()\n                    }\n                })\n\n            const stake = () => {\n                farm_contract.methods.stake(toWei(amount, 9))\n                    .send({from: wallet.address, gas: 700000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        setPending(false);\n                        getInfo();\n                    });\n            }\n        }\n    }\n\n    const getReward = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n            farm_contract.methods.getReward()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const exit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n            farm_contract.methods.exit()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n        <Grid item xs={12}>\n            <Paper style={{padding: 20}}>\n                <Typography variant=\"h6\">Stake CHAD BNB</Typography>\n                <ListItem disableGutters>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.totalStaked)}\n                        secondary=\"Total Staked\"\n                    />\n                    <ListItemText\n                        primary={(data.totalStaked / data.stake_token_supply * 100).toFixed(2) + \"%\"}\n                        secondary=\"Staked % of Supply\"\n                    />\n                </ListItem>\n                <ListItem disableGutters>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.getRewardForDuration1) + \" SRG\"}\n                        secondary=\"Rewards Start\"\n                    />\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.rewardsRemaining) + \" SRG\"}\n                        secondary=\"Rewards Remaining\"\n                    />\n                </ListItem>\n                <ListItem disableGutters>\n                    <ListItemText\n                        primary={new Date(data.rewardToken1Data?.periodFinish * 1000).toLocaleString()}\n                        secondary=\"Round Ends\"\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder=\"Enter Amount\"\n                        onChange={(ev) => {\n                            setAmount(ev.target.value)\n                        }}\n                        helperText={`CHAD Balance: ${data.stake_token_balance}`}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(data.stake_token_balance.toFixed(8))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <NetworkButton network={CHAIN_IDS.BNB}>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        onClick={() => stake()}>STAKE</Button>\n                </NetworkButton>\n            </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n            <Paper>\n                <List>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(data.stakedAmount)}\n                            secondary=\"My Staked Amount\"\n                        />\n                        <ListItemSecondaryAction>\n                            <NetworkButton network={CHAIN_IDS.BNB}>\n                                <Button onClick={() => exit()}>Withdraw</Button>\n                            </NetworkButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={(data.stakedAmount / data.totalStaked * 100 || 0).toFixed(2) + \"%\"}\n                            secondary=\"My Stake Share\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(data.potentialEarnings)} SRG (${CoineusUSDFormat(data.potentialEarnings * wallet.prices.bnb?.[REWARD_TOKEN1]?.inUSD)})`}\n                            secondary=\"My Remaining Potential Rewards\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            // primary={`${CoineusCryptoFormat(data.earned1)} SRG`}\n                            primary={`${data.earned1} SRG (${CoineusUSDFormat(data.earned1 * wallet.prices.bnb?.[REWARD_TOKEN1]?.inUSD)})`}\n                            secondary=\"My Pending Rewards\"\n                        />\n                        <ListItemSecondaryAction>\n                            <NetworkButton network={CHAIN_IDS.BNB}>\n                                <Button onClick={() => getReward()}>Claim</Button>\n                            </NetworkButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n\n        </Grid>\n        <Grid item xs={12}>\n            <Paper>\n                <List>\n                    <ListItem>\n                        <ListItemText\n                            primary={formatWeiToNumber(allowance, 9)}\n                            secondary=\"Allowance\"\n                        />\n                    </ListItem>\n                </List>\n            </Paper>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Grid>\n}","import Web3 from \"web3\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\n\nimport farm_abi from \"../abis/MultiRewards.json\";\nimport ierc20_abi from \"../abis/IERC20.json\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {\n    Button,\n    FormControl,\n    Grid, InputAdornment,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {NetworkButton} from \"../components/Coineus\";\nimport {CHAIN_IDS} from \"../constants\";\n\nconst FARM_CONTRACT = \"0x7653DEcd7C9057AE0af3d82a9BF382dB449c5d78\";\nconst REWARD_TOKEN1 = \"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\";\n\nexport default function CHADBNBStakingOLD() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const web3 = new Web3(rpc.bnb);\n    const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [allowance, setAllowance] = useState(\"\");\n    const [apy, setApy] = useState(\"\");\n\n    const getInfo = () => {\n\n        if (!wallet.address) return;\n\n        const calls = [\n            farm_contract.methods.stakingToken().call,\n            farm_contract.methods.totalSupply().call,\n            farm_contract.methods.balanceOf(wallet.address).call,\n            farm_contract.methods.rewardData(REWARD_TOKEN1).call,\n            farm_contract.methods.rewards(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.userRewardPerTokenPaid(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.earned(wallet.address, REWARD_TOKEN1).call,\n            farm_contract.methods.rewardPerToken(REWARD_TOKEN1).call,\n            farm_contract.methods.getRewardForDuration(REWARD_TOKEN1).call,\n            farm_contract.methods.rewardTokens(0).call\n        ]\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                sToken,\n                totalStaked,\n                stakedAmount,\n                rewardToken1Data,\n                rewards1,\n                userRewardPerTokenPaid1,\n                earned1,\n                rewardPerToken1,\n                getRewardForDuration1,\n                rewardTokens1\n            ] = resp;\n\n            console.log({\n                sToken,\n                totalStaked,\n                stakedAmount,\n                rewardToken1Data,\n                rewards1,\n                userRewardPerTokenPaid1,\n                earned1,\n                rewardPerToken1,\n                getRewardForDuration1,\n                rewardTokens1})\n\n            const stake_token = new web3.eth.Contract(ierc20_abi, sToken)\n\n            const calls = [\n                stake_token.methods.balanceOf(wallet.address).call,\n                stake_token.methods.allowance(wallet.address, FARM_CONTRACT).call\n            ];\n\n            makeBatchRequest(web3, calls).then(resp => {\n\n                const [\n                    stake_token_balance,\n                    allowance\n                ] = resp;\n\n                const totalRewards = getRewardForDuration1;\n                const rewardPrice = wallet.prices.bnb?.[REWARD_TOKEN1]?.inUSD; //SRG Price\n                const totalRewardsInUSD = formatWeiToNumber(totalRewards, 9) * rewardPrice\n\n                const durationInDays = rewardToken1Data.rewardsDuration / (3600 * 24)\n                const apyPercent = ((totalRewardsInUSD / totalStaked) * (365 / durationInDays))\n                setApy(apyPercent);\n\n                setAllowance(allowance);\n\n                const secondsLeft = parseInt(((rewardToken1Data.periodFinish * 1000) - new Date().getTime()) / 1000);\n                const rewardsRemaining = secondsLeft * rewardToken1Data.rewardRate / (10 ** 9);\n                const potentialEarnings = rewardsRemaining * (stakedAmount / totalStaked);\n\n                setData({\n                    stake_token: sToken,\n                    stake_token_balance: formatWeiToNumber(stake_token_balance, 9),\n                    totalStaked: formatWeiToNumber(totalStaked, 9),\n                    stakedAmount: formatWeiToNumber(stakedAmount, 9),\n                    rewardToken1Data,\n                    rewards1: formatWeiToNumber(rewards1, 9),\n                    userRewardPerTokenPaid1: formatWeiToNumber(userRewardPerTokenPaid1, 9),\n                    earned1: formatWeiToNumber(earned1, 9),\n                    rewardPerToken1: formatWeiToNumber(rewardPerToken1, 9),\n                    getRewardForDuration1: formatWeiToNumber(getRewardForDuration1, 9),\n                    rewardTokens1,\n                    rewardsRemaining,\n                    potentialEarnings\n                })\n            })\n\n        })\n    }\n\n    /**\n     * addRewards(rewardToken, managerAddress, duration) - add reward token\n     * 2592000 = 30 days\n     */\n\n    const stake = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n\n            const stake_token_contract = new web3.eth.Contract(ierc20_abi, data.stake_token);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n\n\n            stake_token_contract\n                .methods\n                .allowance(wallet.address, FARM_CONTRACT)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < toWei(amount,9)) {\n                        stake_token_contract\n                            .methods\n                            .approve(FARM_CONTRACT, toWei(amount,9))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                stake()\n                            });\n                    } else {\n                        stake()\n                    }\n                })\n\n            const stake = () => {\n                farm_contract.methods.stake(toWei(amount,9))\n                    .send({from: wallet.address, gas: 700000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getInfo();\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const getReward = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n            farm_contract.methods.getReward()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const exit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const farm_contract = new web3.eth.Contract(farm_abi, FARM_CONTRACT);\n            farm_contract.methods.exit()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    useEffect(() => {\n        getInfo();\n    }, [wallet.address]);\n\n    if(wallet.address !== '0xb80267eA7fa368374ee4d4Bf10044778232AdEFe') {\n        return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <Typography>Pending Update</Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    }\n\n\n    return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n        <Grid item xs={12}>\n            <Paper style={{padding: 20}}>\n                <Typography variant=\"h6\">Stake CHAD BNB</Typography>\n                <ListItem disableGutters>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.totalStaked)}\n                        secondary=\"Total Staked\"\n                    />\n                    <ListItemText\n                        primary={new Date(data.rewardToken1Data?.periodFinish * 1000).toLocaleString()}\n                        secondary=\"Pool Ends\"\n                    />\n                </ListItem>\n                <ListItem disableGutters>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.getRewardForDuration1) + \" SRG\"}\n                        secondary=\"Rewards Start\"\n                    />\n                    <ListItemText\n                        primary={CoineusCryptoFormat(data.rewardsRemaining) + \" SRG\"}\n                        secondary=\"Rewards Remaining\"\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder=\"Enter Amount\"\n                        onChange={(ev) => {\n                            setAmount(ev.target.value)\n                        }}\n                        helperText={`CHAD Balance: ${data.stake_token_balance}`}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(data.stake_token_balance - (1/(10**12)))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <NetworkButton network={CHAIN_IDS.BNB}>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        onClick={() => stake()}>STAKE</Button>\n                </NetworkButton>\n            </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n            <Paper>\n                <List>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(data.stakedAmount)}\n                            secondary=\"My Staked Amount\"\n                        />\n                        <ListItemSecondaryAction>\n                            <NetworkButton network={CHAIN_IDS.BNB}>\n                                <Button onClick={() => exit()}>Withdraw</Button>\n                            </NetworkButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={(data.stakedAmount / data.totalStaked * 100 || 0).toFixed(2) + \"%\"}\n                            secondary=\"My Stake Share\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(data.userRewardPerTokenPaid1)} SRG`}\n                            secondary=\"My Rewards Received\"\n                        />\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(data.potentialEarnings)} SRG`}\n                            secondary=\"My Potential Rewards\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(data.earned1)} SRG`}\n                            secondary=\"My Pending Rewards\"\n                        />\n                        <ListItemSecondaryAction>\n                            <NetworkButton network={CHAIN_IDS.BNB}>\n                                <Button onClick={() => getReward()}>Claim</Button>\n                            </NetworkButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n\n        </Grid>\n        <Grid item xs={12}>\n            <Paper>\n                <List>\n                    <ListItem>\n                        <ListItemText\n                            primary={formatWeiToNumber(allowance, 9)}\n                            secondary=\"Allowance\"\n                        />\n                    </ListItem>\n                </List>\n            </Paper>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Grid>\n}","import {\n    Avatar,\n    Button,\n    Divider,\n    Grid, IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Paper, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport faucet_abi from \"../../abis/Coineus/CEUSONEFaucet.json\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {CoineusCryptoFormat} from \"../../utils/currency_format\";\nimport {formatWeiToNumber} from \"../../utils/format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\nimport CoineusLoading from \"../../components/CoineusLoading\";\nimport PaidIcon from '@mui/icons-material/Paid';\nimport {CHAIN_IDS_TO_NAMES} from \"../../constants\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nconst CEUSONE_FAUCET_ADDRESS = '0x3E4a3A2459A2Fa02544E792D728917C708872922';\nconst SRGONE_FAUCET_ADDRESS = '0x79a957755f1757c3e5307d472f2936Dea2Fdccc7';\nconst SRGONE_SUPER_FAUCET_ADDRESS = '0xD4d6433001ef820d78b8782df0074dBF30e2C0CC';\nconst CEUSONE_ADDRESS = '0xE27431FACb1F093BA164c9F86B3f484b39ad54CC';\nconst SRGONE_ADDRESS = '0x14F91F92aF274DDFF7f1A7f187B5eB5385F5f772';\nconst LIT_ADDRESS = '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F';\nconst LITBNB_ADDRESS = '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc';\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        },\n        '&.arb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/arb/chain.png')`,\n        }\n    }\n}));\n\nexport default function Faucets() {\n\n    const classes = useStyles();\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const web3FUSE = new Web3(rpc.fuse);\n    const web3BNB = new Web3(rpc.bnb);\n\n    const ceusone_faucet_contract = new web3FUSE.eth.Contract(faucet_abi, CEUSONE_FAUCET_ADDRESS);\n    const srgone_faucet_contract = new web3BNB.eth.Contract(faucet_abi, SRGONE_FAUCET_ADDRESS);\n    const srgone_super_faucet_contract = new web3BNB.eth.Contract(faucet_abi, SRGONE_SUPER_FAUCET_ADDRESS);\n\n\n    const [ceusoneFaucet, setCeusoneFaucet] = useState({});\n    const [srgoneFaucet, setSrgoneFaucet] = useState({});\n    const [srgoneSuperFaucet, setSrgoneSuperFaucet] = useState({});\n\n    const getInfo = () => {\n\n        if (!wallet.address) {\n            return;\n        }\n\n        const calls = [\n            ceusone_faucet_contract.methods.getClaimableAmount().call,\n            ceusone_faucet_contract.methods.getMinAmountToClaim().call,\n            ceusone_faucet_contract.methods.getMinAmountForFastpass().call,\n            ceusone_faucet_contract.methods.getStatsByAddress(wallet.address).call,\n            ceusone_faucet_contract.methods.getClaimPaused().call,\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n\n            const [\n                claimable,\n                minAmountToClaim,\n                minAmountFastpass,\n                stats,\n                paused\n            ] = resp;\n\n            setCeusoneFaucet({\n                claimable,\n                minAmountToClaim,\n                minAmountFastpass,\n                stats,\n                paused\n            });\n        });\n\n        const calls2 = [\n            srgone_faucet_contract.methods.getClaimableAmount().call,\n            srgone_faucet_contract.methods.getMinAmountToClaim().call,\n            srgone_faucet_contract.methods.getMinAmountForFastpass().call,\n            srgone_faucet_contract.methods.getStatsByAddress(wallet.address).call,\n            srgone_faucet_contract.methods.getClaimPaused().call,\n        ]\n\n        makeBatchRequest(web3BNB, calls2).then(resp => {\n\n            const [\n                claimable,\n                minAmountToClaim,\n                minAmountFastpass,\n                stats,\n                paused\n            ] = resp;\n\n            setSrgoneFaucet({\n                claimable,\n                minAmountToClaim,\n                minAmountFastpass,\n                stats,\n                paused\n            });\n        });\n\n        const calls3 = [\n            srgone_super_faucet_contract.methods.getClaimableAmount().call,\n            srgone_super_faucet_contract.methods.getMinAmountToClaim().call,\n            srgone_super_faucet_contract.methods.getMinAmountForFastpass().call,\n            srgone_super_faucet_contract.methods.getStatsByAddress(wallet.address).call,\n            srgone_super_faucet_contract.methods.getClaimPaused().call,\n        ]\n\n        makeBatchRequest(web3BNB, calls3).then(resp => {\n\n            const [\n                claimable,\n                minAmountToClaim,\n                minAmountFastpass,\n                stats,\n                paused\n            ] = resp;\n\n            setSrgoneSuperFaucet({\n                claimable,\n                minAmountToClaim,\n                minAmountFastpass,\n                stats,\n                paused\n            });\n        });\n    }\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 30000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n\n    return <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n        <Grid item xs={12}>\n            <Paper>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={`https://coineus.app/assets/tokens/fuse/${LIT_ADDRESS}/logo.png`} />\n                        <span className={clsx(classes.networkChip, 'fuse')}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(wallet.balances.fuse[LIT_ADDRESS])}\n                        secondary={`Balance`}\n                    />\n                    <ListItemAvatar>\n                        <Avatar src={`https://coineus.app/assets/tokens/bnb/${LITBNB_ADDRESS}/logo.png`} />\n                        <span className={clsx(classes.networkChip, 'bnb')}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(wallet.balances.bnb[LITBNB_ADDRESS])}\n                        secondary={`Balance`}\n                    />\n                </ListItem>\n            </Paper>\n            <Divider style={{marginTop: 10}}>Faucets</Divider>\n        </Grid>\n\n\n        <FacuetDetails\n            faucet={CEUSONE_FAUCET_ADDRESS}\n            network=\"fuse\"\n            tokenSymbol=\"CEUSONE\"\n            tokenDecimals={18}\n            tokenContract={CEUSONE_ADDRESS}\n            details={ceusoneFaucet}\n            litAddress={LIT_ADDRESS}\n            link=\"ceusone\"\n        />\n\n        <FacuetDetails\n            faucet={SRGONE_FAUCET_ADDRESS}\n            network=\"bnb\"\n            tokenSymbol=\"SRGONE\"\n            tokenDecimals={9}\n            tokenContract={SRGONE_ADDRESS}\n            details={srgoneFaucet}\n            litAddress={LITBNB_ADDRESS}\n            link=\"srgone\"\n        />\n\n        <FacuetDetails\n            faucet={SRGONE_SUPER_FAUCET_ADDRESS}\n            network=\"bnb\"\n            tokenSymbol=\"SRGONE\"\n            tokenDecimals={9}\n            tokenContract={SRGONE_ADDRESS}\n            details={srgoneSuperFaucet}\n            litAddress={LITBNB_ADDRESS}\n            link=\"srgonesuper\"\n        />\n\n\n    </Grid>\n}\n\n\n\nfunction FacuetDetails(props) {\n\n    const classes = useStyles();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {faucet, network, tokenSymbol, tokenDecimals, tokenContract, details, litAddress, link} = props;\n\n    const [pending, setPending] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, faucet);\n\n            contract.methods\n                .claim()\n                .send({\n                    from: wallet.address,\n                    gasPrice: 10000000000\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    setPending(false);\n                });\n        }\n    }\n\n    //update disabled status\n    useEffect(() => {\n\n        if (!wallet.address) {\n            setDisabled(true)\n            return;\n        }\n\n        if (CHAIN_IDS_TO_NAMES[wallet.chain] !== network) {\n            setDisabled(true)\n            return;\n        }\n\n        if (details.paused) {\n            setDisabled(true);\n            return;\n        }\n\n        if (wallet.balances[network][litAddress] <\n            formatWeiToNumber(details.minAmountToClaim, tokenDecimals)) {\n\n            setDisabled(true);\n            return;\n        }\n\n        const now = (new Date()).getTime();\n        if (details && details.stats && details.stats.timeCanClaim > parseInt(now / 1000)) {\n            setDisabled(true);\n            return true;\n        }\n\n        setDisabled(false);\n\n    }, [details])\n\n\n\n    const [claimTime, setClaimTime] = useState(null);\n    useEffect(() => {\n\n        if(!details.stats)return;\n\n        setClaimTime(timeToNextClaim(details.stats.timeCanClaim));\n        const interval = setInterval(() => {\n            setClaimTime(timeToNextClaim(details.stats.timeCanClaim));\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [details])\n\n    return <Grid item xs={12}>\n        <Paper>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={`https://coineus.app/assets/tokens/${network}/${tokenContract}/logo.png`} />\n                        <span className={clsx(classes.networkChip, network)}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(formatWeiToNumber(details.claimable, tokenDecimals))}\n                        secondary={`${tokenSymbol} Claimable`}\n                    />\n                    <ListItemSecondaryAction>\n\n                        {\n                            claimTime === 0 ?\n                                <IconButton onClick={claim} disabled={disabled} color=\"primary\">\n                                    <PaidIcon/>\n                                </IconButton>\n                                :\n                                <Typography>{claimTime}</Typography>\n                        }\n\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={`https://coineus.app/assets/tokens/${network}/${litAddress}/logo.png`} />\n                        <span className={clsx(classes.networkChip, network)}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={CoineusCryptoFormat(formatWeiToNumber(details.minAmountToClaim, tokenDecimals))}\n                        secondary={`Hold to claim`}\n                    />\n                    <ListItemText\n                        primary={CoineusCryptoFormat(formatWeiToNumber(details.minAmountFastpass, tokenDecimals))}\n                        secondary={`Hold for Fastpass`}\n                    />\n                </ListItem>\n                <ListItem>\n                    <Button variant=\"contained\" fullWidth to={`/faucet/${link}`} component={RouterLink}>View</Button>\n                </ListItem>\n            </List>\n        </Paper>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Grid>\n}\n\n\n\nfunction timeToNextClaim(d) {\n\n    // time to claim is less than current\n    if(d*1000 > (new Date()).getTime()){\n        return msToHMS(parseInt(d*1000) - (new Date()).getTime());\n    }\n\n    return 0;\n\n}\n\nfunction msToHMS(ms) {\n    let h = ms / 3.6e6 | 0;\n    let m = (ms % 3.6e6) / 6e4 | 0;\n    let s = (ms % 6e4) / 1e3 | 0;\n    return `${h}:${('' + m).padStart(2, '0')}:${('' + s).padStart(2, '0')}`;\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    Container,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton,\n    Link,\n    List,\n    ListItem,\n    ListItemText,\n    ListSubheader,\n    ThemeProvider,\n    Toolbar,\n    Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router, Routes, Route, Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet, updateWalletAddress, updateWalletChain, updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusPortfolio from \"./views/CoineusPortfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\nimport EasyBridge from \"./views/EasyBridge\";\nimport Admin from \"./views/Admin\";\nimport Swap from \"./views/Swap\";\nimport Validator from \"./views/validators/Validator\";\nimport VoltageLiquidity from \"./views/VoltageLiquidity\";\nimport CEUSONEFaucet from \"./views/Faucets/CEUSONEFacuet\";\nimport SRGONEFaucet from \"./views/Faucets/SRGONEFaucet\";\nimport SRGONESuperFaucet from \"./views/Faucets/SRGONESuperFaucet\";\nimport ChainSelector from \"./components/ChainSelector\";\nimport Farm from \"./views/Farm\";\nimport CHADBNBStaking from \"./views/CHADBNBStaking\";\nimport CHADBNBStakingOLD from \"./views/CHADBNBStaking_old\";\nimport Faucets from \"./views/Faucets/Faucets\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(() => getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (<ThemeProvider theme={theme}>\n        <CssBaseline/>\n        <Router>\n            <AppBar enableColorOnDark>\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => setMenuOpen(true)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n\n                    <RouterLink\n                        to={`/`}\n                        style={{textDecoration: 'none', display: 'flex'}}\n                    >\n                        <Avatar src={logo} height={40}/>\n                    </RouterLink>\n                    <Typography variant=\"h5\">Coineus</Typography>\n                    <div style={{flexGrow: 1}}/>\n                    <ChainSelector />\n                    {wallet.address ? <Button\n                        variant=\"outlined\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => {\n                            clearWallet();\n                        }}\n                        style={{marginLeft:10}}\n                    >0X...{wallet.address?.substr(-6)}</Button> : <Button\n                        variant=\"outlined\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => connectWallet()}>Connect</Button>}\n                </Toolbar>\n            </AppBar>\n            <Grid container style={{marginTop: 64}}>\n                <Grid item xs={12}>\n                    <Routes>\n\n                        <Route\n                            path={`/`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><HomePage/></Container>}\n                        />\n                        <Route\n                            path={`/staking`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><Staking/></Container>}\n                        />\n                        <Route\n                            path={`/portfolio`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><CoineusPortfolio/></Container>}\n                        />\n                        <Route\n                            path={`/stats`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><Stats/></Container>}\n                        />\n                        <Route\n                            path={`/easybridge`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><EasyBridge/></Container>}\n                        />\n                        <Route\n                            path={`/admin`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><Admin/></Container>}\n                        />\n                        <Route\n                            path={`/swap`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><Swap/></Container>}\n                        />\n\n                        <Route\n                            path={`/fuse-validators`}\n                            exact={true}\n                            element={<Validator/>}\n                        />\n\n                        <Route\n                            path={`/voltage-liquidity`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><VoltageLiquidity/></Container>}\n                        />\n\n                        <Route\n                            path={`/faucet`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><Faucets /></Container>}\n                        />\n\n                        <Route\n                            path={`/faucet/ceusone`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><CEUSONEFaucet /></Container>}\n                        />\n\n                        <Route\n                            path={`/faucet/srgone`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><SRGONEFaucet /></Container>}\n                        />\n\n                        <Route\n                            path={`/faucet/srgonesuper`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><SRGONESuperFaucet /></Container>}\n                        />\n\n                        <Route\n                            path={`/farm`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><Farm /></Container>}\n                        />\n\n                        <Route\n                            path={`/staking/chad`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><CHADBNBStaking /></Container>}\n                        />\n                        <Route\n                            path={`/staking/chad2`}\n                            exact={true}\n                            element={<Container maxWidth=\"xs\"><CHADBNBStakingOLD /></Container>}\n                        />\n                    </Routes>\n                </Grid>\n            </Grid>\n\n            <Drawer\n                open={menuOpen}\n                onClose={() => setMenuOpen(false)}\n                PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n            >\n                <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                    <CloseIcon/>\n                </IconButton>\n                <List onClick={() => setMenuOpen(false)}>\n\n                    <ListSubheader>COINEUS.APP</ListSubheader>\n                    <ListItem button component={RouterLink} to={'/'}>\n                        <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/farm'}>\n                        <ListItemText primary=\"Farm\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/faucet'}>\n                        <ListItemText primary=\"Faucets\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/staking/chad'}>\n                        <ListItemText primary=\"CHAD Staking\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/swap'}>\n                        <ListItemText primary=\"Swap\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/stats'}>\n                        <ListItemText primary=\"Stats\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/staking'}>\n                        <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/easybridge'}>\n                        <ListItemText primary=\"Easy Bridge\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/portfolio'}>\n                        <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={RouterLink} to={'/voltage-liquidity'}>\n                        <ListItemText primary=\"My Voltage LP\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n\n                    {wallet.address === coineus_fund_address &&\n                        <ListItem button component={RouterLink} to={'/admin'}>\n                            <ListItemText primary=\"Admin\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                        </ListItem>}\n\n                    <ListSubheader>CEUS TOKEN</ListSubheader>\n                    <ListItem button component={Link}\n                              href={'https://explorer.fuse.io/token/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'}\n                              target=\"_blank\">\n                        <ListItemText primary=\"Contract\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link}\n                              href={'https://app.voltage.finance/#/swap?outputCurrency=0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'}\n                              target=\"_blank\">\n                        <ListItemText primary=\"Buy\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link}\n                              href={'https://dexscreener.com/fuse/0x3b46efdd411cc0db43f1be7853727e18cce8b85b'}\n                              target=\"_blank\">\n                        <ListItemText primary=\"Chart\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n\n                    <ListSubheader>FUSE NETWORK</ListSubheader>\n                    <ListItem button component={Link} href={'https://router.via.exchange/avalanche/AVAX/fuse/FUSE'}\n                              target=\"_blank\">\n                        <ListItemText primary=\"AVAX Bridge\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                        <ListItemText primary=\"ETH/BNB Bridge\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link} href={'https://voltage.finance/app'} target=\"_blank\">\n                        <ListItemText primary=\"Volt App\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n\n                    <ListSubheader>SOCIAL</ListSubheader>\n                    <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                        <ListItemText primary=\"Telegram\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                        <ListItemText primary=\"Twitter\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link} href={'https://discord.gg/FAsz89g5RT'} target=\"_blank\">\n                        <ListItemText primary=\"Discord\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link}\n                              href={'https://www.youtube.com/channel/UCehh09nIOF-2BJ6YyIq3-RQ'} target=\"_blank\">\n                        <ListItemText primary=\"YouTube\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link} href={'https://medium.com/@coineus'} target=\"_blank\">\n                        <ListItemText primary=\"Medium\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link} href={'https://github.com/CoineusCrypto/'} target=\"_blank\">\n                        <ListItemText primary=\"GitHub\" primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                    <ListItem button component={Link} href={'mailto:contact@coineus.app'} target=\"_blank\">\n                        <ListItemText primary=\"contact@coineus.app\"\n                                      primaryTypographyProps={{style: {fontWeight: 700}}}/>\n                    </ListItem>\n                </List>\n            </Drawer>\n        </Router>\n    </ThemeProvider>)\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    if(token_info.dexscreenerChain && token_info.dexscreenerPair) {\n                        calls.push(axios\n                            .get(`https://api.dexscreener.com/latest/dex/pairs/${token_info.dexscreenerChain}/${token_info.dexscreenerPair}`)\n                            .then(resp => {\n                                const {pair} = resp.data;\n                                if(pair){\n                                    token_info.pair = pair;\n                                }\n                            }));\n                    }\n\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}