{"version":3,"sources":["theme.js","images/logo.svg","utils/promisify.js","redux/slices/coineusSlice.js","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","redux/store.js","images/btc_logo.png","views/HomePage.js","utils/fuse_price.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","Coineus.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","balances","avax","fuse","bnb","eth","coineusInfo","fookInfo","fudInfo","hedgeInfo","prices","fusd","usdc","cns","fook","fud","feg","okinami","hedge","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","rpc","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","updateWalletFOOKInfo","updateWalletFUDInfo","updateWalletHEDGEInfo","updateBalances","contract_address","balance","resetWallet","updatePrices","price","actions","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetPairQuery","useGetTokenQuery","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","network","close","skip","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","item","xs","classes","getColorClass","ListItem","ListItemAvatar","Avatar","baseToken","chainId","className","clsx","ListItemText","secondary","symbol","fdv","priceUsd","priceNative","quoteToken","liquidity","usd","base","quote","paddingLeft","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","TokenListItem","useSelector","coineus","rewards","rewardsClaim","native","useState","setOpen","Paper","marginBottom","secondaryAction","inUSD","primaryTypographyProps","fontWeight","secondaryTypographyProps","allTime","pending","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","HomePage","dispatch","useDispatch","CoineusContractAddress","setPending","stakeOpen","setStakeOpen","totalD","setTotalD","btc","pollingInterval","useEffect","store","pair","getUserInfo","getCoineusInfo","interval","setInterval","clearInterval","Web3","Contract","coineus_abi","methods","getTotalDividendsDistributed","then","resp","td","getBalance","contract","fusd_contract","balanceOf","getAccountDividendsInfo","info","fusd_balance","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","callsAVAX","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","catch","console","log","web3BSC","callsBSC","web3ETH","callsETH","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","maxWidth","paddingBottom","HomePagePriceWidget","avatar","btc_logo","Link","to","component","RouterLink","textDecoration","variant","fullWidth","target","backgroundColor","toLocaleString","fontSize","href","Divider","IconButton","disabled","edge","PowerStake","onSubmit","onSuccess","onError","claim","DialogActions","consensus_abi","delegate","getPairPrices","getState","fusd_fuse","unipair_abi","cns_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","avax_price","inAVAX","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","eth_usdc_reserves","okinami_usdc_reserves","eth_price","coineusValidatorAddress","consensusAddress","consensusContract","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setAmount","setData","connectedContract","setConnectedContract","setAction","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","push","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","fuse_balance","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","estimateGas","gas","getGasPrice","gasPrice","encodeABI","txData","handleError","message","toString","LinearProgress","Math","floor","List","disablePadding","disableGutters","Tabs","onChange","ev","val","Tab","id","Box","FormControl","TextField","autoComplete","placeholder","InputProps","endAdornment","InputAdornment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","sx","bottom","Alert","elevation","icon","CoineusSales","CoineusSaleDetails","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","token","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","now","getTime","distance","days","hours","minutes","seconds","purchase","sendTransaction","Object","entries","Breadcrumbs","separator","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","avax_balance","RewardsLocker","fudContract","setFudContract","coineusContract","setCoineusContract","rewards_abi","coineus_contract","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","getRewards","coineus_fund_address","CoineusPortfolio","coineus_fud_locker","coineus_fund_fook_balance","coineus_fund_fook_dividends","Coineus","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","marginRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed461a71.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        coineusInfo: undefined,\n        fookInfo: undefined,\n        fudInfo: undefined,\n        hedgeInfo: undefined\n    },\n    prices: {\n        avax: undefined,\n        fuse: undefined,\n        bnb: undefined,\n        fusd: undefined,\n        usdc: undefined,\n        eth: undefined,\n        cns: undefined,\n        fook: undefined,\n        fud: undefined,\n        feg: undefined,\n        okinami: undefined,\n        hedge: undefined,\n\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    }\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        updateWalletFOOKInfo(state, action) {\n            state.wallet.fookInfo = action.payload\n        },\n\n        updateWalletFUDInfo(state, action) {\n            state.wallet.fudInfo = action.payload\n        },\n\n        updateWalletHEDGEInfo(state, action) {\n            state.wallet.hedgeInfo = action.payload\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n            state.wallet.fookInfo = undefined;\n            state.wallet.fudInfo = undefined;\n        },\n\n        updatePrices(state, action) {\n            state.prices[action.payload.name] = action.payload.price;\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateBalances,\n\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo,\n    updateWalletHEDGEInfo,\n\n    resetWallet,\n    updatePrices\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**16)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close} = props;\n\n    const {data, status} = useGetTokenQuery(contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <PairDetails data={data.pairs[0]}\n                                    network={network}\n                    />\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${data.baseToken.address}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={data.baseToken.name}\n                secondary={data.baseToken.symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 1000 &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        {\n            !native && <TokenInfoDialog contract_address={contract_address} network={network} open={open}\n                                        close={() => setOpen(false)}/>\n        }\n    </Paper>\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export default __webpack_public_path__ + \"static/media/btc_logo.95c4e708.png\";","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Container, Dialog,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Link,\n    Typography, Divider, IconButton, DialogContent, DialogActions\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\n\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {\n    updateBalances, updatePrices,\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo, updateWalletHEDGEInfo,\n} from \"../redux/slices/coineusSlice\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {useGetPairQuery} from \"../redux/services/dexscreener\";\nimport store from \"../redux/store\";\n\nimport btc_logo from '../images/btc_logo.png';\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\n\n    const [pending, setPending] = useState(false);\n\n    const [stakeOpen, setStakeOpen] = useState(false)\n\n    const [totalD, setTotalD] = useState(0);\n\n    const btc = useGetPairQuery({chain_id:'bsc',pair_address:'0xF45cd219aEF8618A92BAa7aD848364a158a24F33'}, {pollingInterval: 60000})\n\n    useEffect(()=>{\n        store.dispatch(updatePrices({\n            name: 'btc',\n            price: {\n                inUSD: btc.data?.pair.priceUsd,\n            }\n        }));\n    }, [btc.data])\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address]);\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n        });\n\n    }\n\n    const getUserInfo = () => {\n\n        //FUSE\n        const web3 = new Web3(rpc.fuse);\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            fusd_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                balance,\n                info,\n                fusd_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletCoineusInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: CoineusContractAddress,\n                balance: balance\n            }))\n\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n                balance: fusd_balance / (10 ** 18)\n            }))\n\n        })\n\n        //AVAX\n        const web3AVAX = new Web3(rpc.avax);\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const fook_contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const fud_contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n        const usdc_contract = new web3.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n        const wavax_contract = new web3.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n        const hedge_contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(wallet.address).call,\n            fook_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            wavax_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.getAccountDividendsInfo(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance,\n                fud_balance,\n                fud_info,\n                wavax_balance,\n                hedge_balance,\n                hedge_info,\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFOOKInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n                balance: balance\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n                balance: usdc_balance / (10 ** 6)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n                balance: wavax_balance / (10 ** 18)\n            }))\n\n            // FUD TOKEN\n            withdrawableDividends = fud_info[3];\n            totalDividends = fud_info[4];\n            secondsUntilAutoClaimAvailable = fud_info[7];\n\n            fud_balance = fud_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletFUDInfo({\n                balance: fud_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n                balance: fud_balance\n            }))\n\n            // HEDGE TOKEN\n            withdrawableDividends = hedge_info[3];\n            totalDividends = hedge_info[4];\n            secondsUntilAutoClaimAvailable = hedge_info[7];\n\n            hedge_balance = hedge_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletHEDGEInfo({\n                balance: hedge_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n                balance: hedge_balance\n            }))\n\n        })\n            .catch(console.log)\n\n        //BNB\n        const web3BSC = new Web3(rpc.bnb);\n        web3BSC.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n        const callsBSC = [\n            feg_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3BSC, callsBSC).then(resp => {\n            let [\n                balance,\n            ] = resp;\n\n            dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                balance: balance / (10 ** 9)\n            }))\n\n        })\n\n\n        //ETH\n        const web3ETH = new Web3(rpc.eth);\n        web3ETH.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n\n        const callsETH = [\n            okinami_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3ETH, callsETH).then(resp => {\n            let [\n                balance,\n            ] = resp;\n\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                balance: balance / (10 ** 9)\n            }))\n\n        })\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        // console.log(amount);return;\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    // console.log(toWei(amount), resp);return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .00000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserInfo();\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Projects for sale on Coineus.</Typography>*/}\n                {/*        <Link to=\"/sale\" component={RouterLink} underline=\"hover\">View List</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n\n                        <HomePagePriceWidget\n                            avatar=\"https://coineus.app/assets/tokens/fuse/0xc2E299b47398963c618De5b05C6BdeCd4cc64022/logo.png\"\n                            price={prices.cns?.inUSD}\n                        />\n\n                        <HomePagePriceWidget\n                            avatar=\"https://coineus.app/assets/tokens/fuse/logo.png\"\n                            price={prices.fuse?.inUSD}\n                        />\n\n                        <HomePagePriceWidget\n                            avatar={btc_logo}\n                            price={prices.btc?.inUSD}\n                        />\n\n                        <HomePagePriceWidget\n                            avatar=\"https://coineus.app/assets/tokens/eth/logo.png\"\n                            price={prices.eth?.inUSD}\n                        />\n\n                        <HomePagePriceWidget\n                            avatar=\"https://coineus.app/assets/tokens/bnb/logo.png\"\n                            price={prices.bnb?.inUSD}\n                        />\n\n                        <HomePagePriceWidget\n                            avatar=\"https://coineus.app/assets/tokens/avax/logo.png\"\n                            price={prices.avax?.inUSD}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12} textAlign=\"center\">\n                    <Link to={\"/portfolio\"} component={RouterLink} style={{textDecoration: 'none'}}>\n                        <Button variant=\"contained\" fullWidth\n                                target=\"_blank\">View Coineus Holdings</Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} fUSD` || '--'}\n                                secondary=\"Total Rewards Distributed All-time\"\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{textAlign: 'right', color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022\"\n                                    target=\"_blank\">Swap</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75\"\n                                    target=\"_blank\">Chart</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button variant=\"contained\" fullWidth href=\"https://app.voltage.finance/#/bridge\"\n                                    target=\"_blank\">Bridge</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Link to={\"/staking\"} component={RouterLink} style={{textDecoration: 'none'}}>\n                                <Button variant=\"contained\" fullWidth\n                                        target=\"_blank\">Stake</Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n\n                    <Divider>FUSE</Divider>\n\n                    {/*FUSE*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"fuse\"\n                        native\n                        name=\"FUSE\"\n                        price={prices.fuse}\n                        secondaryAction={\n                            <IconButton\n                                disabled={wallet.chain !== 122}\n                                edge=\"end\"\n                                aria-label=\"stake\"\n                                onClick={() => setStakeOpen(true)}\n                                color=\"primary\"\n                            >\n                                <BoltIcon />\n                            </IconButton>\n                        }\n                    />\n                    <PowerStake\n                        open={stakeOpen}\n                        amount={wallet.balances.fuse.native}\n                        close={() => setStakeOpen(false)}\n                        onSubmit={() => {\n                            setStakeOpen(false);\n                            setPending(true);\n                        }}\n                        onSuccess={() => {\n                            getUserInfo();\n                            setPending(false);\n                        }}\n                        onError={(err) => {\n                            setPending(false);\n                        }}\n                    />\n\n                    {/*fUSD*/}\n                    <TokenListItem\n                        contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                        name=\"fUSD\"\n                        network=\"fuse\"\n                        price={{inUSD: 1}}\n                    />\n\n                    {/*CNS*/}\n                    <TokenListItem\n                        contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                        name=\"CNS\"\n                        network=\"fuse\"\n                        price={prices.cns}\n                        rewards={{\n                            allTime: wallet.coineusInfo?.totalDividends,\n                            pending: wallet.coineusInfo?.withdrawableDividends,\n                            symbol: 'fUSD'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claim} variant='contained' fullWidth\n                                        disabled={wallet.chain !== 122 || wallet.coineusInfo?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    <Divider>AVAX</Divider>\n\n                    {/*AVAX*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"avax\"\n                        native\n                        name=\"AVAX\"\n                        price={prices.avax}\n                    />\n\n                    {/*WAVAX*/}\n                    <TokenListItem\n                        contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                        name=\"WAVAX\"\n                        network=\"avax\"\n                        price={prices.avax}\n                        secondaryAction={\n                            <IconButton\n                                disabled={\n                                    wallet.chain !== 43114 ||\n                                    wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                }\n                                edge=\"end\"\n                                onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                color=\"primary\"\n                            >\n                                <ChangeCircleIcon/>\n                            </IconButton>\n                        }\n                    />\n\n                    {/*USDC*/}\n                    <TokenListItem\n                        contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                        name=\"USDC\"\n                        network=\"avax\"\n                        price={{inUSD: 1}}\n                    />\n\n                    {/*FUD*/}\n                    <TokenListItem\n                        contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                        name=\"FUD\"\n                        network=\"avax\"\n                        price={prices.fud}\n                        rewards={{\n                            allTime: wallet.fudInfo?.totalDividends,\n                            pending: wallet.fudInfo?.withdrawableDividends,\n                            symbol: 'WAVAX'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFud} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fudInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    {/*FOOK*/}\n                    <TokenListItem\n                        contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                        name=\"FOOK\"\n                        network=\"avax\"\n                        price={prices.fook}\n                        rewards={{\n                            allTime: wallet.fookInfo?.totalDividends,\n                            pending: wallet.fookInfo?.withdrawableDividends,\n                            symbol: 'USDC'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFook} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fookInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    {/*HEDGE*/}\n                    <TokenListItem\n                        contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                        name=\"HEDGE\"\n                        network=\"avax\"\n                        price={prices.hedge}\n                        rewards={{\n                            allTime: wallet.hedgeInfo?.totalDividends,\n                            pending: wallet.hedgeInfo?.withdrawableDividends,\n                            symbol: 'FOOK'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimHedge} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.hedgeInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.hedgeInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.hedgeInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    <Divider>BNB</Divider>\n\n                    {/*BNB*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"bnb\"\n                        name=\"BNB\"\n                        native\n                        price={prices.bnb}\n                    />\n\n                    {/*FEG*/}\n                    <TokenListItem\n                        contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                        name=\"FEG\"\n                        network=\"bnb\"\n                        price={prices.feg}\n                    />\n\n                    <Divider>ETH</Divider>\n\n                    {/*ETH*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"eth\"\n                        name=\"ETH\"\n                        native\n                        price={prices.eth}\n                    />\n\n                    {/*ETH*/}\n                    <TokenListItem\n                        contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                        network=\"eth\"\n                        name=\"Okinami\"\n                        native\n                        price={prices.okinami}\n                    />\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\n\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, consensusAddress)\n\n        connectedContract.methods\n            .delegate(coineusValidatorAddress)\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1)\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{(amount - .1).toLocaleString('en-US', {maximumFractionDigits: 8})}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\n\nfunction HomePagePriceWidget(props) {\n\n    const {avatar, price} = props;\n\n    return <Grid item xs={6}>\n        <Paper>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar src={avatar}/>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={CoineusUSDFormat(price)}\n                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                />\n            </ListItem>\n        </Paper>\n    </Grid>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices, rpc} = _store.coineus;\n\n    //FUSE\n    const web3 = new Web3(rpc.fuse);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, prices.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, prices.CNSFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves\n            ] = resp\n\n            store.dispatch(updatePrices({\n                name: 'fuse',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fusd',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'cns',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n        });\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc.avax);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, prices.HEDGEAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            store.dispatch(updatePrices({\n                name: 'avax',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'usdc',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fook',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fud',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'hedge',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n        });\n\n\n    //BSC\n    const web3BSC = new Web3(rpc.bnb);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, prices.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, prices.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            store.dispatch(updatePrices({\n                name: 'bnb',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'feg',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n        });\n\n\n    //ETH\n    const web3ETH = new Web3(rpc.eth);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, prices.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, prices.OKINAMIUSDCPair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            store.dispatch(updatePrices({\n                name: 'eth',\n                price: {\n                    inUSD: eth_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'okinami',\n                price: {\n                    inUSD: okinami_usdc_reserves.reserve1/okinami_usdc_reserves.reserve0/2 * eth_price,\n                    inBNB: okinami_usdc_reserves.reserve1/okinami_usdc_reserves.reserve0/2\n                }\n            }));\n\n        })\n        .catch(console.log);\n}","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {updateBalances} from \"../redux/slices/coineusSlice\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const dispatch = useDispatch();\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n\n            web3.eth.getBalance(wallet.address).then(resp => {\n                dispatch(updateBalances({\n                    chain: 'fuse',\n                    contract_address: 'native',\n                    balance: resp / (10 ** 18)\n                }))\n            })\n        } else {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: 0\n            }))\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * prices.fuse?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * prices.fuse?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                            <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                        </Tabs>\n                        {\n                            action === \"stake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"FUSE Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > 5000000) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse.native - .1)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                                <List style={{marginTop: 20}}>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Block\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Year\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Box>\n                        }\n\n                        {\n                            action === \"unstake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Staked FUSE\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(data.staked_amount / (10 ** 18))\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                        onClick={withdraw}>Unstake</Button>\n                            </Box>\n                        }\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {Button, Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function RewardsLocker() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n\n    const [fudContract, setFudContract] = useState(undefined);\n    const [coineusContract, setCoineusContract] = useState(undefined);\n\n\n    useEffect(() => {\n\n        if (!wallet.address) return;\n\n        const web3AVAX = new Web3(window.provider);\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        setFudContract(fud_contract);\n        setCoineusContract(coineus_contract);\n\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n    }, [wallet.address]);\n\n    const claim = (contract) => {\n        contract.methods.getRewards()\n            .send({from:wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.fud_claimer && <Button variant=\"contained\" fullWidth style={{marginTop: 20}} onClick={()=>claim(fudContract)}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">Coineus Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.coineus_claimer && <Button variant=\"contained\" fullWidth style={{marginTop: 20}} onClick={()=>claim(coineusContract)}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Button,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function CoineusPortfolio() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n\n        if (!wallet.address) return;\n\n        const web3AVAX = new Web3(window.provider);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4]/(10**6)\n            })\n\n        });\n\n    }, [wallet.address]);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD Token\"\n                                secondary=\"Rewards Locker\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" AVAX\"}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK Token\"\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import {AppBar, Avatar, Button, CssBaseline, Grid, ThemeProvider, Toolbar} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if(window.ethereum){\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return ()=> clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none'}}\n                        >\n                            <Avatar src={logo} height={40} />\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {clearWallet();}}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales />}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails />}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker />}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n\n    const size ={ width: 16, height: 16 }\n    const style = {marginRight: 10}\n    switch (id) {\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style} />\n        default:\n            return ''\n    }\n\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}