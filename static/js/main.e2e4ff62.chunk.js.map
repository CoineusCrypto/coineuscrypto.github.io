{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","images/new_listings/dgnx.jpeg","images/new_listings/fud.jpeg","images/new_listings/fook.jpeg","images/new_listings/burnit.jpeg","images/new_listings/hedgefund.jpeg","images/new_listings/volt.jpeg","images/new_listings/okinami.jpeg","images/new_listings/feg_bsc.jpeg","images/new_listings/feg_eth.jpeg","components/AdScroll.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","views/EasyBridge.js","views/CNSONEFaucet.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","map","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","undefined","balances","Paper","marginBottom","secondaryAction","inUSD","staked","paddingTop","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","tokens","list","setList","useEffect","tmp","Object","entries","chain","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","variant","sx","fontSize","token","marginRight","initialState","address","type","info","avax","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","FSBFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BRNAVAXpair","DGNXAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","req","request","err","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","contract","Contract","coineus_abi","cnsone_contract","coineusone_abi","fusd_contract","volt_contract","fsb_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","getBalance","methods","balanceOf","getAccountDividendsInfo","getAccount","delegatedAmount","fuse_balance","cns_balance","cnsone_balance","cnsone_info","fusd_balance","volt_balance","staked_fuse_with_coineus","fsb_balance","dispatch","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","account","getFUSE","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","burnit_contract","dgnx_contract","burnit_dividends_contract","dividend_distributor_abi","callsAVAX","getUnpaidEarnings","shares","shareholderClaims","minPeriod","avax_balance","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","burnit_balance","dgnx_balance","burnit_unpaid","burnit_shares","burnit_shareHolderClaims","burnit_minPeriod","timeToClaim","parseInt","Date","getTime","catch","console","log","getAVAX","web3BSC","feg_contract","callsBSC","bnb_balance","getBNB","web3ETH","okinami_contract","feg_eth_contract","callsETH","eth_balance","okinami_balance","feg_eth_balance","getETH","AdScroll","burnit_logo","dgnx_logo","volt_logo","fud_logo","hedgefund_logo","fook_logo","okinami_logo","feg_eth","feg_bsc","image","HomePage","setPending","stakeOpen","setStakeOpen","chainTab","setChainTab","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","paddingBottom","Tabs","onChange","ev","val","Tab","IconButton","disabled","edge","PowerStake","onSubmit","onSuccess","onError","claim","gasPrice","fullWidth","coineusInfo","CoineusOne","claimDividend","DialogActions","delegate","setAmount","setAction","deposit","coineus_contract","Box","padding","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","getPairPrices","fusd_fuse","unipair_abi","cns_fuse","volt_fuse","fsb_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","volt_fuse_reserves","fsb_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","burnit_avax","dgnx_avax","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","burnit_avax_reserves","dgnx_avax_reserves","avax_price","inAVAX","brn0","brn1","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","oki0","oki1","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setData","connectedContract","setConnectedContract","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","LinearProgress","backgroundColor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","bottom","Alert","elevation","icon","CoineusSales","border","component","RouterLink","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","chain_symbol","toUpperCase","getUserInfo","now","distance","days","Math","floor","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","COINEUS_FUND_ADDRESS","RewardsLocker","dataFUSE","setDataFUSE","rewards_abi","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","web3FUSE","erc20_abi","coineusone_contract","callsFUSE","_address","fusd_balance_coineusone","getRewards","claimRandomToken","rCNSONEToEveryone","utils","toBN","coineus_fund_address","assurance_fund_address","coineus_validator_address","CoineusPortfolio","fuseData","setFuseData","callsF","coineus_fund_balance","assurance_fund_balance","coineus_fund_staked","assurance_fund_staked","coineus_fud_locker","hedge_fund_contract","coineus_avax_balance","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_hedge_fund_balance","coineus_fund_hedge_fund_dividends","coineus_fund_usdc_balance","coineus_fund_burnit_balance","coineus_fund_burnit_shares","coineus_fund_dgnx_balance","coineus_fund_burnit_dividends","totalValue","Divider","xyplot","BurnSupply","burnt","supply","percent","faucet","fund","divider","PI","aSupply","aStaked","burntValue","percentStaked","aFaucet","aFund","aLiquidity","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","StatListItem","Shower","Whatshot","Savings","AccountBalance","SwapHorizontalCircle","Autorenew","ListItemIcon","CoineusContractAddress","Stats","totalD","setTotalD","totalStaked","setTotalStaked","totalBurnt","setTotalBurnt","setFacuet","validatorBal","setValidatorBal","fundBalance","setFundBalance","holders","setHolders","cnsoneHolders","setCnsoneHolders","cnsoneRewards","setCnsoneRewards","pollingInterval","axios","get","result","getCoineusInfo","getTotalDividendsDistributed","totalSupply","totalFees","td","validator_cnsone","faucet_cnsone","fund_cns","cnsone_rewards","EasyBridge","reserves","setReserves","fuseOut","setFuseOut","amtRecieved","setAmtRecieved","txHash","setTxHash","txCost","setTxCost","router_abi","uni_abi","inputProps","startAdornment","hexToNumberString","logs","gasUsed","effectiveGasPrice","textDecorationColor","href","FAUCET_ADDRESS","CNSONEFaucet","faucetData","setFaucetData","userFaucetData","setUserFaucetData","setDisabled","disabledReason","setDisabledReason","faucet_contract","faucet_abi","getClaimPaused","getClaimableAmount","getMinAmountToClaim","getStats","getLockedAmount","paused","claimable","minBalance","stats","minToClaim","lockedAmount","getStatsByAddress","timeCanClaim","toLocaleString","severity","claimedAllTime","numberOfClaimsAllTime","averageClaim","highestClaimed","highestClaimedBy","lowestClaimed","lowestClaimedBy","Coineus","getDexScreener","tokenList","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2e4ff62.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: '#00FB4D'\n    }\n}));\n\nexport default function PriceScroll() {\n\n    const classes = useStyles();\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                switch(symbol){\n                    case 'USDC':\n                    case 'fUSD':\n                    case 'WAVAX':\n                    case 'CNSONE':\n                        return[contract_address, token_info];\n                    default:\n                        break;\n                }\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n            return a.priceChange < b.priceChange ? 1 : -1\n        })\n\n        setList(tmp);\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={token.chain+\"_\"+token.contract_address}>\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}/>\n                                {token.contract_address !== 'native' && <span className={clsx(classes.networkChip, token.chain)}/>}\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                            />\n                        </ListItem>\n                        <Typography\n                            className={getColorClass(token.priceChange)}\n                            variant=\"h5\"\n                            fontWeight={700}\n                            textAlign='right'\n                            style={{\n                                marginRight: 20\n                        }}>{token.priceChange}%</Typography>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n    const cnsone_contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n    const fsb_contract = new web3.eth.Contract(coineus_abi, '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31');\n\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        contract.methods.balanceOf(wallet_address).call,\n        contract.methods.getAccountDividendsInfo(wallet_address).call,\n        cnsone_contract.methods.balanceOf(wallet_address).call,\n        cnsone_contract.methods.getAccount(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call,\n        fsb_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            cns_balance,\n            info,\n            cnsone_balance,\n            cnsone_info,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus,\n            fsb_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        cns_balance = cns_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            info: {\n                cns_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        //coineus one\n        const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = cnsone_info;\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",\n            info: {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            balance: cns_balance\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//fUSD\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",//CNSONE\n            balance: cnsone_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',//fsb\n            balance: fsb_balance / (10 ** 9)\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n    const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n    const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n    const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n    const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        fook_contract.methods.balanceOf(wallet_address).call,\n        fook_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        wavax_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        burnit_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n\n        burnit_dividends_contract.methods.getUnpaidEarnings(wallet_address).call,\n        burnit_dividends_contract.methods.shares(wallet_address).call,\n        burnit_dividends_contract.methods.shareholderClaims(wallet_address).call,\n        burnit_dividends_contract.methods.minPeriod().call,\n\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            balance,\n            info,\n            usdc_balance,\n            fud_balance,\n            fud_info,\n            wavax_balance,\n            hedge_balance,\n            hedge_info,\n            burnit_balance,\n            dgnx_balance,\n\n            burnit_unpaid,\n            burnit_shares,\n            burnit_shareHolderClaims,\n            burnit_minPeriod,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        balance = balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 6);\n        totalDividends = totalDividends / (10 ** 6);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n            balance: balance\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n            balance: wavax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n            balance: burnit_balance / (10 ** 9)\n        }))\n\n        let timeToClaim = (parseInt(burnit_shareHolderClaims) + parseInt(burnit_minPeriod)) - (new Date()).getTime()/1000;\n        if(timeToClaim < 0) timeToClaim = 0\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n            info: {\n                withdrawableDividends: burnit_unpaid / (10**6),\n                totalDividends: burnit_shares[2] / (10**6),\n                secondsUntilAutoClaimAvailable: timeToClaim\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        // FUD TOKEN\n        withdrawableDividends = fud_info[3];\n        totalDividends = fud_info[4];\n        secondsUntilAutoClaimAvailable = fud_info[7];\n\n        fud_balance = fud_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n            balance: fud_balance\n        }))\n\n        // HEDGE TOKEN\n        withdrawableDividends = hedge_info[3];\n        totalDividends = hedge_info[4];\n        secondsUntilAutoClaimAvailable = hedge_info[7];\n\n        hedge_balance = hedge_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n            balance: hedge_balance\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n            balance: balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n    const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        okinami_contract.methods.balanceOf(wallet_address).call,\n        feg_eth_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            okinami_balance,\n            feg_eth_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n            balance: okinami_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n            balance: feg_eth_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","export default __webpack_public_path__ + \"static/media/dgnx.ff6dbd33.jpeg\";","export default __webpack_public_path__ + \"static/media/fud.11bfe713.jpeg\";","export default __webpack_public_path__ + \"static/media/fook.ee14acb7.jpeg\";","export default __webpack_public_path__ + \"static/media/burnit.a2d805a9.jpeg\";","export default __webpack_public_path__ + \"static/media/hedgefund.e27d41b1.jpeg\";","export default __webpack_public_path__ + \"static/media/volt.5625fde2.jpeg\";","export default __webpack_public_path__ + \"static/media/okinami.5aeb0739.jpeg\";","export default __webpack_public_path__ + \"static/media/feg_bsc.d7a25d3e.jpeg\";","export default __webpack_public_path__ + \"static/media/feg_eth.64b61e30.jpeg\";","import {Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton} from \"@mui/material\";\n\nimport dgnx_logo from '../images/new_listings/dgnx.jpeg';\nimport fud_logo from '../images/new_listings/fud.jpeg';\nimport fook_logo from '../images/new_listings/fook.jpeg';\nimport burnit_logo from '../images/new_listings/burnit.jpeg';\nimport hedgefund_logo from '../images/new_listings/hedgefund.jpeg';\nimport volt_logo from '../images/new_listings/volt.jpeg';\nimport okinami_logo from '../images/new_listings/okinami.jpeg';\nimport feg_bsc from '../images/new_listings/feg_bsc.jpeg';\nimport feg_eth from '../images/new_listings/feg_eth.jpeg';\n\nexport default function AdScroll() {\n\n    const list = [\n        burnit_logo,\n        dgnx_logo,\n        volt_logo,\n        fud_logo,\n        hedgefund_logo,\n        fook_logo,\n        okinami_logo,\n        feg_eth,\n        feg_bsc\n    ];\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(image => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={image}>\n                        <div style={{\n                            height: 115,\n                            width: 230,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <img src={image} height={115} style={{borderRadius: 4}}/>\n                        </div>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport coineusone_abi from '../abis/coineusone_abi.json';\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nimport {useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\nimport AdScroll from \"../components/AdScroll\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimBurnit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n            contract.methods\n                .claimDividend()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount * 100))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .0000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserBalances(wallet.address);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <AdScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserBalances(wallet.address);\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n                            {/*CNS*/}\n                            <TokenListItem\n                                contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                                network=\"fuse\"\n                                name=\"CNS\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends,\n                                    symbol: 'fUSD'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claim} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*CNSONE*/}\n                            <TokenListItem\n                                contract_address=\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"\n                                network=\"fuse\"\n                                name=\"CNSONE\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                secondaryAction={<CoineusOne onSuccess={() => getUserBalances(wallet.address)}/>}\n                                cnsDetails={wallet.info.fuse?.[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                            />\n\n                            {/*FSB*/}\n                            <TokenListItem\n                                contract_address=\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"\n                                network=\"fuse\"\n                                name=\"FSB\"\n                                price={wallet.prices.fuse?.[\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"]}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                                wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                            />\n\n                            {/*WAVAX*/}\n                            <TokenListItem\n                                contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                                network=\"avax\"\n                                name=\"WAVAX\"\n                                price={wallet.prices.avax?.[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                        }\n                                        edge=\"end\"\n                                        onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                        color=\"primary\"\n                                    >\n                                        <ChangeCircleIcon/>\n                                    </IconButton>\n                                }\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*DGNX*/}\n                            <TokenListItem\n                                contract_address=\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"\n                                network=\"avax\"\n                                name=\"DGNX\"\n                                price={wallet.prices.avax?.[\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"]}\n                            />\n\n                            {/*FUD*/}\n                            <TokenListItem\n                                contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                                network=\"avax\"\n                                name=\"FUD\"\n                                price={wallet.prices.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends,\n                                    symbol: 'WAVAX'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFud} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*BRN*/}\n                            <TokenListItem\n                                contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                                network=\"avax\"\n                                name=\"BRN\"\n                                price={wallet.prices.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimBurnit} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*FOOK*/}\n                            <TokenListItem\n                                contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                                network=\"avax\"\n                                name=\"FOOK\"\n                                price={wallet.prices.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFook} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*HEDGE*/}\n                            <TokenListItem\n                                contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                                name=\"Hedge Fund\"\n                                network=\"avax\"\n                                price={wallet.prices.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends,\n                                    symbol: 'FOOK'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimHedge} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                                name=\"FEG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0x389999216860AB8E0175387A0c90E5c52522C945\"\n                                name=\"FEG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0x389999216860AB8E0175387A0c90E5c52522C945\"]}\n                            />\n\n                            {/*Okinami*/}\n                            <TokenListItem\n                                contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                                network=\"eth\"\n                                name=\"Okinami\"\n                                price={wallet.prices.eth?.[\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"]}\n                            />\n\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{CoineusCryptoFormat(amount - .1)}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\nfunction CoineusOne(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])} CNSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, pairs.CNSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n    const fsb_fuse = new web3.eth.Contract(unipair_abi, pairs.FSBFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call,\n        fsb_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves,\n                volt_fuse_reserves,\n                fsb_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CNS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xc2E299b47398963c618De5b05C6BdeCd4cc64022',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x7042807d547A2de0720421a6d2f629c9EB43E73D',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',\n                price: {\n                    inFuse: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1,\n                    inUSD: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1/(10**9) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.HEDGEAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BRNAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves,\n                burnit_avax_reserves,\n                dgnx_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //WAVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //FOOK\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //FUD\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //HEDGE FUND\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG BSC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const oki0 = okinami_usdc_reserves.reserve0 / (10**9)\n            const oki1 = okinami_usdc_reserves.reserve1 / (10**6)\n\n            //OKINAMI\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                price: {\n                    inUSD: oki1/oki0,\n                    inETH: oki1/oki0\n                }\n            }));\n\n            //FEG ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address && wallet.chain === 122) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address, wallet.chain]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{CoineusCryptoFormat(data.amount_delegated)} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Day\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat((_rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYear / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Day\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat((rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYear / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(data.staked_amount / (10 ** 18) || \"--\")} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport erc20_abi from \"../abis/IERC20.json\";\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst COINEUS_FUND_ADDRESS = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst FUD_FUND_ADDRESS = \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\";\n\nexport default function RewardsLocker() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [dataFUSE, setDataFUSE] = useState({});\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const getInfo = () => {\n        const web3AVAX = new Web3(rpc.avax);\n\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n\n        const web3FUSE = new Web3(rpc.fuse);\n\n        const fusd_contract = new web3FUSE.eth.Contract(erc20_abi, \"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\");\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        const callsFUSE = [\n            fusd_contract.methods.balanceOf(coineusone_contract._address).call\n        ]\n\n        makeBatchRequest(web3FUSE, callsFUSE).then(resp => {\n            let [\n                fusd_balance_coineusone\n            ] = resp;\n\n            setDataFUSE({\n                fusd_balance_coineusone\n            })\n\n        })\n    }\n\n    const claim = (contract) => {\n\n        const web3AVAX = new Web3(window.provider);\n\n        const _contract = new web3AVAX.eth.Contract(rewards_abi, contract);\n\n        _contract.methods.getRewards()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const claimFUSD = () => {\n\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.claimRandomToken(\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\")\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n\n    }\n\n    const rCNSONEToEveryone = () => {\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.rCNSONEToEveryone(web3FUSE.utils.toBN(amount * (10**18)))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    useEffect(getInfo, [wallet.address]);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {\n                wallet.address === FUD_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                                secondary=\"Claimed All-time\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        {\n                            data.fud_claimer &&\n                            <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}}\n                                    onClick={() => claim(\"0xb930131f9b73e229c1ae1cf67409e99336043dc2\")}>Claim</Button>\n                        }\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus Rewards Locker (FUD)</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                secondary=\"Claimed All-time\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        {\n                            data.coineus_claimer &&\n                            <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}}\n                                    onClick={() => claim(\"0x2873b157ba89812ddf297719b66585a3aa836599\")}>Claim</Button>\n                        }\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus ONE fUSD</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(dataFUSE.fusd_balance_coineusone)) + \" fUSD\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        <Button variant=\"contained\"\n                                disabled={wallet.chain !== 122} fullWidth style={{marginTop: 20}}\n                                onClick={claimFUSD}>Claim</Button>\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Reflect CNSONE</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n                        <Button fullWidth variant=\"contained\"\n                                disabled={!amount}\n                                onClick={rCNSONEToEveryone}>REFLECT CNSONE TO EVERYONE</Button>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container, Divider,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst assurance_fund_address = \"0x09501F8Ca9476d0c516E121FB4dCE4B7b2301d51\";\nconst coineus_validator_address = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function CoineusPortfolio() {\n\n    const classes = useStyles();\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    const [fuseData, setFuseData] = useState({});\n\n    useEffect(() => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n        const consensusContract = new web3FUSE.eth.Contract(consensus_abi, consensusAddress);\n\n        const callsF = [\n            web3FUSE.eth.getBalance(coineus_fund_address),\n            web3FUSE.eth.getBalance(assurance_fund_address),\n            consensusContract.methods.delegatedAmount(coineus_fund_address, coineus_validator_address).call,\n            consensusContract.methods.delegatedAmount(assurance_fund_address, coineus_validator_address).call,\n        ];\n\n        makeBatchRequest(web3FUSE, callsF).then(resp => {\n            let [\n                coineus_fund_balance,\n                assurance_fund_balance,\n                coineus_fund_staked,\n                assurance_fund_staked\n            ] = resp;\n\n            coineus_fund_balance = coineus_fund_balance / (10 ** 18);\n            assurance_fund_balance = assurance_fund_balance / (10 ** 18);\n            coineus_fund_staked = coineus_fund_staked / (10 ** 18);\n            assurance_fund_staked = assurance_fund_staked / (10 ** 18);\n\n            setFuseData(\n                {\n                    coineus_fund_balance,\n                    assurance_fund_balance,\n                    coineus_fund_staked,\n                    assurance_fund_staked\n                }\n            )\n        })\n\n\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const hedge_fund_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n\n        const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n        const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n        const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n        const calls = [\n            web3AVAX.eth.getBalance(coineus_fund_address),\n\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            hedge_fund_contract.methods.balanceOf(coineus_fund_address).call,\n            hedge_fund_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            usdc_contract.methods.balanceOf(coineus_fund_address).call,\n\n            burnit_contract.methods.balanceOf(coineus_fund_address).call,\n            burnit_dividends_contract.methods.shares(coineus_fund_address).call,\n\n            dgnx_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_avax_balance,\n\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends,\n\n                coineus_fund_usdc_balance,\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_shares,\n\n                coineus_fund_dgnx_balance\n\n            ] = resp;\n\n            setData({\n                coineus_avax_balance: coineus_avax_balance / (10**18),\n\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4] / (10 ** 6),\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends: coineus_fund_hedge_fund_dividends[4] / (10 ** 18),\n\n                coineus_fund_usdc_balance: coineus_fund_usdc_balance / (10 ** 6),\n\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_dividends: coineus_fund_burnit_shares[2] / (10**6),\n\n                coineus_fund_dgnx_balance\n            })\n\n        });\n\n    }, []);\n\n    const totalValue = (formatWeiToNumber(data.coineus_fund_hedge_fund_balance) * wallet.prices.avax?.['0xe387cF241B6685D405C575ce35db78ed4844B34a']?.inUSD) + //hedge fund\n        (formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD) + //fook\n        ((data.coineus_fund_burnit_balance / (10**9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD) + //burnit\n        (formatWeiToNumber(data.coineus_locked) * wallet.prices.avax?.['0x80363cc2CAa2545554d155031e47049ee2F98f33']?.inUSD) + // FUD\n        (\n            (\n                fuseData.coineus_fund_balance +\n                fuseData.coineus_fund_staked +\n                fuseData.assurance_fund_balance +\n                fuseData.assurance_fund_staked\n            ) * wallet.prices.fuse?.native?.inUSD\n        ) + //FUSE\n        data.coineus_fund_usdc_balance + //USDC\n        (data.coineus_avax_balance * wallet.prices.avax.native?.inUSD) + //AVAX\n        formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD //DGNX\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n            <Grid item xs={12}>\n                <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusUSDFormat(totalValue)}\n                            secondary=\"Total Fund Value\"\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Divider style={{marginBottom: 10}}>FUSE</Divider>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/logo.png\"/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUSE\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={\n                                    CoineusUSDFormat((\n                                        fuseData.coineus_fund_balance +\n                                        fuseData.coineus_fund_staked +\n                                        fuseData.assurance_fund_balance +\n                                        fuseData.assurance_fund_staked\n                                    ) * wallet.prices.fuse?.native?.inUSD)\n                                }\n                                secondary=\"USD Value\"\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_balance + fuseData.assurance_fund_balance) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Wallet\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_staked + fuseData.assurance_fund_staked) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Staked\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Divider style={{marginBottom: 10}}>AVAX</Divider>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/logo.png\"/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"AVAX\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(data.coineus_avax_balance * wallet.prices.avax.native?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_avax_balance) + \" AVAX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"USDC\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(data.coineus_fund_usdc_balance)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Rewards Locker\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_locked) * wallet.prices.avax?.['0x80363cc2CAa2545554d155031e47049ee2F98f33']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"DGNX\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance)) + \" DGNX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x9CcAd19669259C1FBF13FDa959400C871b3d0E00/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"BRN\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat((data.coineus_fund_burnit_balance / (10**9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_balance / (10**9))) + \" BRN\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_dividends)) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"Hedge Fund\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance) * wallet.prices.avax?.['0xe387cF241B6685D405C575ce35db78ed4844B34a']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance)) + \" Hedge Fund\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_hedge_fund_dividends) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Savings, Shower, AccountBalance, Bolt, SwapHorizontalCircle} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, staked, faucet, fund, liquidity} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aSupply= 360 * percent * (Math.PI / 180);\n\n    const percent2 = staked ? (staked - burnt) / supply : 0;\n    const aStaked = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = staked ? ((staked / supply) * 100).toFixed(2) : 0;\n\n    const percent3 = faucet / supply;\n    const aFaucet = 360 * percent3 * (Math.PI / 180);\n\n    const percent4 = fund / supply;\n    const aFund = 360 * percent4 * (Math.PI / 180);\n\n    const percent5 = liquidity / supply;\n    const aLiquidity = 360 * percent5 * (Math.PI / 180);\n\n    const colors = {\n        label: '#fff',\n        supply: '#fbca00',\n        burned: '#fa5700',\n        staked: '#ff0000',\n        faucet: '#1c6fe0',\n        fund: '#019f17',\n        liquidity: '#a100ff',\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: aSupply+ aStaked + aFaucet + aFund + aLiquidity + (divider*6),\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: divider,\n                            angle: aFaucet + divider,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.faucet,\n                        },\n                        {\n                            angle0: aFaucet + (divider*2),\n                            angle: aSupply+ aFaucet + (divider*2),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                        {\n                            angle0: aSupply+ aFaucet + (divider*3),\n                            angle: aSupply+ aStaked + aFaucet + (divider*3),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: aSupply+ aStaked + aFaucet + (divider*4),\n                            angle: aSupply+ aStaked + aFaucet + aFund + (divider*4),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.fund,\n                        },\n                        {\n                            angle0: aSupply+ aStaked + aFaucet + aFund + (divider*5),\n                            angle: aSupply+ aStaked + aFaucet + aFund + aLiquidity + (divider*5),\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.liquidity,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -125,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            {staked !== 0 && <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -180,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {percentStaked}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % CNSONE\n        </span>\n            </Typography>}\n\n            <StatListItem icon={<Bolt style={{color:colors.label}}/>} color={colors.label} value={supply} label=\"TOTAL SUPPLY\" />\n            <StatListItem icon={<Shower style={{color:colors.faucet}}/>} color={colors.faucet} value={faucet} label=\"FAUCET\" />\n            <StatListItem icon={<Whatshot style={{color:colors.burned}}/>} color={colors.burned} value={burnt} label=\"BURNED\" />\n            <StatListItem icon={<Savings style={{color:colors.staked}}/>} color={colors.staked} value={staked} label=\"COINEUS ONE\" />\n            <StatListItem icon={<AccountBalance style={{color:colors.fund}}/>} color={colors.fund} value={fund} label=\"FUND\" />\n            <StatListItem icon={<SwapHorizontalCircle style={{color:colors.liquidity}}/>} color={colors.liquidity} value={liquidity} label=\"LIQUIDITY\" />\n            <StatListItem icon={<Autorenew style={{color:colors.supply}}/>} color={colors.supply} value={supply - staked - burnt - faucet - fund - liquidity} label=\"CIRCULATING\" />\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight:700, style:{color}}}\n            secondaryTypographyProps={{fontSize: '.75rem',style:{color}}}\n        />\n    </ListItem>;\n}\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Divider, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport axios from \"axios\";\n\nconst CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\nconst VALIDATOR_ADDRESS = '0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2';\n\nexport default function Stats() {\n\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalStaked, setTotalStaked] = useState(0);\n    const [totalBurnt, setTotalBurnt] = useState(0);\n    const [faucet, setFacuet] = useState(0);\n    const [validatorBal, setValidatorBal] = useState(0);\n    const [fundBalance, setFundBalance] = useState(0);\n    const [holders, setHolders] = useState(0);\n    const [cnsoneHolders, setCnsoneHolders] = useState(0);\n    const [cnsoneRewards, setCnsoneRewards] = useState(0);\n\n    const {data} = useGetTokenQuery(CoineusContractAddress, {\n        pollingInterval: 60000\n    });\n\n    useEffect(() => {\n        axios\n            .get('https://explorer.fuse.io/api?module=token&action=getTokenHolders&contractaddress=0xc2E299b47398963c618De5b05C6BdeCd4cc64022&offset=10000')\n            .then(resp => {\n                setHolders(resp.data.result.length);\n            })\n        axios\n            .get('https://explorer.fuse.io/api?module=token&action=getTokenHolders&contractaddress=0x7042807d547A2de0720421a6d2f629c9EB43E73D&offset=10000')\n            .then(resp => {\n                setCnsoneHolders(resp.data.result.length);\n            })\n    }, [])\n\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call,\n            cnsone_contract.methods.totalSupply().call,\n            cnsone_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call,\n            cnsone_contract.methods.balanceOf(VALIDATOR_ADDRESS).call,\n            cnsone_contract.methods.balanceOf('0xb4e09d2d0eF6CeBdfFc1Ff027729cE567354D82E').call,\n            contract.methods.balanceOf('0xb80267eA7fa368374ee4d4Bf10044778232AdEFe').call,\n            cnsone_contract.methods.totalFees().call,\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td,\n                staked,\n                burnt,\n                validator_cnsone,\n                faucet_cnsone,\n                fund_cns,\n                cnsone_rewards\n            ] = resp;\n\n            setFacuet(faucet_cnsone / (10 ** 18))\n\n            setTotalD(td / (10 ** 18));\n\n            setTotalStaked(staked / (10 ** 18))\n            setTotalBurnt(burnt / (10 ** 18))\n\n            setValidatorBal(validator_cnsone / (10**18));\n\n            setFundBalance((parseInt(fund_cns)) / (10**18))\n\n            setCnsoneRewards(cnsone_rewards / (10**18))\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={2000000}\n                        burnt={totalBurnt}\n                        staked={totalStaked}\n                        percent={totalBurnt / 2000000}\n                        faucet={faucet}\n                        fund={fundBalance}\n                        liquidity={data?.pairs[0]?.liquidity.base}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider style={{marginBottom:10}}>Coineus</Divider>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(totalD)} fUSD` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={holders}\n                                secondary=\"Coineus Holders\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"Coineus (CNS)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Fuse (WFUSE)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider style={{marginBottom:10}}>Coineus One</Divider>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(cnsoneRewards)} CNSONE` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(validatorBal)}\n                                secondary=\"Coineus One to Distribute\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                            <ListItemText\n                                primary={10}\n                                secondary=\"Distribution Per Hour\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={cnsoneHolders}\n                                secondary=\"Coineus One Holders\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    Avatar,\n    Button,\n    Container, Divider,\n    FormControl,\n    Grid,\n    InputAdornment, Link,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from '../abis/IPancakeRouter.json';\nimport uni_abi from '../abis/IUniswapV2Pair.json';\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x6483f166b9e4310a165a55fea04f867499aded06';\nconst routerAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E';\nconst easyBridgeAddress = '0xf79fa369aF0FC52260Bef080A62Cb2501863cfF7';\n\nexport default function EasyBridge() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n    const [amount, setAmount] = useState(\"\");\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0])\n    const [fuseOut, setFuseOut] = useState(0);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getFuseAmt = () => {\n\n        if (!amount || !reserves[0] || !reserves[1]) {\n            setFuseOut(undefined)\n            return;\n        }\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toBN(amount * (10 ** 18)), reserves[1], reserves[0]).call((err, resp) => {\n            setFuseOut(resp / (10 ** 18) * .98);\n        })\n    }\n\n    useEffect(getFuseAmt, [amount, reserves]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const bridge = () => {\n\n        const web3 = new Web3(window.provider);\n\n        web3.eth\n            .sendTransaction({\n                    to: easyBridgeAddress,\n                    from: wallet.address,\n                    value: web3.utils.toBN(amount * (10 ** 18))\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.logs[10].data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <FormControl fullWidth>\n                        <TextField\n                            autoComplete=\"off\"\n                            type=\"number\"\n                            value={amount}\n                            placeholder=\"Enter Amount\"\n                            onChange={(ev) => {\n                                setAmount(ev.target.value)\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    style: {textAlign: \"right\"},\n                                },\n                                startAdornment: <Avatar style={{marginRight: 10}} sx={{width: 24, height: 24}}\n                                                        src={`https://coineus.app/assets/tokens/bnb/logo.png`}/>,\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <Button variant=\"contained\" onClick={() => {\n                                        setAmount(wallet.balances.bnb.native)\n                                    }\n                                    }>MAX</Button>\n                                </InputAdornment>,\n                            }}\n                        />\n                    </FormControl>\n                    <ListItem disablePadding style={{marginTop: 10}}>\n                        <ListItemAvatar>\n                            <Avatar style={{marginLeft: 15}} sx={{width: 24, height: 24}}\n                                    src={`https://coineus.app/assets/tokens/fuse/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(fuseOut)} FUSE`}\n                            secondary=\"Estimated Out\"\n                            primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                            secondaryTypographyProps={{textAlign: 'right'}}\n                        />\n                    </ListItem>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 10}}\n                        onClick={bridge}\n                        disabled={!wallet.address || wallet.chain !== 56 || amount > wallet.balances.bnb.native}\n                    >BRIDGE</Button>\n                </Paper>\n                <Divider style={{marginTop: 10}}>SMART CHAIN</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    network=\"bnb\"\n                    name=\"BNB\"\n                    native\n                    price={wallet.prices.bnb?.native}\n                    wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                />\n\n                <Divider style={{marginTop: 10}}>FUSE NETWORK</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                    network=\"fuse\"\n                    name=\"FUSE\"\n                    native\n                    price={wallet.prices.fuse?.native}\n                />\n\n                {\n                    amtRecieved !== undefined && <>\n                        <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                        <Paper\n                            style={{\n                                backgroundColor: 'white',\n                                color: \"#000\",\n                                padding: 20,\n                                fontFamily: 'monospace'\n                            }}>\n                            <Grid container>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>Bridged</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(amtRecieved)} FUSE`}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(txCost)} BNB`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={6}/>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusUSDFormat(txCost * wallet.prices.bnb?.native?.inUSD)} USD`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                        <Link\n                                            style={{color: \"#000\", textDecorationColor: '#000'}}\n                                            href={`https://bscscan.com/tx/${txHash}`}\n                                            target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}}>\n                                    <Typography style={{fontFamily: 'monospace'}}>FUSE Balance update pending...</Typography>\n                                </Grid>\n                            </Grid>\n\n                        </Paper>\n                    </>\n                }\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {Alert, Button, Container, Divider, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\n\nimport faucet_abi from '../abis/cnsone_faucet.json';\nimport {useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst FAUCET_ADDRESS = '0xb4e09d2d0eF6CeBdfFc1Ff027729cE567354D82E';\n\nexport default function CNSONEFaucet() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [faucetData, setFaucetData] = useState(undefined);\n    const [userFaucetData, setUserFaucetData] = useState(undefined);\n    const [disabled, setDisabled] = useState(false);\n    const [disabledReason, setDisabledReason] = useState(undefined);\n\n    const web3FUSE = new Web3(rpc.fuse);\n    const faucet_contract = new web3FUSE.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n    const getInfo = () => {\n        const calls = [\n            faucet_contract.methods.getClaimPaused().call,\n            faucet_contract.methods.getClaimableAmount().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getStats().call,\n            faucet_contract.methods.getMinAmountToClaim().call,\n            faucet_contract.methods.getLockedAmount().call\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [\n                paused,\n                claimable,\n                minBalance,\n                stats,\n                minToClaim,\n                lockedAmount\n            ] = resp;\n\n            setFaucetData({\n                paused,\n                claimable,\n                minBalance,\n                stats,\n                minToClaim,\n                lockedAmount\n            })\n\n        })\n    }\n\n    const getUserInfo = () => {\n\n        if (!wallet.address) {\n            return;\n        }\n\n        const calls = [\n            faucet_contract.methods.getStatsByAddress(wallet.address).call\n        ]\n\n        makeBatchRequest(web3FUSE, calls).then(resp => {\n            let [\n                stats\n            ] = resp;\n\n            setUserFaucetData({\n                stats\n            })\n\n        })\n    }\n\n    useEffect(()=> {\n\n        if(!wallet.address) {\n            setDisabled(true)\n            setDisabledReason(`Connect wallet to claim`)\n            return;\n        }\n\n        if(\n            faucetData &&\n            faucetData.paused) {\n\n            setDisabled(true);\n            setDisabledReason(`Claiming is paused`);\n            return;\n        }\n\n        if(\n            faucetData &&\n            wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] +\n            wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] <\n            (faucetData.minBalance / (10**18))) {\n\n            setDisabled(true);\n            setDisabledReason(`You need to hold at least ${(faucetData.minBalance / (10**18))} CNS/CNSONE to claim`);\n            return;\n        }\n\n        const now = (new Date()).getTime();\n        if(userFaucetData && userFaucetData.stats && userFaucetData.stats.timeCanClaim > parseInt(now/1000)) {\n            setDisabled(true);\n            setDisabledReason(`You can claim again at ${new Date(userFaucetData.stats.timeCanClaim * 1000).toLocaleString()}`);\n            return true;\n        }\n\n        setDisabled(false);\n        setDisabledReason(undefined);\n\n    }, [wallet.address, faucetData, userFaucetData])\n\n    useEffect(() => {\n        getInfo();\n        const interval = setInterval(getInfo, 5000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(getUserInfo, [wallet.address]);\n\n    const claim = () => {\n        if(wallet.address){\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(faucet_abi, FAUCET_ADDRESS);\n\n            contract.methods\n                .claim()\n                .send({\n                    from: wallet.address,\n                    gasPrice: 10000000000\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    getUserInfo();\n                    setPending(false);\n                });\n\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                {\n                    faucetData !== undefined && <Grid item xs={12}>\n                        <Grid item xs={12}>\n                            <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.claimable))} CNSONE` || '--'}\n                                        secondary={`Claimable Amount (≈${CoineusUSDFormat(formatWeiToNumber(faucetData.claimable) * wallet.prices.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022']?.inUSD)})`}\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.75rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            {/*TODO disable button based on params*/}\n                            <Button\n                                variant=\"contained\"\n                                fullWidth\n                                style={{marginTop:20}}\n                                disabled={disabled}\n                                onClick={claim}\n                            >CLAIM</Button>\n                        </Grid>\n                    </Grid>\n                }\n\n                {\n                    disabled && <Grid item xs={12}>\n                        <Alert severity=\"error\" variant=\"filled\">{disabledReason}</Alert>\n                    </Grid>\n                }\n\n                {\n                    faucetData !== undefined && <Grid item xs={12}>\n                        <Divider style={{marginBottom: 10}}>OVERALL FAUCET STATS</Divider>\n                        <Paper>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.claimedAllTime))} CNSONE`}\n                                    secondary=\"Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusUSDFormat(formatWeiToNumber(faucetData.stats.claimedAllTime) * wallet.prices.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022']?.inUSD)}`}\n                                    secondary=\"Today's Value\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.numberOfClaimsAllTime}\n                                    secondary=\"Number of Claims\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.averageClaim))} CNSONE`}\n                                    secondary=\"Average Claimed\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.highestClaimed))} CNSONE`}\n                                    secondary=\"Highest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.highestClaimedBy}\n                                    secondary=\"Highest Amount Claimed By\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.stats.lowestClaimed))} CNSONE`}\n                                    secondary=\"Lowest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={faucetData.stats.lowestClaimedBy}\n                                    secondary=\"Lowest Amount Claimed By\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '.75rem'}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.minToClaim))} CNS/CNSONE`}\n                                    secondary=\"Need To Hold To Claim\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(faucetData.lockedAmount))} CNSONE`}\n                                    secondary=\"Amount Locked\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </Grid>\n                }\n\n                {\n                    userFaucetData !== undefined && <Grid item xs={12}>\n                        <Divider style={{marginBottom: 10}}>MY FAUCET STATS</Divider>\n                        <Paper>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime))} CNSONE`}\n                                    secondary=\"Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusUSDFormat(formatWeiToNumber(userFaucetData.stats.claimedAllTime)* wallet.prices.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022']?.inUSD)} CNSONE`}\n                                    secondary=\"Today's Value\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n\n                            </ListItem>\n                            <ListItem>\n                                <ListItemText\n                                    primary={userFaucetData.stats.numberOfClaimsAllTime}\n                                    secondary=\"Number of Claims\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.averageClaim))} CNSONE`}\n                                    secondary=\"Average Claimed\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.highestClaimed))} CNSONE`}\n                                    secondary=\"Highest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n\n                            <ListItem>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(formatWeiToNumber(userFaucetData.stats.lowestClaimed))} CNSONE`}\n                                    secondary=\"Lowest Amount Claimed All-Time\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    )\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\nimport EasyBridge from \"./views/EasyBridge\";\nimport CNSONEFaucet from \"./views/CNSONEFaucet\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                            <Route\n                                path={`/easybridge`}\n                                exact={true}\n                                element={<EasyBridge />}\n                            />\n                            <Route\n                                path={`/faucet`}\n                                exact={true}\n                                element={<CNSONEFaucet />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/faucet'}>\n                            <ListItemText primary=\"Faucet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/easybridge'}>\n                            <ListItemText primary=\"Easy Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        {/*<ListItem button component={RouterLink} to={'/sale'}>*/}\n                        {/*    <ListItemText primary=\"Projects For Sale\" primaryTypographyProps={{style:{fontWeight:700}}}/>*/}\n                        {/*</ListItem>*/}\n                        {\n                            [\"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\", \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\"].indexOf(wallet.address) > -1 && <ListItem button component={RouterLink} to={'/rewards'}>\n                                <ListItemText primary=\"Rewards Lockers\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                            </ListItem>\n                        }\n\n\n                        <ListSubheader>CNS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://explorer.fuse.io/token/0xc2E299b47398963c618De5b05C6BdeCd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>FUSE NETWORK</ListSubheader>\n                        <ListItem button component={Link} href={'https://router.via.exchange/avalanche/AVAX/fuse/FUSE'} target=\"_blank\">\n                            <ListItemText primary=\"AVAX Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"ETH/BNB Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://get.fuse.cash/mrxn/46qbc3i4'} target=\"_blank\">\n                            <ListItemText primary=\"fuse.cash\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/FAsz89g5RT'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.youtube.com/channel/UCehh09nIOF-2BJ6YyIq3-RQ'} target=\"_blank\">\n                            <ListItemText primary=\"YouTube\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://medium.com/@coineus'} target=\"_blank\">\n                            <ListItemText primary=\"Medium\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://github.com/CoineusCrypto/'} target=\"_blank\">\n                            <ListItemText primary=\"GitHub\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'mailto:contact@coineus.app'} target=\"_blank\">\n                            <ListItemText primary=\"contact@coineus.app\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}