{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","utils/index.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","views/EasyBridge.js","views/Admin.js","components/SwapInput.js","views/Swap.js","views/Lottery.js","views/LotteryGame.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","copyTextToClipboard","text","callback","navigator","clipboard","writeText","then","err","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","token_list","tokens","dexscreenerPair","undefined","p","map","pair","toLowerCase","pairAddress","findPair","Markets","item","xs","classes","useState","snackbarOpen","setSnackBarOpen","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","secondaryAction","IconButton","edge","primaryTypographyProps","fontSize","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","Snackbar","onClose","autoHideDuration","Alert","severity","sx","variant","getDexLabel","id","List","dexId","secondaryTypographyProps","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","detailsLabel","setOpen","balances","Paper","marginBottom","inUSD","staked","paddingTop","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","list","setList","useEffect","tmp","Object","entries","chain","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","token","visibility","paddingBottom","verticalAlign","marginRight","initialState","address","type","info","avax","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","resp","req","request","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","ceus_contract","Contract","coineus_abi","fusd_contract","volt_contract","fsb_contract","lit_contract","btc_contract","eth_contract","bnb_contract","wfuse_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","getBalance","methods","balanceOf","delegatedAmount","fuse_balance","ceus_balance","fusd_balance","volt_balance","staked_fuse_with_coineus","fsb_balance","lit_balance","btc_balance","eth_balance","bnb_balance","wfuse_balance","dispatch","getFUSE","web3AVAX","usdc_contract","dgnx_contract","callsAVAX","avax_balance","usdc_balance","dgnx_balance","catch","console","log","getAVAX","web3BSC","feg_contract","callsBSC","feg_balance","getBNB","web3ETH","bbks_contract","srg_contract","callsETH","bbks_balance","srg_balance","getETH","HomePage","setPending","stakeOpen","setStakeOpen","chainTab","setChainTab","Container","Tabs","onChange","ev","val","Tab","disabled","PowerStake","amount","onSubmit","onSuccess","onError","Divider","fullWidth","DialogActions","window","provider","delegate","send","from","gasPrice","once","tx","on","error","receipt","getPairPrices","fusd_fuse","unipair_abi","ceus_fuse","volt_fuse","fsb_fuse","eth_fuse","bnb_fusd","btc_fuse","getReserves","fusd_fuse_reserves","ceus_fuse_reserves","volt_fuse_reserves","fsb_fuse_reserves","eth_fuse_reserves","bnb_fusd_reserves","btc_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","dgnx_avax","usdc_avax_reserves","dgnx_avax_reserves","avax_price","inAVAX","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","srg_eth","srg_abi","bbk_eth","bbk_abi","feg_eth","calculatePrice","eth_usdc_reserves","srg_eth_price","bbk_srg_price","feg_eth_reserves","eth_price","inETH","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setAmount","setData","connectedContract","setConnectedContract","setAction","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","withdraw","padding","LinearProgress","backgroundColor","disablePadding","disableGutters","Box","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","anchorOrigin","vertical","horizontal","TransitionComponent","bottom","elevation","icon","CoineusSales","border","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","contract","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","getUserInfo","now","getTime","distance","days","Math","floor","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","component","RouterLink","underline","substr","toLocaleDateString","toLocaleTimeString","coineus_fund_address","assurance_fund_address","coineus_validator_address","CoineusPortfolio","fuseData","setFuseData","bnbData","setBnbData","web3FUSE","callsF","coineus_fund_balance","assurance_fund_balance","coineus_fund_staked","assurance_fund_staked","coineus_avax_balance","coineus_fund_dgnx_balance","web3BNB","coineus_bnb_balance","totalValue","TokenStatsSection","logo","usdValue","secondaryBalance","secondarySymbol","secondaryLabel","xyplot","BurnSupply","minted","supply","fund","divider","PI","aSupply","aBurned","aLiquidity","aFund","angles","supplyStart","supplyEnd","liquidityStart","liquidityEnd","fundStart","fundEnd","burnedStart","burnedEnd","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","StatListItem","Autorenew","Whatshot","SwapVerticalCircle","AccountBalance","ListItemIcon","totalSupply","Stats","setSupply","setLiquidity","setFund","ceus_supply","ceus_liquidity","ceus_fund","EasyBridge","reserves","setReserves","fuseOut","setFuseOut","amtRecieved","setAmtRecieved","txHash","setTxHash","txCost","setTxCost","router_abi","utils","toBN","uni_abi","inputProps","startAdornment","hexToNumberString","logs","gasUsed","effectiveGasPrice","textDecorationColor","href","Admin","ceus_abi","performBurn","SwapInput","max","borderColor","inputMode","autoCorrect","spellCheck","pattern","routerAddress","Swap","useTheme","amountIn","setAmountIn","amountOut","setAmountOut","swap","swapExactETHForTokens","events","raw","paper","startIcon","float","LOTTERY2_CONTRACT_FUSE1","LOTTERY2_CONTRACT_AVAX1","LOTTERY2_CONTRACT_BNB1","Lottery","displayUSD","setDisplayUSD","lottery2FUSE","setLottery2FUSE","lottery2AVAX","setLottery2AVAX","lottery2BNB","setLottery2BNB","getLottery2Info","getLottery2GameDetails","_rpc","lottery","lottery2_abi","ticketCost","adminFee","lotteryID","entriesAllowed","nextDraw","nextDrawInterval","totalFees","totalWinnings","jackpot","ToggleButtonGroup","exclusive","ToggleButton","LotteryGameInfo","cost","basePrice","customColor","customListItem","drawingTime","setDrawingTime","msToHMS","timeToNextDraw","interval1","textDecoration","d","ms","m","s","padStart","LotteryGame","players","previousWinner","previousJackpot","playerStats","wins","winnings","lottery2","setLottery2","getLotteryInfo","getPlayers","getStatsByAddress","getGameHistoryByLotteryID","parseInt","winner","enter","changeNetwork","chainID","ethereum","method","params","toHex","Fab","getOccurrence","checkChain","lotteryState","pickWinner","dense","player","array","filter","v","Coineus","getDexScreener","tokenList","dexscreenerChain","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","changeWeb3Modal","subscribeProvider","getAccounts","accounts","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.239a3987.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {\n    Alert,\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, IconButton, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText, Snackbar,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport {copyTextToClipboard} from \"../utils\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport millify from \"millify\";\nimport {useState} from \"react\";\n\nimport token_list from \"../utils/tokenList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    function findPair(pairs){\n\n        const pair_address = token_list.tokens[network][contract_address]?.dexscreenerPair || undefined;\n\n        if(pair_address){\n            let p = pairs[0];\n            pairs.map(pair => {\n                if(pair_address.toLowerCase() === pair.pairAddress.toLowerCase()){\n                    p = pair;\n                }\n            })\n            return p;\n        }\n\n        return pairs[0];\n    }\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={findPair(data.pairs)}\n                            network={network}\n                        />\n                        <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const [snackbarOpen, setSnackBarOpen] = useState(false);\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if (contract_address === 'native') {\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid container>\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar\n                        src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                    {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={name}\n                    secondary={symbol}\n                />\n            </ListItem>\n        </Grid>\n        {\n            contract_address !== 'native' && <Grid item xs={12}>\n                <ListItem\n                    secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"comments\" onClick={()=>copyTextToClipboard(contract_address, ()=>setSnackBarOpen(true))}>\n                            <ContentCopyIcon />\n                        </IconButton>\n                    }>\n                    <ListItemText\n                        primary={contract_address}\n                        secondary=\"Contract Address\"\n                        primaryTypographyProps={{fontSize: '.75rem'}}\n                    />\n                </ListItem>\n            </Grid>\n        }\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.fdv)}\n                    secondary=\"Fully Diluted Value\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.priceUsd)}\n                    secondary=\"Price in USD\"\n                />\n                <ListItemText\n                    primary={CoineusCryptoFormat(data.priceNative)}\n                    secondary={`Price in ${data.quoteToken.symbol}`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.liquidity.usd)}\n                    secondary=\"Liquidity\"\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.base)}\n                    secondary={data.baseToken.symbol}\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.quote)}\n                    secondary={data.quoteToken.symbol}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={data.priceChange.m5 + \"%\"}\n                    secondary=\"5 mins\"\n                    className={getColorClass(data.priceChange.m5)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h1 + \"%\"}\n                    secondary=\"1 hr\"\n                    className={getColorClass(data.priceChange.h1)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h6 + \"%\"}\n                    secondary=\"6 hrs\"\n                    className={getColorClass(data.priceChange.h6)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h24 + \"%\"}\n                    secondary=\"24 hrs\"\n                    className={getColorClass(data.priceChange.h24)}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.volume.m5)}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h1)}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h6)}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h24)}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n        </Grid>\n        <Snackbar\n            open={snackbarOpen}\n            onClose={()=>setSnackBarOpen(false)}\n            autoHideDuration={5000}\n        >\n            <Alert severity=\"success\" sx={{ width: '100%' }} variant=\"filled\">Contract Address copied to clipboard</Alert>\n        </Snackbar>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch (id) {\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span\n                                style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity?.usd || 0)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails, detailsLabel, secondaryAction} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} ${detailsLabel}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\n\n\nexport default function PriceScroll() {\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24 || 0,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n\n            if(a.priceChange < b.priceChange){\n                return 1;\n            }\n\n            if(a.priceChange > b.priceChange){\n                return -1;\n            }\n\n            return 0;\n        })\n\n        setList(tmp);\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? '#00FB4D' : 'red'\n    }\n\n    const getTrend = (priceChange) => {\n\n        if(priceChange > 0) {\n            return <><TrendingUpIcon style={{verticalAlign:'middle', marginRight: 5}}/>{`${priceChange}%`}</>\n        }\n\n        if(priceChange < 0) {\n            return <><TrendingDownIcon style={{verticalAlign: 'middle', marginRight: 5}}/>{`${priceChange}%`}</>\n        }\n\n        return <>{`${priceChange}%`}</>\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            marginTop: 10,\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(165px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 155, marginTop: 25}} key={token.chain+\"_\"+token.contract_address}>\n\n                        <img\n                            src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}\n                            style={{\n                                width: 50,\n                                borderRadius: '50%',\n                                marginTop: -25,\n                                marginLeft: 'calc(50% - 25px)'\n                            }}\n                        />\n\n                        <img\n                            src={`https://coineus.app/assets/tokens/${token.chain}/logo.png`}\n                            style={{\n                                width: 20,\n                                borderRadius: '50%',\n                                top: -25,\n                                marginLeft: 'calc(50% + 15px)',\n                                position: 'relative',\n                                visibility: token.contract_address === 'native' ? 'hidden' : 'visible'\n                            }}\n                        />\n\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain',\n                            paddingTop: 0,\n                            paddingBottom: 0,\n                            marginTop: -25\n                        }}>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700, variant: 'h5', textAlign: 'center'}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                                secondaryTypographyProps={{variant: 'body1', textAlign: 'center'}}\n                            />\n                        </ListItem>\n\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain',\n                            paddingTop: 0,\n                            paddingBottom: 0\n                        }}>\n                            <ListItemText\n                                primary={getTrend(token.priceChange)}\n                                primaryTypographyProps={{fontWeight: 700, variant: 'h6', textAlign: 'center', color: getColorClass(token.priceChange)}}\n                            />\n                        </ListItem>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const ceus_contract = new web3.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n    const fsb_contract = new web3.eth.Contract(coineus_abi, '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31');\n    const lit_contract = new web3.eth.Contract(coineus_abi, '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F');\n\n    const btc_contract = new web3.eth.Contract(coineus_abi, '0x33284f95ccb7B948d9D352e1439561CF83d8d00d');\n    const eth_contract = new web3.eth.Contract(coineus_abi, '0xa722c13135930332Eb3d749B2F0906559D2C5b99');\n    const bnb_contract = new web3.eth.Contract(coineus_abi, '0x6acb34b1Df86E254b544189Ec32Cf737e2482058');\n    const wfuse_contract = new web3.eth.Contract(coineus_abi, '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629');\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        ceus_contract.methods.balanceOf(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call,\n        fsb_contract.methods.balanceOf(wallet_address).call,\n        lit_contract.methods.balanceOf(wallet_address).call,\n\n        btc_contract.methods.balanceOf(wallet_address).call,\n        eth_contract.methods.balanceOf(wallet_address).call,\n        bnb_contract.methods.balanceOf(wallet_address).call,\n        wfuse_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            ceus_balance,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus,\n            fsb_balance,\n            lit_balance,\n\n            btc_balance,\n            eth_balance,\n            bnb_balance,\n            wfuse_balance,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        //ceus\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n            balance: ceus_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//volt\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',//fsb\n            balance: fsb_balance / (10 ** 9)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F',//lit\n            balance: lit_balance / (10 ** 18)\n        }));\n\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',//btc\n            balance: btc_balance / (10 ** 8)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',//eth\n            balance: eth_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',//bnb\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',//wfuse\n            balance: wfuse_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            usdc_balance,\n            dgnx_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            feg_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',//feg\n            balance: feg_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(coineus_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n    const feg_contract = new web3ETH.eth.Contract(coineus_abi, '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11');\n//0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n        feg_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            srg_balance,\n            feg_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',//feg\n            balance: feg_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\nDivider,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*FUSE*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserBalances(wallet.address);\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*CEUS*/}\n                            <TokenListItem\n                                contract_address=\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"\n                                network=\"fuse\"\n                                name=\"CEUS\"\n                                price={wallet.prices.fuse?.[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"]}\n                            />\n\n                            {/*LIT*/}\n                            <TokenListItem\n                                contract_address=\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"\n                                network=\"fuse\"\n                                name=\"LIT\"\n                                price={wallet.prices.fuse?.[\"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\"]}\n                            />\n\n                            {/*BTC*/}\n                            <TokenListItem\n                                contract_address=\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"\n                                network=\"fuse\"\n                                name=\"WBTC\"\n                                price={wallet.prices.fuse?.[\"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\"]}\n                            />\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"\n                                network=\"fuse\"\n                                name=\"WETH\"\n                                price={wallet.prices.fuse?.[\"0xa722c13135930332Eb3d749B2F0906559D2C5b99\"]}\n                            />\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"\n                                network=\"fuse\"\n                                name=\"WBNB\"\n                                price={wallet.prices.fuse?.[\"0x6acb34b1Df86E254b544189Ec32Cf737e2482058\"]}\n                            />\n\n                            {/*FSB*/}\n                            <TokenListItem\n                                contract_address=\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"\n                                network=\"fuse\"\n                                name=\"FSB\"\n                                price={wallet.prices.fuse?.[\"0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31\"]}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n\n                        <Divider>DEPRECATED</Divider>\n\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*DGNX*/}\n                            <TokenListItem\n                                contract_address=\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"\n                                network=\"avax\"\n                                name=\"DGNX\"\n                                price={wallet.prices.avax?.[\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"\n                                name=\"FEG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*BBKS*/}\n                            <TokenListItem\n                                contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                                name=\"BBKS\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"\n                                name=\"SRG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]}\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"\n                                name=\"FEG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11\"]}\n                            />\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{CoineusCryptoFormat(amount - .1)}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const ceus_fuse = new web3.eth.Contract(unipair_abi, pairs.CEUSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n    const fsb_fuse = new web3.eth.Contract(unipair_abi, pairs.FSBFUSEpair);\n    const eth_fuse = new web3.eth.Contract(unipair_abi, pairs.ETHFUSEPair);\n    const bnb_fusd = new web3.eth.Contract(unipair_abi, pairs.BNBfUSDPair);\n    const btc_fuse = new web3.eth.Contract(unipair_abi, pairs.BTCFUSEPair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        ceus_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call,\n        fsb_fuse.methods.getReserves().call,\n        eth_fuse.methods.getReserves().call,\n        bnb_fusd.methods.getReserves().call,\n        btc_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                ceus_fuse_reserves,\n                volt_fuse_reserves,\n                fsb_fuse_reserves,\n                eth_fuse_reserves,\n                bnb_fusd_reserves,\n                btc_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //WFUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CEUS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n                price: {\n                    inFuse: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1,\n                    inUSD: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //FSB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',\n                price: {\n                    inFuse: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1,\n                    inUSD: fsb_fuse_reserves.reserve0/fsb_fuse_reserves.reserve1/(10**9) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',\n                price: {\n                    inFuse: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1,\n                    inUSD: eth_fuse_reserves.reserve0/eth_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',\n                price: {\n                    inFuse: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1,\n                    inUSD: bnb_fusd_reserves.reserve0/bnb_fusd_reserves.reserve1\n                }\n            }));\n\n            //BTC\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',\n                price: {\n                    inFuse: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1,\n                    inUSD: btc_fuse_reserves.reserve0/btc_fuse_reserves.reserve1/(10**10) * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                dgnx_avax_reserves,\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.BNBFEGPair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',\n                price: {\n                    inUSD: (feg_bnb_reserves.reserve0/feg_bnb_reserves.reserve1) * bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.ETHFEGPair);\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: (srg_eth_price/(10**9)) * eth_price,\n                    inETH: (srg_eth_price/(10**9))\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price/(10**18)) * (srg_eth_price/(10**9)) * eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //FEG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',\n                price: {\n                    inUSD: (feg_eth_reserves.reserve1/feg_eth_reserves.reserve0) * eth_price,\n                    inETH: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address && wallet.chain === 122) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address, wallet.chain]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{CoineusCryptoFormat(data.amount_delegated)} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Day\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat((_rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYear / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Day\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat((rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYear / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(data.staked_amount / (10 ** 18) || \"--\")} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Container,\n    Grid,\n    Paper, Typography,\n} from \"@mui/material\";\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","import {\n    Avatar,\n    Container, Divider,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst assurance_fund_address = \"0x09501F8Ca9476d0c516E121FB4dCE4B7b2301d51\";\nconst coineus_validator_address = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function CoineusPortfolio() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    const [fuseData, setFuseData] = useState({});\n    const [bnbData, setBnbData] = useState({});\n\n    useEffect(() => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n        const consensusContract = new web3FUSE.eth.Contract(consensus_abi, consensusAddress);\n\n        const callsF = [\n            web3FUSE.eth.getBalance(coineus_fund_address),\n            web3FUSE.eth.getBalance(assurance_fund_address),\n            consensusContract.methods.delegatedAmount(coineus_fund_address, coineus_validator_address).call,\n            consensusContract.methods.delegatedAmount(assurance_fund_address, coineus_validator_address).call\n\n        ];\n\n        makeBatchRequest(web3FUSE, callsF).then(resp => {\n            let [\n                coineus_fund_balance,\n                assurance_fund_balance,\n                coineus_fund_staked,\n                assurance_fund_staked\n            ] = resp;\n\n            coineus_fund_balance = coineus_fund_balance / (10 ** 18);\n            assurance_fund_balance = assurance_fund_balance / (10 ** 18);\n            coineus_fund_staked = coineus_fund_staked / (10 ** 18);\n            assurance_fund_staked = assurance_fund_staked / (10 ** 18);\n\n            setFuseData(\n                {\n                    coineus_fund_balance,\n                    assurance_fund_balance,\n                    coineus_fund_staked,\n                    assurance_fund_staked\n                }\n            )\n        })\n\n        const web3AVAX = new Web3(rpc.avax);\n        const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n        const calls = [\n            web3AVAX.eth.getBalance(coineus_fund_address),\n            dgnx_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_avax_balance,\n                coineus_fund_dgnx_balance,\n            ] = resp;\n\n            setData({\n                coineus_avax_balance: coineus_avax_balance / (10 ** 18),\n                coineus_fund_dgnx_balance\n            })\n\n        });\n\n        const web3BNB = new Web3(rpc.bnb);\n\n        const callsBNB = [\n            web3BNB.eth.getBalance(coineus_fund_address),\n        ];\n\n        makeBatchRequest(web3BNB, callsBNB).then(resp => {\n            let [\n                coineus_bnb_balance,\n            ] = resp;\n\n            setBnbData({\n                coineus_bnb_balance: coineus_bnb_balance / (10 ** 18),\n            })\n\n        });\n\n    }, []);\n\n    const totalValue =\n        (\n            (\n                fuseData.coineus_fund_balance +\n                fuseData.coineus_fund_staked +\n                fuseData.assurance_fund_balance +\n                fuseData.assurance_fund_staked\n            ) * wallet.prices.fuse?.native?.inUSD\n        ) + //FUSE\n        (data.coineus_avax_balance * wallet.prices.avax.native?.inUSD) + //AVAX\n        formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD +//DGNX\n        bnbData.coineus_bnb_balance * wallet.prices.bnb.native?.inUSD // BNB\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusUSDFormat(totalValue)}\n                            secondary=\"Total Fund Value\"\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Divider>FUSE</Divider>\n            </Grid>\n\n            <TokenStatsSection data={{\n                symbol: \"FUSE\",\n                label: \"Fund Holdings\",\n                logo: \"https://coineus.app/assets/tokens/fuse/logo.png\",\n                usdValue: CoineusUSDFormat((\n                    fuseData.coineus_fund_balance +\n                    fuseData.coineus_fund_staked +\n                    fuseData.assurance_fund_balance +\n                    fuseData.assurance_fund_staked\n                ) * wallet.prices.fuse?.native?.inUSD),\n                balance: CoineusCryptoFormat(fuseData.coineus_fund_balance + fuseData.assurance_fund_balance),\n                secondaryBalance: CoineusCryptoFormat(fuseData.coineus_fund_staked + fuseData.assurance_fund_staked),\n                secondarySymbol: 'FUSE',\n                secondaryLabel: 'Staked',\n                network: 'fuse',\n                native: true\n            }}/>\n\n            <Grid item xs={12}>\n                <Divider>BNB</Divider>\n            </Grid>\n\n            <TokenStatsSection data={{\n                symbol: \"BNB\",\n                label: \"Fund Holdings\",\n                logo: \"https://coineus.app/assets/tokens/bnb/logo.png\",\n                usdValue: CoineusUSDFormat(bnbData.coineus_bnb_balance * wallet.prices.bnb.native?.inUSD),\n                balance: CoineusCryptoFormat(bnbData.coineus_bnb_balance),\n                network: 'bnb'\n            }}/>\n\n            <Grid item xs={12}>\n                <Divider>AVAX</Divider>\n            </Grid>\n\n            <TokenStatsSection data={{\n                symbol: \"AVAX\",\n                label: \"Fund Holdings\",\n                logo: \"https://coineus.app/assets/tokens/avax/logo.png\",\n                usdValue: CoineusUSDFormat(data.coineus_avax_balance * wallet.prices.avax.native?.inUSD),\n                balance: CoineusCryptoFormat(data.coineus_avax_balance),\n                network: 'avax',\n                native: true\n            }}/>\n\n            <TokenStatsSection data={{\n                symbol: \"DGNX\",\n                label: \"Fund Holdings\",\n                logo: \"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\",\n                usdValue: CoineusUSDFormat((data.coineus_fund_dgnx_balance / 10 ** 18) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD),\n                balance: CoineusCryptoFormat((data.coineus_fund_dgnx_balance / 10 ** 18)),\n                network: 'avax'\n            }}/>\n\n        </Grid>\n    </Container>\n}\n\nfunction TokenStatsSection(props) {\n\n    const classes = useStyles();\n\n    const {\n        native,\n        symbol,\n        label,\n        logo,\n        usdValue,\n        balance,\n        secondaryBalance,\n        secondarySymbol,\n        secondaryLabel,\n        network\n    } = props.data;\n\n    return <Grid item xs={12}>\n        <Paper>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={logo}/>\n                        {!native && <span className={clsx(classes.networkChip, network)}/>}\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={symbol}\n                        primaryTypographyProps={{fontWeight: 700}}\n                        secondary={label}\n                    />\n                    <ListItemText\n                        primary={usdValue}\n                        secondary=\"USD Value\"\n                        primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {\n                    balance !== undefined && <ListItem>\n                        <ListItemText\n                            primary={`${balance} ${symbol}`}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary=\"Wallet\"\n                        />\n                        {\n                            secondaryBalance !== undefined && <ListItemText\n                                primary={`${secondaryBalance} ${secondarySymbol}`}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={secondaryLabel}\n                            />\n                        }\n                    </ListItem>\n                }\n            </List>\n        </Paper>\n    </Grid>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Autorenew,\n    Whatshot,\n    AccountBalance,\n    Bolt,\n    SwapVerticalCircle\n} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {minted, supply, liquidity, fund} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aSupply = 360 * ((supply - liquidity - fund) / minted) * (Math.PI / 180);\n    const aBurned = 360 * ((minted - supply) / minted) * (Math.PI / 180);\n    const aLiquidity = 360 * (liquidity / minted) * (Math.PI / 180);\n    const aFund = 360 * (fund / minted) * (Math.PI / 180);\n\n\n    const angles = {\n        supplyStart: 0,\n        supplyEnd: aSupply,\n\n        liquidityStart: aSupply + divider,\n        liquidityEnd: aSupply + aLiquidity,\n\n        fundStart: aSupply + aLiquidity + divider,\n        fundEnd: aSupply + aLiquidity + aFund,\n\n        burnedStart: aSupply + aLiquidity + aFund + divider,\n        burnedEnd: aSupply + aLiquidity + aFund + aBurned - divider\n    }\n\n\n    const colors = {\n        label: '#fff',\n        supply: '#fbca00',\n        burned: '#fa5700',\n        faucet: '#1c6fe0',\n        fund: '#ff00eb',\n        liquidity: '#a100ff',\n\n        staked: '#ffe35c',\n        cnsone: '#ff0000',\n        cnsvolt: '#65CA00',\n        cnsbnb: '#fbca00',\n        cnsfuse: '#3d668d'\n    }\n\n    if (\n        supply === undefined ||\n        liquidity === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: angles.supplyStart,\n                            angle: angles.supplyEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angles.liquidityStart,\n                            angle: angles.liquidityEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.liquidity,\n                        },\n                        {\n                            angle0: angles.fundStart,\n                            angle: angles.fundEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.fund,\n                        },\n                        {\n                            angle0: angles.burnedStart,\n                            angle: angles.burnedEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        }\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700'\n                }}\n            >\n                {(((minted - supply) / minted) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n\n            <Grid container>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Bolt style={{color: colors.label}}/>} color={colors.label} value={minted}\n                                  label=\"TOTAL MINTED\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply}\n                                  label=\"TOTAL SUPPLY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned}\n                                  value={minted - supply}\n                                  label=\"TOTAL BURNED\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<SwapVerticalCircle style={{color: colors.liquidity}}/>}\n                                  color={colors.liquidity} value={liquidity}\n                                  label=\"LIQUIDITY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<AccountBalance style={{color: colors.fund}}/>} color={colors.fund} value={fund}\n                                  label=\"FUND\"/>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon style={{paddingLeft: 15}}>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nimport {useSelector} from \"react-redux\";\nimport BurnSupply from \"../components/BurntSupply\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nconst web3 = new Web3(\"https://rpc.fuse.io\");\nconst ceus_contract = new web3.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\nconst calls = [\n    ceus_contract.methods.totalSupply().call,\n    ceus_contract.methods.balanceOf('0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b').call,\n    ceus_contract.methods.balanceOf('0xb80267eA7fa368374ee4d4Bf10044778232AdEFe').call\n];\n\nexport default function Stats() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [supply, setSupply] = useState(0);\n    const [liquidity, setLiquidity] = useState(0);\n    const [fund, setFund] = useState(0);\n\n    useEffect(() => {\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                ceus_supply,\n                ceus_liquidity,\n                ceus_fund\n            ] = resp;\n\n            setSupply(ceus_supply / (10**18));\n            setLiquidity(ceus_liquidity / (10**18));\n            setFund(ceus_fund / (10**18));\n        })\n    }, [])\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <BurnSupply\n                        minted={2000000}\n                        supply={supply}\n                        liquidity={liquidity}\n                        fund={fund}\n                    />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    Avatar,\n    Button,\n    Container, Divider,\n    FormControl,\n    Grid,\n    InputAdornment, Link,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from '../abis/IPancakeRouter.json';\nimport uni_abi from '../abis/IUniswapV2Pair.json';\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x6483f166b9e4310a165a55fea04f867499aded06';\nconst routerAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E';\nconst easyBridgeAddress = '0xf79fa369aF0FC52260Bef080A62Cb2501863cfF7';\n\nexport default function EasyBridge() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n    const [amount, setAmount] = useState(\"\");\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0])\n    const [fuseOut, setFuseOut] = useState(0);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getFuseAmt = () => {\n\n        if (!amount || !reserves[0] || !reserves[1]) {\n            setFuseOut(undefined)\n            return;\n        }\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toBN(amount * (10 ** 18)), reserves[1], reserves[0]).call((err, resp) => {\n            setFuseOut(resp / (10 ** 18) * .98);\n        })\n    }\n\n    useEffect(getFuseAmt, [amount, reserves]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const bridge = () => {\n\n        const web3 = new Web3(window.provider);\n\n        web3.eth\n            .sendTransaction({\n                    to: easyBridgeAddress,\n                    from: wallet.address,\n                    value: web3.utils.toBN(amount * (10 ** 18))\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.logs[10].data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <FormControl fullWidth>\n                        <TextField\n                            autoComplete=\"off\"\n                            type=\"number\"\n                            value={amount}\n                            placeholder=\"Enter Amount\"\n                            onChange={(ev) => {\n                                setAmount(ev.target.value)\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    style: {textAlign: \"right\"},\n                                },\n                                startAdornment: <Avatar style={{marginRight: 10}} sx={{width: 24, height: 24}}\n                                                        src={`https://coineus.app/assets/tokens/bnb/logo.png`}/>,\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <Button variant=\"contained\" onClick={() => {\n                                        setAmount(wallet.balances.bnb.native)\n                                    }\n                                    }>MAX</Button>\n                                </InputAdornment>,\n                            }}\n                        />\n                    </FormControl>\n                    <ListItem disablePadding style={{marginTop: 10}}>\n                        <ListItemAvatar>\n                            <Avatar style={{marginLeft: 15}} sx={{width: 24, height: 24}}\n                                    src={`https://coineus.app/assets/tokens/fuse/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(fuseOut)} FUSE`}\n                            secondary=\"Estimated Out\"\n                            primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                            secondaryTypographyProps={{textAlign: 'right'}}\n                        />\n                    </ListItem>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 10}}\n                        onClick={bridge}\n                        disabled={!wallet.address || wallet.chain !== 56 || amount > wallet.balances.bnb.native}\n                    >BRIDGE</Button>\n                </Paper>\n                <Divider style={{marginTop: 10}}>SMART CHAIN</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    network=\"bnb\"\n                    name=\"BNB\"\n                    native\n                    price={wallet.prices.bnb?.native}\n                    wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                />\n\n                <Divider style={{marginTop: 10}}>FUSE NETWORK</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                    network=\"fuse\"\n                    name=\"FUSE\"\n                    native\n                    price={wallet.prices.fuse?.native}\n                />\n\n                {\n                    amtRecieved !== undefined && <>\n                        <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                        <Paper\n                            style={{\n                                backgroundColor: 'white',\n                                color: \"#000\",\n                                padding: 20,\n                                fontFamily: 'monospace'\n                            }}>\n                            <Grid container>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>Bridged</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(amtRecieved)} FUSE`}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(txCost)} BNB`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={6}/>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusUSDFormat(txCost * wallet.prices.bnb?.native?.inUSD)} USD`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                        <Link\n                                            style={{color: \"#000\", textDecorationColor: '#000'}}\n                                            href={`https://bscscan.com/tx/${txHash}`}\n                                            target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}}>\n                                    <Typography style={{fontFamily: 'monospace'}}>FUSE Balance update pending...</Typography>\n                                </Grid>\n                            </Grid>\n\n                        </Paper>\n                    </>\n                }\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport ceus_abi from \"../abis/ceus_abi.json\";\n\nimport {useSelector} from \"react-redux\";\nimport {useState} from \"react\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst COINEUS_FUND_ADDRESS = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst CEUS_CONTRACT_ADDRESS = \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\";\n\n//0x9374c277969A94C0e51Fc9dD1D00D125771C9a98 LPInjector contract\n\nexport default function Admin() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const rCNSONEToEveryone = () => {\n        const web3= new Web3(window.provider);\n        const coineusone_contract = new web3.eth.Contract(ceus_abi, CEUS_CONTRACT_ADDRESS);\n\n        coineusone_contract.methods.performBurn(web3.utils.toWei(amount))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Burn CEUS</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n                        <Button fullWidth variant=\"contained\"\n                                disabled={!amount}\n                                onClick={rCNSONEToEveryone}>BURN CEUS</Button>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {FormControl, TextField} from \"@mui/material\";\n\nexport default function SwapInput(props) {\n\n    const {label, max, disabled, value, onChange, startAdornment, endAdornment} = props;\n\n    return (\n        <FormControl\n            style={{\n                backgroundColor: 'rgb(0,0,0)', // same as background default\n                border: 'none',\n                borderColor: 'unset',\n                borderRadius: 4\n            }}\n            fullWidth>\n            <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                inputMode=\"decimal\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"off\"\n                pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                placeholder=\"0\"\n                max={max}\n                disabled={disabled}\n                value={value}\n                onChange={onChange}\n                label={label}\n                InputProps={{\n                    inputProps: {\n                        style: {\n                            textAlign: 'right',\n                        }\n                    },\n                    startAdornment: startAdornment,\n                    endAdornment: endAdornment\n                }}\n            />\n        </FormControl>\n    )\n}\n","import {Avatar, Button, Container, Divider, Grid, InputAdornment, Link, Paper, Typography} from \"@mui/material\";\nimport SwapInput from \"../components/SwapInput\";\nimport {useEffect, useState} from \"react\";\nimport {useTheme} from \"@mui/styles\";\nimport {useSelector} from \"react-redux\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport Web3 from \"web3\";\nimport uni_abi from \"../abis/IUniswapV2Pair.json\";\nimport router_abi from \"../abis/IPancakeRouter.json\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b';\nconst routerAddress = '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5';\n\nexport default function Swap() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const theme = useTheme();\n\n    const [amountIn, setAmountIn] = useState(0);\n    const [amountOut, setAmountOut] = useState(0);\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0]);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getCeusAmt = () => {\n\n        if (!amountIn || !reserves[0] || !reserves[1]) {\n            setAmountOut(0)\n            return;\n        }\n\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toWei(amountIn), reserves[0], reserves[1]).call((err, resp) => {\n            setAmountOut(CoineusCryptoFormat(resp / (10 ** 18) * .99));\n        })\n    }\n\n    useEffect(getCeusAmt, [amountIn, reserves, rpc.fuse]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const swap = async () => {\n        setAmtRecieved(undefined);\n        setTxHash(undefined);\n        setTxCost(undefined);\n\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n        const gasPrice = await web3.eth.getGasPrice();\n\n        contract.methods.swapExactETHForTokens(\n            web3.utils.toWei((amountOut).toString()),\n            [\n                '0x0be9e53fd7edac9f859882afdda116645287c629',\n                '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8'\n            ],\n            wallet.address,\n            (((new Date()).getTime() + 60000) / 1000).toFixed(0)\n        )\n            .send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei(amountIn),\n                    gas: 300000,\n                    gasPrice\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                console.log(receipt);\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.events[2].raw.data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <SwapInput\n                                    value={amountIn || \"\"}\n                                    onChange={(ev) => {\n                                        setAmountIn(ev.target.value)\n                                    }}\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                style={{\n                                                    backgroundColor: theme.palette.background.paper,\n                                                    backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05))',\n                                                    color: \"#fff\"\n                                                }}\n                                                startIcon={<Avatar src='https://coineus.app/assets/tokens/fuse/logo.png'\n                                                                   style={{width: 24, height: 24}}/>}\n                                            >FUSE\n                                            </Button>\n                                        </InputAdornment>\n                                    }\n                                />\n                                <Typography variant=\"caption\"\n                                            style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse.native)}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <SwapInput\n                                    disabled\n                                    value={amountOut || \"\"}\n                                    onChange={(ev) => {\n                                        setAmountOut(ev.target.value)\n                                    }}\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                style={{\n                                                    backgroundColor: theme.palette.background.paper,\n                                                    backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05))',\n                                                    color: \"#fff\"\n                                                }}\n                                                startIcon={<Avatar\n                                                    src='https://coineus.app/assets/tokens/fuse/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8/logo.png'\n                                                    style={{width: 24, height: 24}}/>}\n                                            >CEUS\n                                            </Button>\n                                        </InputAdornment>\n                                    }\n                                />\n                                <Typography variant=\"caption\"\n                                            style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"])}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button fullWidth variant=\"contained\" onClick={swap}>SWAP</Button>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    {\n                        amtRecieved !== undefined && <>\n                            <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                            <Paper\n                                style={{\n                                    backgroundColor: 'white',\n                                    color: \"#000\",\n                                    padding: 20,\n                                    fontFamily: 'monospace'\n                                }}>\n                                <Grid container>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>Purchased</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusCryptoFormat(amtRecieved)} CEUS`}\n                                        </Typography>\n                                    </Grid>\n\n                                    <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusCryptoFormat(txCost)} FUSE`}\n                                        </Typography>\n                                    </Grid>\n\n\n                                    <Grid item xs={6}/>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusUSDFormat(txCost * wallet.prices.fuse?.native?.inUSD)} USD`}\n                                        </Typography>\n                                    </Grid>\n\n\n                                    <Grid item xs={12} style={{marginTop: 20}} />\n\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                            <Link\n                                                style={{color: \"#000\", textDecorationColor: '#000'}}\n                                                href={`https://explorer.fuse.io/tx/${txHash}`}\n                                                target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n\n                            </Paper>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Container>\n    )\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport lottery2_abi from \"../abis/Lottery2.json\";\n\nimport {\n    Avatar,\n    Button,\n    Container,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\n\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport CurrencyBitcoinIcon from '@mui/icons-material/CurrencyBitcoin';\n\nconst LOTTERY2_CONTRACT_FUSE1 = '0x4C452c2E6f27942AEab5e0c5158792b59e52814e';\nconst LOTTERY2_CONTRACT_AVAX1 = '0xd5a5A1628f03Df66ef5fcc68e17dfDEf6f07CdA3';\nconst LOTTERY2_CONTRACT_BNB1 = '0xB830d3e0f85f47B7A618a8a59e0564b4f28A2DF8';\n\n\n\nexport default function Lottery() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [displayUSD, setDisplayUSD] = useState(false);\n\n    const [lottery2FUSE, setLottery2FUSE] = useState({});\n    const [lottery2AVAX, setLottery2AVAX] = useState({});\n    const [lottery2BNB, setLottery2BNB] = useState({});\n\n    const getLottery2Info = () => {\n        if (!wallet.address) return;\n\n        getLottery2GameDetails(LOTTERY2_CONTRACT_FUSE1, setLottery2FUSE, rpc.fuse);\n        getLottery2GameDetails(LOTTERY2_CONTRACT_AVAX1, setLottery2AVAX, rpc.avax);\n        getLottery2GameDetails(LOTTERY2_CONTRACT_BNB1, setLottery2BNB, rpc.bnb);\n    }\n\n    const getLottery2GameDetails = (contract_address, callback, _rpc) => {\n\n        const web3 = new Web3(_rpc);\n\n        const lottery = new web3.eth.Contract(lottery2_abi, contract_address);\n\n        const calls = [\n            lottery.methods.ticketCost().call,\n            lottery.methods.adminFee().call,\n            lottery.methods.lotteryID().call,\n            lottery.methods.entriesAllowed().call,\n            lottery.methods.nextDraw().call,\n            lottery.methods.nextDrawInterval().call,\n            lottery.methods.totalFees().call,\n            lottery.methods.totalWinnings().call,\n            web3.eth.getBalance(contract_address)\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                ticketCost,\n                adminFee,\n                lotteryID,\n                entriesAllowed,\n                nextDraw,\n                nextDrawInterval,\n                totalFees,\n                totalWinnings,\n                jackpot\n            ] = resp;\n\n            callback({\n                ticketCost: ticketCost / (10 ** 18),\n                adminFee,\n                lotteryID,\n                entriesAllowed,\n                nextDraw: nextDraw * 1000,\n                nextDrawInterval,\n                totalFees,\n                totalWinnings,\n                jackpot: jackpot * (1 - adminFee / 100)\n            });\n        })\n\n    }\n\n    useEffect(() => {\n        getLottery2Info();\n        const interval = setInterval(getLottery2Info, 10000)\n        return () => clearInterval(interval);\n    }, [rpc.fuse, wallet.address]);\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12} style={{textAlign: 'right'}}>\n                    <ToggleButtonGroup\n                        value={displayUSD}\n                        exclusive\n                        onChange={()=>setDisplayUSD(!displayUSD)}\n                        aria-label=\"text alignment\"\n                        color=\"primary\"\n                    >\n                        <ToggleButton value={false}>\n                            <CurrencyBitcoinIcon />\n                        </ToggleButton>\n                        <ToggleButton value={true}>\n                            <AttachMoneyIcon />\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Grid>\n\n                <LotteryGameInfo\n                    contract_address={LOTTERY2_CONTRACT_FUSE1}\n                    id={lottery2FUSE.lotteryID}\n                    cost={lottery2FUSE.ticketCost}\n                    jackpot={lottery2FUSE.jackpot}\n                    nextDraw={lottery2FUSE.nextDraw}\n                    entriesAllowed={lottery2FUSE.entriesAllowed}\n                    currency=\"FUSE\"\n                    basePrice={wallet.prices.fuse.native?.inUSD || 0}\n                    displayUSD={displayUSD}\n                />\n\n                <LotteryGameInfo\n                    contract_address={LOTTERY2_CONTRACT_AVAX1}\n                    id={lottery2AVAX.lotteryID}\n                    cost={lottery2AVAX.ticketCost}\n                    jackpot={lottery2AVAX.jackpot}\n                    nextDraw={lottery2AVAX.nextDraw}\n                    entriesAllowed={lottery2AVAX.entriesAllowed}\n                    currency=\"AVAX\"\n                    basePrice={wallet.prices.avax.native?.inUSD || 0}\n                    displayUSD={displayUSD}\n                    customColor={lottery2AVAX.lotteryID == 2 && \"#E76223\"}\n                    customListItem={lottery2AVAX.lotteryID == 2 && <ListItem>\n                        <ListItemAvatar>\n                            <Avatar src=\"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\"/>\n                        </ListItemAvatar>\n                        <ListItemText primary={displayUSD ? `~${CoineusUSDFormat(100 * wallet.prices.avax['0x51e48670098173025C477D9AA3f0efF7BF9f7812'].inUSD)}` : `${CoineusCryptoFormat(100)} DGNX`}\n                                      primaryTypographyProps={{\n                                          style: {fontWeight: 700},\n                                          variant: 'h5',\n                                          color: '#E76223'\n                                      }}\n                                      secondary={`Bonus Token`}\n                        />\n                    </ListItem>}\n                />\n\n                <LotteryGameInfo\n                    contract_address={LOTTERY2_CONTRACT_BNB1}\n                    id={lottery2BNB.lotteryID}\n                    cost={lottery2BNB.ticketCost}\n                    jackpot={lottery2BNB.jackpot}\n                    nextDraw={lottery2BNB.nextDraw}\n                    entriesAllowed={lottery2BNB.entriesAllowed}\n                    currency=\"BNB\"\n                    basePrice={wallet.prices.bnb.native?.inUSD || 0}\n                    displayUSD={displayUSD}\n                />\n\n            </Grid>\n        </Container>\n    );\n}\n\nfunction LotteryGameInfo(props) {\n\n    const {contract_address, id, cost, jackpot, currency, nextDraw, entriesAllowed, basePrice, displayUSD, customColor, customListItem} = props;\n\n    const [drawingTime, setDrawingTime] = useState(undefined);\n\n    useEffect(() => {\n        setDrawingTime(msToHMS(timeToNextDraw(nextDraw)));\n        const interval1 = setInterval(() => {\n            setDrawingTime(msToHMS(timeToNextDraw(nextDraw)));\n        }, 1000);\n        return () => clearInterval(interval1);\n    },[nextDraw]);\n\n    return <Grid item xs={12}>\n        <Paper>\n            {\n                (timeToNextDraw(nextDraw) > 0) ? <Typography variant=\"caption\" color=\"primary\" style={{float: \"left\", padding: '15px 15px 0 15px'}}>Drawing\n                    in {drawingTime}</Typography> : <Typography variant=\"caption\" color=\"primary\" style={{float: \"left\", padding: '15px 15px 0 15px'}}>Waiting for Winner</Typography>\n            }\n            <Typography variant=\"caption\" color=\"primary\"\n                        style={{float: \"right\", padding: '15px 15px 0 15px'}}>Max Entries: {entriesAllowed} - Draw# {id}</Typography>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar src={`https://coineus.app/assets/tokens/${currency.toLowerCase()}/logo.png`}/>\n                    </ListItemAvatar>\n                    <ListItemText primary={displayUSD ? `~${CoineusUSDFormat(cost * basePrice)}` : `${CoineusCryptoFormat(cost)} ${currency}`}\n                                  primaryTypographyProps={{\n                                      style: {fontWeight: 700},\n                                      variant: 'h5'\n                                  }}\n                                  secondary={`Ticket Price`}/>\n                    <ListItemText primary={displayUSD ? `~${CoineusUSDFormat(jackpot / (10**18) * basePrice)}` : `${CoineusCryptoFormat(jackpot / (10**18))} ${currency}`}\n                                  primaryTypographyProps={{\n                                      style: {fontWeight: 700},\n                                      variant: 'h5',\n                                      textAlign: 'right'\n                                  }}\n                                  secondary={`Current Jackpot`}\n                                  secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {customListItem}\n                <ListItem>\n                    <RouterLink to={`/lottery/${currency.toLowerCase()}/${contract_address}`}\n                                style={{width: '100%', textDecoration: 'none'}}>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            style={customColor ? {backgroundColor: customColor} : {}}\n                        >Enter</Button>\n                    </RouterLink>\n                </ListItem>\n            </List>\n        </Paper>\n    </Grid>\n}\n\nfunction timeToNextDraw(d) {\n    return d - new Date();\n}\n\nfunction msToHMS(ms) {\n    let h = ms / 3.6e6 | 0;\n    let m = (ms % 3.6e6) / 6e4 | 0;\n    let s = (ms % 6e4) / 1e3 | 0;\n    return `${h}:${('' + m).padStart(2, '0')}:${('' + s).padStart(2, '0')}`;\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport {\n    Avatar,\n    Button,\n    Container,\n    Fab,\n    Grid,\n    Link,\n    List,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    Skeleton,\n    Typography\n} from \"@mui/material\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {useParams, Link as RouterLink} from \"react-router-dom\";\nimport lottery2_abi from \"../abis/Lottery2.json\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nexport default function LotteryGame() {\n\n    let {contract_address, network} = useParams();\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const currency = network.toUpperCase();\n\n    const [pending, setPending] = useState(false);\n\n    const [lottery2, setLottery2] = useState({\n        ticketCost: 0,\n        adminFee: 0,\n        lotteryID: 0,\n        entriesAllowed: 0,\n        nextDraw: 0,\n        nextDrawInterval: 0,\n        totalFees: 0,\n        totalWinnings: 0,\n        jackpot: 0,\n        players: [],\n        previousWinner: '',\n        previousJackpot: 0,\n        playerStats: {wins: 0, entries: 0, winnings: 0}\n    });\n\n    const getLotteryInfo = (contract_address, callback) => {\n\n        if (!wallet.address) return;\n\n\n        const web3 = new Web3(rpc[network]);\n        const lottery = new web3.eth.Contract(lottery2_abi, contract_address);\n\n        const calls = [\n            lottery.methods.ticketCost().call,\n            lottery.methods.adminFee().call,\n            lottery.methods.lotteryID().call,\n            lottery.methods.entriesAllowed().call,\n            lottery.methods.nextDraw().call,\n            lottery.methods.nextDrawInterval().call,\n            lottery.methods.totalFees().call,\n            lottery.methods.totalWinnings().call,\n            lottery.methods.getPlayers().call,\n            web3.eth.getBalance(contract_address),\n            lottery.methods.getStatsByAddress(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                ticketCost,\n                adminFee,\n                lotteryID,\n                entriesAllowed,\n                nextDraw,\n                nextDrawInterval,\n                totalFees,\n                totalWinnings,\n                players,\n                jackpot,\n                playerStats\n            ] = resp;\n\n            lottery.methods.getGameHistoryByLotteryID(lotteryID-1).call((err, resp) => {\n                callback({\n                    ticketCost: ticketCost / (10 ** 18),\n                    adminFee,\n                    lotteryID,\n                    entriesAllowed: parseInt(entriesAllowed),\n                    nextDraw: nextDraw * 1000,\n                    nextDrawInterval,\n                    totalFees,\n                    totalWinnings: totalWinnings / (10**18),\n                    jackpot: jackpot * (1 - adminFee / 100),\n                    players,\n                    previousWinner: resp.winner,\n                    previousJackpot: resp.jackpot,\n                    playerStats\n                });\n            })\n        })\n    }\n\n    useEffect(() => {\n        getLotteryInfo(contract_address, setLottery2);\n        const interval = setInterval(() => getLotteryInfo(contract_address, setLottery2), 10000)\n        return () => clearInterval(interval);\n    }, [rpc[network], wallet.address]);\n\n    const [drawingTime, setDrawingTime] = useState(0);\n    useEffect(() => {\n        setDrawingTime(msToHMS(timeToNextDraw(lottery2.nextDraw)));\n        const interval = setInterval(() => {\n            setDrawingTime(msToHMS(timeToNextDraw(lottery2.nextDraw)));\n        }, 1000);\n        return () => clearInterval(interval);\n    })\n\n    const pickWinner = () => {\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(lottery2_abi, contract_address);\n\n        contract.methods.pickWinner(\"coineus\" + (new Date()).getTime())\n            .send(\n                {\n                    from: wallet.address\n                }\n            )\n            .then(function (receipt) {\n                getLotteryInfo()\n            });\n\n    }\n\n    const enter = async () => {\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(lottery2_abi, contract_address);\n        const gasPrice = await web3.eth.getGasPrice();\n\n        contract.methods.enter()\n            .send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei(lottery2.ticketCost.toString()),\n                    gas: 300000,\n                    gasPrice\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getLotteryInfo(contract_address, setLottery2)\n                setPending(false);\n            });\n    }\n\n    const checkChain = () => {\n        switch (currency) {\n            case \"AVAX\":\n                if (wallet.chain === 43114) return true;\n                break;\n            case \"BNB\":\n                if (wallet.chain === 56) return true;\n                break;\n            case \"FUSE\":\n                if (wallet.chain === 122) return true;\n                break;\n            default:\n                return false;\n        }\n    }\n\n    const changeNetwork = async () => {\n        let chainID = 122;\n        switch (currency) {\n            case \"AVAX\":\n                chainID = 43114;\n                break;\n            case \"BNB\":\n                chainID = 56;\n                break;\n            case \"FUSE\":\n                chainID = 122;\n                break;\n            default:\n                return false;\n        }\n\n        const web3 = new Web3(window.provider);\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{chainId: web3.utils.toHex(chainID)}], // chainId must be in hexadecimal numbers\n        });\n    }\n\n    const getButtonLabel = () => {\n        if (lottery2.lotteryState === 1)\n            return \"LOTTERY CLOSED\";\n\n        if (getOccurrence(lottery2.players, wallet.address) >= lottery2.entriesAllowed)\n            return \"MAX ENTRIES\";\n\n        if (timeToNextDraw(lottery2.nextDraw) < 0)\n            return \"WAITING TO PICK WINNER\";\n\n        return `BUY TICKET (${lottery2.ticketCost} ${currency})`;\n    }\n\n    const getButtonDisabled = () => {\n        if (lottery2.lotteryState === 1)\n            return true;\n\n        if (getOccurrence(lottery2.players, wallet.address) >= lottery2.entriesAllowed)\n            return true;\n\n        return timeToNextDraw(lottery2.nextDraw) < 0;\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Fab to={\"/lottery\"} component={RouterLink} color=\"primary\" size=\"small\" style={{position:'fixed', bottom: 20, right: 20}}><ArrowBackIcon /></Fab>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper style={{border: '1px solid #fbca00'}}>\n                        <List>\n                            <ListItem>\n                                <ListItemText primary={`${CoineusCryptoFormat(lottery2.totalWinnings)} ${currency}`}\n                                              primaryTypographyProps={{\n                                                  style: {fontWeight: 700},\n                                                  variant: 'h5',\n                                                  color: 'primary',\n                                                  textAlign: 'center'\n                                              }}\n                                              secondary=\"Total Winnings All-time\"\n                                              secondaryTypographyProps={{textAlign: 'center'}}\n                                />\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n\n                {\n                    lottery2.ticketCost === 0 && <Grid item xs={12}>\n                        <Paper style={{padding:15}}>\n                            <Skeleton />\n                            <Grid container spacing={2}>\n                                <Grid item xs={6}><Skeleton height={70}/></Grid>\n                                <Grid item xs={6}><Skeleton height={70}/></Grid>\n                            </Grid>\n                            <Skeleton height={51.44}/>\n                        </Paper>\n                    </Grid>\n                }\n\n                {\n                    lottery2.ticketCost !== 0 && <Grid item xs={12}>\n                        <Paper>\n                            {\n                                (timeToNextDraw(lottery2.nextDraw) > 0) ?\n                                <Typography variant=\"caption\" color=\"primary\" style={{\n                                    float: \"left\",\n                                    padding: '15px 15px 0 15px'\n                                }}>Drawing in {drawingTime}</Typography>\n                                : <Typography variant=\"caption\" color=\"primary\" style={{float: \"left\", padding: '15px 15px 0 15px'}}>Waiting for Winner</Typography>\n                            }\n\n                            <Typography variant=\"caption\" color=\"primary\" style={{\n                                float: \"right\",\n                                padding: '15px 15px 0 15px'\n                            }}>Max Entries: {lottery2.entriesAllowed} - Draw# {lottery2.lotteryID}</Typography>\n\n                            <List>\n                                <ListItem>\n                                    {\n                                        lottery2.entriesAllowed > 1 && <ListItemText\n                                            primary={getOccurrence(lottery2.players, wallet.address)}\n                                            primaryTypographyProps={{\n                                                style: {fontWeight: 700},\n                                                variant: 'h5'\n                                            }}\n                                            secondary=\"My Entries\"/>\n                                    }\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(lottery2.jackpot / (10 ** 18))} ${currency}`}\n                                        primaryTypographyProps={{\n                                            style: {fontWeight: 700},\n                                            variant: 'h5',\n                                            textAlign: 'right'\n                                        }}\n                                        secondary=\"Current Jackpot\"\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                                { lottery2.lotteryID == 2 && currency === \"AVAX\" &&\n                                    <ListItem>\n                                        <ListItemAvatar>\n                                            <Avatar\n                                                src=\"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\"/>\n                                        </ListItemAvatar>\n                                        <ListItemText primary={`${CoineusCryptoFormat(100)} DGNX`}\n                                                      primaryTypographyProps={{\n                                                          style: {fontWeight: 700},\n                                                          variant: 'h5',\n                                                          color: '#E76223'\n                                                      }}\n                                                      secondary={`Bonus Token`}\n                                        />\n                                    </ListItem>\n                                }\n                                <ListItem>\n                                    {\n                                        checkChain()\n                                            ?\n                                            <Button\n                                                fullWidth\n                                                variant=\"contained\"\n                                                disabled={getButtonDisabled()}\n                                                onClick={enter}\n                                            >\n                                                {getButtonLabel()}\n                                            </Button>\n                                            :\n                                            <Button\n                                                fullWidth\n                                                variant=\"contained\"\n                                                onClick={changeNetwork}>CHANGE NETWORK</Button>\n                                    }\n                                </ListItem>\n\n                                {\n                                    (timeToNextDraw(lottery2.nextDraw) < 0) && <ListItem>\n                                        <Button\n                                            fullWidth\n                                            variant=\"contained\"\n                                            onClick={pickWinner}>PICK WINNER</Button>\n                                    </ListItem>\n                                }\n\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <List>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`0X...${lottery2.previousWinner.substr(-6)}`}\n                                    secondary=\"Previous Winner\"\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(lottery2.previousJackpot / (10 ** 18))} ${currency}`}\n                                    primaryTypographyProps={{textAlign: 'right'}}\n                                    secondary=\"Amount\"\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <List>\n                            <Typography style={{marginLeft: 15}}>All-time Stats</Typography>\n                            <ListItem>\n                                <ListItemText\n                                    primary={lottery2.playerStats.entries}\n                                    secondary=\"My Entries\"\n                                />\n                                <ListItemText\n                                    primary={lottery2.playerStats.wins}\n                                    secondary=\"My Wins\"\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(lottery2.playerStats.winnings / (10 ** 18))} ${currency}`}\n                                    secondary=\"My Winnings\"\n                                />\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 15}}>\n                        <List dense disablePadding>\n                            {\n                                lottery2.players.length > 0 && <>\n                                    <Typography>{lottery2.players.length} Entries</Typography>\n                                    {\n                                        lottery2.players.map((player, i) => {\n                                            return <ListItem key={player+\"\"+i} disablePadding>\n                                                <ListItemText\n                                                    primary={player}\n                                                    primaryTypographyProps={{\n                                                        color: player.toLowerCase() === wallet.address.toLowerCase() ? \"primary\" : \"\",\n                                                        variant: \"caption\",\n                                                        fontFamily: 'monospace'\n                                                    }}\n                                                />\n                                            </ListItem>\n                                        })\n                                    }\n                                </>\n                            }\n\n                            {\n                                lottery2.players.length <= 0 && <ListItem>\n                                    <ListItemText primary=\"No Entries\"/>\n                                </ListItem>\n                            }\n\n                        </List>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Container>\n    );\n}\n\nfunction timeToNextDraw(d) {\n    return d - new Date();\n}\n\nfunction msToHMS(ms) {\n    let h = ms / 3.6e6 | 0;\n    let m = (ms % 3.6e6) / 6e4 | 0;\n    let s = (ms % 6e4) / 1e3 | 0;\n    return `${h}:${('' + m).padStart(2, '0')}:${('' + s).padStart(2, '0')}`;\n}\n\nfunction getOccurrence(array, value) {\n    return array.filter((v) => (v === value)).length;\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\nimport EasyBridge from \"./views/EasyBridge\";\nimport Admin from \"./views/Admin\";\nimport Swap from \"./views/Swap\";\nimport Lottery from \"./views/Lottery\";\nimport LotteryGame from \"./views/LotteryGame\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                            <Route\n                                path={`/easybridge`}\n                                exact={true}\n                                element={<EasyBridge />}\n                            />\n                            <Route\n                                path={`/admin`}\n                                exact={true}\n                                element={<Admin />}\n                            />\n                            <Route\n                                path={`/swap`}\n                                exact={true}\n                                element={<Swap />}\n                            />\n                            <Route\n                                path={`/lottery`}\n                                exact={true}\n                                element={<Lottery />}\n                            />\n                            <Route\n                                path={`/lottery/:network/:contract_address`}\n                                exact={true}\n                                element={<LotteryGame />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/lottery'}>\n                            <ListItemText primary=\"Lottery\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/swap'}>\n                            <ListItemText primary=\"Swap\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/easybridge'}>\n                            <ListItemText primary=\"Easy Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        {\n                            wallet.address === coineus_fund_address && <ListItem button component={RouterLink} to={'/admin'}>\n                                <ListItemText primary=\"Admin\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                            </ListItem>\n                        }\n\n                        <ListSubheader>CEUS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://explorer.fuse.io/token/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://dexscreener.com/fuse/0x3b46efdd411cc0db43f1be7853727e18cce8b85b'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>FUSE NETWORK</ListSubheader>\n                        <ListItem button component={Link} href={'https://router.via.exchange/avalanche/AVAX/fuse/FUSE'} target=\"_blank\">\n                            <ListItemText primary=\"AVAX Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"ETH/BNB Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://get.fuse.cash/mrxn/46qbc3i4'} target=\"_blank\">\n                            <ListItemText primary=\"fuse.cash\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/FAsz89g5RT'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.youtube.com/channel/UCehh09nIOF-2BJ6YyIq3-RQ'} target=\"_blank\">\n                            <ListItemText primary=\"YouTube\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://medium.com/@coineus'} target=\"_blank\">\n                            <ListItemText primary=\"Medium\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://github.com/CoineusCrypto/'} target=\"_blank\">\n                            <ListItemText primary=\"GitHub\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'mailto:contact@coineus.app'} target=\"_blank\">\n                            <ListItemText primary=\"contact@coineus.app\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    if(token_info.dexscreenerChain && token_info.dexscreenerPair) {\n                        calls.push(axios\n                            .get(`https://api.dexscreener.com/latest/dex/pairs/${token_info.dexscreenerChain}/${token_info.dexscreenerPair}`)\n                            .then(resp => {\n                                const {pair} = resp.data;\n                                if(pair){\n                                    token_info.pair = pair;\n                                }\n                            }));\n                    }\n\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}