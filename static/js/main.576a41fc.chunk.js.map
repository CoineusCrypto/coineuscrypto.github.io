{"version":3,"sources":["theme.js","images/logo.svg","utils/promisify.js","redux/slices/coineusSlice.js","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","redux/store.js","components/PriceScroll.js","views/HomePage.js","utils/fuse_price.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","balances","avax","fuse","bnb","eth","coineusInfo","fookInfo","fudInfo","hedgeInfo","prices","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","tokens","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","updateWalletFOOKInfo","updateWalletFUDInfo","updateWalletHEDGEInfo","updateBalances","contract_address","balance","resetWallet","updatePrices","price","updateTokens","JSON","parse","stringify","actions","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetPairQuery","useGetTokenQuery","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","network","close","wrap","skip","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","baseToken","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","useSelector","coineus","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","Paper","marginBottom","secondaryAction","inUSD","allTime","pending","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","PriceScroll","list","setList","useEffect","tmp","Object","entries","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","token","scrollSnapAlign","maxWidth","objectFit","variant","marginRight","CoineusContractAddress","COINEUSONE_ADDRESS","HomePage","dispatch","useDispatch","setPending","stakeOpen","setStakeOpen","totalD","setTotalD","cnsoneInfo","setCnsoneInfo","btc","pollingInterval","store","getUserInfo","getCoineusInfo","interval","setInterval","clearInterval","Web3","Contract","coineus_abi","methods","getTotalDividendsDistributed","then","resp","td","getBalance","contract","cnsone_contract","coineusone_abi","fusd_contract","balanceOf","getAccountDividendsInfo","getAccount","info","cnsone_balance","cnsone_info","fusd_balance","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","burnit_contract","callsAVAX","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","burnit_balance","catch","console","log","web3BSC","callsBSC","web3ETH","okinami_contract","feg_eth_contract","callsETH","okinami_balance","feg_eth_balance","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","paddingBottom","backgroundColor","toLocaleString","fontSize","Divider","IconButton","disabled","edge","PowerStake","onSubmit","onSuccess","onError","fusd","cns","claim","gasPrice","fullWidth","CoineusOne","usdc","fud","fook","hedge","feg","feg_eth","okinami","DialogActions","consensus_abi","delegate","setAmount","setAction","deposit","coineus_contract","Tabs","onChange","ev","val","Tab","Box","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","getPairPrices","getState","fusd_fuse","unipair_abi","cns_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","avax_price","inAVAX","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","coineusValidatorAddress","consensusAddress","consensusContract","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setData","connectedContract","setConnectedContract","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","fuse_balance","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","LinearProgress","Math","floor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","sx","bottom","Alert","elevation","icon","CoineusSales","component","RouterLink","CoineusSaleDetails","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","now","getTime","distance","days","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","avax_balance","RewardsLocker","fudContract","setFudContract","coineusContract","setCoineusContract","rewards_abi","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","getRewards","coineus_fund_address","CoineusPortfolio","coineus_fud_locker","hedge_fund_contract","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_hedge_fund_balance","coineus_fund_hedge_fund_dividends","Coineus","getDexScreener","tokenList","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.576a41fc.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        coineusInfo: undefined,\n        fookInfo: undefined,\n        fudInfo: undefined,\n        hedgeInfo: undefined\n    },\n    prices: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        updateWalletFOOKInfo(state, action) {\n            state.wallet.fookInfo = action.payload\n        },\n\n        updateWalletFUDInfo(state, action) {\n            state.wallet.fudInfo = action.payload\n        },\n\n        updateWalletHEDGEInfo(state, action) {\n            state.wallet.hedgeInfo = action.payload\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n            state.wallet.fookInfo = undefined;\n            state.wallet.fudInfo = undefined;\n        },\n\n        updatePrices(state, action) {\n            state.prices[action.payload.name] = action.payload.price;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateBalances,\n\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo,\n    updateWalletHEDGEInfo,\n\n    resetWallet,\n    updatePrices,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: '#01bc01'\n    }\n}));\n\nexport default function PriceScroll() {\n\n    const classes = useStyles();\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                switch(symbol){\n                    case 'USDC':\n                    case 'fUSD':\n                    case 'WAVAX':\n                    case 'CNSONE':\n                        return[contract_address, token_info];\n                    default:\n                        break;\n                }\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n            return a.priceChange < b.priceChange ? 1 : -1\n        })\n\n        setList(tmp);\n\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={token.chain+\"_\"+token.contract_address}>\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}/>\n                                {token.contract_address !== 'native' && <span className={clsx(classes.networkChip, token.chain)}/>}\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                            />\n                        </ListItem>\n                        <Typography\n                            className={getColorClass(token.priceChange)}\n                            variant=\"h5\"\n                            fontWeight={700}\n                            textAlign='right'\n                            style={{\n                                marginRight: 20\n                        }}>{token.priceChange}%</Typography>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    Divider,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\n\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {\n    updateBalances, updatePrices,\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo, updateWalletHEDGEInfo,\n} from \"../redux/slices/coineusSlice\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport coineusone_abi from '../abis/coineusone_abi.json';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\n\nimport {useGetPairQuery} from \"../redux/services/dexscreener\";\nimport store from \"../redux/store\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\n\nconst CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet, prices, rpc, tokens} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n\n    const [stakeOpen, setStakeOpen] = useState(false)\n\n    const [totalD, setTotalD] = useState(0);\n\n    const [cnsoneInfo, setCnsoneInfo] = useState({});\n\n    const btc = useGetPairQuery({\n        chain_id: 'bsc',\n        pair_address: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33'\n    }, {pollingInterval: 60000})\n\n    useEffect(() => {\n        store.dispatch(updatePrices({\n            name: 'btc',\n            price: {\n                inUSD: btc.data?.pair.priceUsd,\n            }\n        }));\n    }, [btc.data])\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address]);\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n        });\n\n    }\n\n    const getUserInfo = () => {\n\n        //FUSE\n        const web3 = new Web3(rpc.fuse);\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n        const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            cnsone_contract.methods.balanceOf(wallet.address).call,\n            cnsone_contract.methods.getAccount(wallet.address).call,\n            fusd_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                balance,\n                info,\n                cnsone_balance,\n                cnsone_info,\n                fusd_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletCoineusInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: CoineusContractAddress,\n                balance: balance\n            }));\n\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n                balance: fusd_balance / (10 ** 18)\n            }));\n\n            setCnsoneInfo(cnsone_info);\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: COINEUSONE_ADDRESS,//CNSONE\n                balance: cnsone_balance / (10 ** 18)\n            }));\n\n        })\n\n        //AVAX\n        const web3AVAX = new Web3(rpc.avax);\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n        const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n        const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n        const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(wallet.address).call,\n            fook_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            wavax_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            burnit_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance,\n                fud_balance,\n                fud_info,\n                wavax_balance,\n                hedge_balance,\n                hedge_info,\n                burnit_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFOOKInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n                balance: balance\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n                balance: usdc_balance / (10 ** 6)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n                balance: wavax_balance / (10 ** 18)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n                balance: burnit_balance / (10 ** 9)\n            }))\n\n            // FUD TOKEN\n            withdrawableDividends = fud_info[3];\n            totalDividends = fud_info[4];\n            secondsUntilAutoClaimAvailable = fud_info[7];\n\n            fud_balance = fud_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletFUDInfo({\n                balance: fud_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n                balance: fud_balance\n            }))\n\n            // HEDGE TOKEN\n            withdrawableDividends = hedge_info[3];\n            totalDividends = hedge_info[4];\n            secondsUntilAutoClaimAvailable = hedge_info[7];\n\n            hedge_balance = hedge_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletHEDGEInfo({\n                balance: hedge_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n                balance: hedge_balance\n            }))\n\n        })\n            .catch(console.log)\n\n        //BNB\n        const web3BSC = new Web3(rpc.bnb);\n        web3BSC.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n        const callsBSC = [\n            feg_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3BSC, callsBSC).then(resp => {\n            let [\n                balance,\n            ] = resp;\n\n            dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                balance: balance / (10 ** 9)\n            }))\n\n        })\n\n\n        //ETH\n        const web3ETH = new Web3(rpc.eth);\n        web3ETH.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n        const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n        const callsETH = [\n            okinami_contract.methods.balanceOf(wallet.address).call,\n            feg_eth_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3ETH, callsETH).then(resp => {\n            let [\n                okinami_balance,\n                feg_eth_balance,\n            ] = resp;\n\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                balance: okinami_balance / (10 ** 9)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                balance: feg_eth_balance / (10 ** 9)\n            }))\n\n        })\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .00000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserInfo();\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Projects for sale on Coineus.</Typography>*/}\n                {/*        <Link to=\"/sale\" component={RouterLink} underline=\"hover\">View List</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} fUSD` || '--'}\n                                secondary=\"Total Rewards Distributed All-time\"\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{textAlign: 'right', color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n\n                    <Divider>FUSE</Divider>\n\n                    {/*FUSE*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                        network=\"fuse\"\n                        name=\"FUSE\"\n                        native\n                        price={prices.fuse}\n                        secondaryAction={\n                            <IconButton\n                                disabled={wallet.chain !== 122}\n                                edge=\"end\"\n                                aria-label=\"stake\"\n                                onClick={() => setStakeOpen(true)}\n                                color=\"primary\"\n                            >\n                                <BoltIcon/>\n                            </IconButton>\n                        }\n                    />\n                    <PowerStake\n                        open={stakeOpen}\n                        amount={wallet.balances.fuse.native}\n                        close={() => setStakeOpen(false)}\n                        onSubmit={() => {\n                            setStakeOpen(false);\n                            setPending(true);\n                        }}\n                        onSuccess={() => {\n                            getUserInfo();\n                            setPending(false);\n                        }}\n                        onError={(err) => {\n                            setPending(false);\n                        }}\n                    />\n\n                    {/*fUSD*/}\n                    <TokenListItem\n                        contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                        network=\"fuse\"\n                        name=\"fUSD\"\n                        price={prices.fusd}\n                    />\n\n                    {/*CNS*/}\n                    <TokenListItem\n                        contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                        network=\"fuse\"\n                        name=\"CNS\"\n                        price={prices.cns}\n                        rewards={{\n                            allTime: wallet.coineusInfo?.totalDividends,\n                            pending: wallet.coineusInfo?.withdrawableDividends,\n                            symbol: 'fUSD'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claim} variant='contained' fullWidth\n                                        disabled={wallet.chain !== 122 || wallet.coineusInfo?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    {/*CNSONE*/}\n                    <TokenListItem\n                        contract_address={COINEUSONE_ADDRESS}\n                        network=\"fuse\"\n                        name=\"CNSONE\"\n                        price={prices.cns}\n                        secondaryAction={<CoineusOne onSuccess={getUserInfo}/>}\n                        cnsDetails={cnsoneInfo}\n                    />\n\n                    <Divider>AVAX</Divider>\n\n                    {/*AVAX*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"avax\"\n                        name=\"AVAX\"\n                        native\n                        price={prices.avax}\n                        wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                    />\n\n                    {/*WAVAX*/}\n                    <TokenListItem\n                        contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                        network=\"avax\"\n                        name=\"WAVAX\"\n                        price={prices.avax}\n                        secondaryAction={\n                            <IconButton\n                                disabled={\n                                    wallet.chain !== 43114 ||\n                                    wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                }\n                                edge=\"end\"\n                                onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                color=\"primary\"\n                            >\n                                <ChangeCircleIcon/>\n                            </IconButton>\n                        }\n                    />\n\n                    {/*USDC*/}\n                    <TokenListItem\n                        contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                        network=\"avax\"\n                        name=\"USDC\"\n                        price={prices.usdc}\n                    />\n\n                    {/*BRN*/}\n                    <TokenListItem\n                        contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                        network=\"avax\"\n                        name=\"BRN\"\n                        price={{inUSD: tokens.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"].pair.priceUsd}}\n                    />\n\n                    {/*FUD*/}\n                    <TokenListItem\n                        contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                        network=\"avax\"\n                        name=\"FUD\"\n                        price={prices.fud}\n                        rewards={{\n                            allTime: wallet.fudInfo?.totalDividends,\n                            pending: wallet.fudInfo?.withdrawableDividends,\n                            symbol: 'WAVAX'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFud} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fudInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fudInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    {/*FOOK*/}\n                    <TokenListItem\n                        contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                        network=\"avax\"\n                        name=\"FOOK\"\n                        price={prices.fook}\n                        rewards={{\n                            allTime: wallet.fookInfo?.totalDividends,\n                            pending: wallet.fookInfo?.withdrawableDividends,\n                            symbol: 'USDC'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFook} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.fookInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    {/*HEDGE*/}\n                    <TokenListItem\n                        contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                        name=\"Hedge Fund\"\n                        network=\"avax\"\n                        price={prices.hedge}\n                        rewards={{\n                            allTime: wallet.hedgeInfo?.totalDividends,\n                            pending: wallet.hedgeInfo?.withdrawableDividends,\n                            symbol: 'FOOK'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimHedge} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.hedgeInfo?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.hedgeInfo?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.hedgeInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n\n                    <Divider>BNB</Divider>\n\n                    {/*BNB*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"bnb\"\n                        name=\"BNB\"\n                        native\n                        price={prices.bnb}\n                        wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                    />\n\n                    {/*FEG*/}\n                    <TokenListItem\n                        contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                        name=\"FEG\"\n                        network=\"bnb\"\n                        price={prices.feg}\n                    />\n\n                    <Divider>ETH</Divider>\n\n                    {/*ETH*/}\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"eth\"\n                        name=\"ETH\"\n                        native\n                        price={prices.eth}\n                        wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                    />\n\n                    {/*FEG*/}\n                    <TokenListItem\n                        contract_address=\"0x389999216860AB8E0175387A0c90E5c52522C945\"\n                        name=\"FEG\"\n                        network=\"eth\"\n                        price={prices.feg_eth}\n                    />\n\n                    {/*Okinami*/}\n                    <TokenListItem\n                        contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                        network=\"eth\"\n                        name=\"Okinami\"\n                        price={prices.okinami}\n                    />\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, consensusAddress)\n\n        connectedContract.methods\n            .delegate(coineusValidatorAddress)\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{(amount - .1).toLocaleString('en-US', {maximumFractionDigits: 8})}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\nfunction CoineusOne(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, COINEUSONE_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(COINEUSONE_ADDRESS, toWei(amount))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n\n            contract\n                .methods\n                .allowance(wallet.address, COINEUSONE_ADDRESS)\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(COINEUSONE_ADDRESS, toWei(amount))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[COINEUSONE_ADDRESS])} CNSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[COINEUSONE_ADDRESS]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[COINEUSONE_ADDRESS])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[COINEUSONE_ADDRESS]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Button fullWidth\n                                onClick={() => setOpen(false)}>Cancel</Button>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices, rpc} = _store.coineus;\n\n    //FUSE\n    const web3 = new Web3(rpc.fuse);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, prices.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, prices.CNSFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves\n            ] = resp\n\n            store.dispatch(updatePrices({\n                name: 'fuse',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fusd',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'cns',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n        });\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc.avax);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, prices.HEDGEAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            store.dispatch(updatePrices({\n                name: 'avax',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'usdc',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fook',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fud',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'hedge',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n        });\n\n\n    //BSC\n    const web3BSC = new Web3(rpc.bnb);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, prices.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, prices.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            store.dispatch(updatePrices({\n                name: 'bnb',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'feg',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n        });\n\n\n    //ETH\n    const web3ETH = new Web3(rpc.eth);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, prices.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, prices.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, prices.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            store.dispatch(updatePrices({\n                name: 'eth',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'okinami',\n                price: {\n                    inUSD: okinami_usdc_reserves.reserve1/okinami_usdc_reserves.reserve0/2 * eth_price,\n                    inETH: okinami_usdc_reserves.reserve1/okinami_usdc_reserves.reserve0/2\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'feg_eth',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n        })\n        .catch(console.log);\n}","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {updateBalances} from \"../redux/slices/coineusSlice\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const dispatch = useDispatch();\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n\n            web3.eth.getBalance(wallet.address).then(resp => {\n                dispatch(updateBalances({\n                    chain: 'fuse',\n                    contract_address: 'native',\n                    balance: resp / (10 ** 18)\n                }))\n            })\n        } else {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: 0\n            }))\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * prices.fuse?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * prices.fuse?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                            <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                        </Tabs>\n                        {\n                            action === \"stake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"FUSE Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > 5000000) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse.native - .1)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                                <List style={{marginTop: 20}}>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Block\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Year\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Box>\n                        }\n\n                        {\n                            action === \"unstake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Staked FUSE\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(data.staked_amount / (10 ** 18))\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                        onClick={withdraw}>Unstake</Button>\n                            </Box>\n                        }\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {Button, Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function RewardsLocker() {\n\n    const {wallet,rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n\n    const [fudContract, setFudContract] = useState(undefined);\n    const [coineusContract, setCoineusContract] = useState(undefined);\n\n\n    useEffect(() => {\n\n        const web3AVAX = new Web3(rpc.avax);\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        setFudContract(fud_contract);\n        setCoineusContract(coineus_contract);\n\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n    }, [wallet.address]);\n\n    const claim = (contract) => {\n        contract.methods.getRewards()\n            .send({from:wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.fud_claimer && <Button variant=\"contained\" fullWidth style={{marginTop: 20}} onClick={()=>claim(fudContract)}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">Coineus Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.coineus_claimer && <Button variant=\"contained\" fullWidth style={{marginTop: 20}} onClick={()=>claim(coineusContract)}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function CoineusPortfolio() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const hedge_fund_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            hedge_fund_contract.methods.balanceOf(coineus_fund_address).call,\n            hedge_fund_contract.methods.getAccountDividendsInfo(coineus_fund_address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4]/(10**6),\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends: coineus_fund_hedge_fund_dividends[4]/(10**18)\n            })\n\n        });\n\n    }, []);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Rewards Locker\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"Hedge Fund Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance)) + \" Hedge Fund\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_hedge_fund_dividends) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const dex_screener = useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/sale'}>\n                            <ListItemText primary=\"Projects For Sale\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>CNS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}