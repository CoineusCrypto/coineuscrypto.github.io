{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","images/new_listings/dgnx.jpeg","images/new_listings/fud.jpeg","images/new_listings/fook.jpeg","images/new_listings/burnit.jpeg","images/new_listings/hedgefund.jpeg","images/new_listings/volt.jpeg","images/new_listings/okinami.jpeg","images/new_listings/feg_bsc.jpeg","images/new_listings/feg_eth.jpeg","components/AdScroll.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","views/EasyBridge.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","map","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","undefined","balances","Paper","marginBottom","secondaryAction","inUSD","staked","paddingTop","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","tokens","list","setList","useEffect","tmp","Object","entries","chain","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","variant","sx","fontSize","token","marginRight","initialState","address","type","info","avax","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BRNAVAXpair","DGNXAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","req","request","err","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","contract","Contract","coineus_abi","cnsone_contract","coineusone_abi","fusd_contract","volt_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","getBalance","methods","balanceOf","getAccountDividendsInfo","getAccount","delegatedAmount","fuse_balance","cns_balance","cnsone_balance","cnsone_info","fusd_balance","volt_balance","staked_fuse_with_coineus","dispatch","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","account","getFUSE","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","burnit_contract","dgnx_contract","burnit_dividends_contract","dividend_distributor_abi","callsAVAX","getUnpaidEarnings","shares","shareholderClaims","minPeriod","avax_balance","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","burnit_balance","dgnx_balance","burnit_unpaid","burnit_shares","burnit_shareHolderClaims","burnit_minPeriod","timeToClaim","parseInt","Date","getTime","catch","console","log","getAVAX","web3BSC","feg_contract","callsBSC","bnb_balance","getBNB","web3ETH","okinami_contract","feg_eth_contract","callsETH","eth_balance","okinami_balance","feg_eth_balance","getETH","AdScroll","burnit_logo","dgnx_logo","volt_logo","fud_logo","hedgefund_logo","fook_logo","okinami_logo","feg_eth","feg_bsc","image","HomePage","setPending","stakeOpen","setStakeOpen","chainTab","setChainTab","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","paddingBottom","Tabs","onChange","ev","val","Tab","IconButton","disabled","edge","PowerStake","onSubmit","onSuccess","onError","claim","gasPrice","fullWidth","coineusInfo","CoineusOne","claimDividend","DialogActions","delegate","setAmount","setAction","deposit","coineus_contract","Box","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","getPairPrices","fusd_fuse","unipair_abi","cns_fuse","volt_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","volt_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","burnit_avax","dgnx_avax","dgnx_avax2","DGNXAVAXpair2","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","burnit_avax_reserves","dgnx_avax_reserves","avax_price","inAVAX","brn0","brn1","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","oki0","oki1","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setData","connectedContract","setConnectedContract","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","LinearProgress","backgroundColor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","bottom","Alert","elevation","icon","CoineusSales","component","RouterLink","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","chain_symbol","toUpperCase","getUserInfo","now","distance","days","Math","floor","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","COINEUS_FUND_ADDRESS","RewardsLocker","dataFUSE","setDataFUSE","rewards_abi","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","web3FUSE","erc20_abi","coineusone_contract","callsFUSE","_address","fusd_balance_coineusone","getRewards","claimRandomToken","rCNSONEToEveryone","utils","toBN","coineus_fund_address","assurance_fund_address","coineus_validator_address","CoineusPortfolio","fuseData","setFuseData","callsF","coineus_fund_balance","assurance_fund_balance","coineus_fund_staked","assurance_fund_staked","coineus_fud_locker","hedge_fund_contract","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_hedge_fund_balance","coineus_fund_hedge_fund_dividends","coineus_fund_usdc_balance","coineus_fund_burnit_balance","coineus_fund_burnit_shares","coineus_fund_dgnx_balance","coineus_fund_burnit_dividends","totalValue","xyplot","BurnSupply","burnt","supply","percent","angle","PI","angle2","burntValue","percentStaked","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","opacity","radius","radius0","colorType","alignItems","Autorenew","Savings","Whatshot","CoineusContractAddress","Stats","totalD","setTotalD","totalStaked","setTotalStaked","totalBurnt","setTotalBurnt","validatorBal","setValidatorBal","pollingInterval","getCoineusInfo","getTotalDividendsDistributed","totalSupply","td","validator_cnsone","EasyBridge","reserves","setReserves","fuseOut","setFuseOut","amtRecieved","setAmtRecieved","txHash","setTxHash","txCost","setTxCost","router_abi","uni_abi","inputProps","startAdornment","hexToNumberString","logs","gasUsed","effectiveGasPrice","Divider","textDecorationColor","href","Coineus","getDexScreener","tokenList","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d07db3.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: '#00FB4D'\n    }\n}));\n\nexport default function PriceScroll() {\n\n    const classes = useStyles();\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                switch(symbol){\n                    case 'USDC':\n                    case 'fUSD':\n                    case 'WAVAX':\n                    case 'CNSONE':\n                        return[contract_address, token_info];\n                    default:\n                        break;\n                }\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n            return a.priceChange < b.priceChange ? 1 : -1\n        })\n\n        setList(tmp);\n\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={token.chain+\"_\"+token.contract_address}>\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}/>\n                                {token.contract_address !== 'native' && <span className={clsx(classes.networkChip, token.chain)}/>}\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                            />\n                        </ListItem>\n                        <Typography\n                            className={getColorClass(token.priceChange)}\n                            variant=\"h5\"\n                            fontWeight={700}\n                            textAlign='right'\n                            style={{\n                                marginRight: 20\n                        }}>{token.priceChange}%</Typography>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n    const cnsone_contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        contract.methods.balanceOf(wallet_address).call,\n        contract.methods.getAccountDividendsInfo(wallet_address).call,\n        cnsone_contract.methods.balanceOf(wallet_address).call,\n        cnsone_contract.methods.getAccount(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            cns_balance,\n            info,\n            cnsone_balance,\n            cnsone_info,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        cns_balance = cns_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            info: {\n                cns_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        //coineus one\n        const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = cnsone_info;\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",\n            info: {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            balance: cns_balance\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//fUSD\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",//CNSONE\n            balance: cnsone_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n    const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n    const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n    const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n    const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        fook_contract.methods.balanceOf(wallet_address).call,\n        fook_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        wavax_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        burnit_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n\n        burnit_dividends_contract.methods.getUnpaidEarnings(wallet_address).call,\n        burnit_dividends_contract.methods.shares(wallet_address).call,\n        burnit_dividends_contract.methods.shareholderClaims(wallet_address).call,\n        burnit_dividends_contract.methods.minPeriod().call,\n\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            balance,\n            info,\n            usdc_balance,\n            fud_balance,\n            fud_info,\n            wavax_balance,\n            hedge_balance,\n            hedge_info,\n            burnit_balance,\n            dgnx_balance,\n\n            burnit_unpaid,\n            burnit_shares,\n            burnit_shareHolderClaims,\n            burnit_minPeriod,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        balance = balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 6);\n        totalDividends = totalDividends / (10 ** 6);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n            balance: balance\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n            balance: wavax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n            balance: burnit_balance / (10 ** 9)\n        }))\n\n        let timeToClaim = (parseInt(burnit_shareHolderClaims) + parseInt(burnit_minPeriod)) - (new Date).getTime()/1000;\n        if(timeToClaim < 0) timeToClaim = 0\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n            info: {\n                withdrawableDividends: burnit_unpaid / (10**6),\n                totalDividends: burnit_shares[2] / (10**6),\n                secondsUntilAutoClaimAvailable: timeToClaim\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        // FUD TOKEN\n        withdrawableDividends = fud_info[3];\n        totalDividends = fud_info[4];\n        secondsUntilAutoClaimAvailable = fud_info[7];\n\n        fud_balance = fud_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n            balance: fud_balance\n        }))\n\n        // HEDGE TOKEN\n        withdrawableDividends = hedge_info[3];\n        totalDividends = hedge_info[4];\n        secondsUntilAutoClaimAvailable = hedge_info[7];\n\n        hedge_balance = hedge_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n            balance: hedge_balance\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n            balance: balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n    const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        okinami_contract.methods.balanceOf(wallet_address).call,\n        feg_eth_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            okinami_balance,\n            feg_eth_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n            balance: okinami_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n            balance: feg_eth_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","export default __webpack_public_path__ + \"static/media/dgnx.ff6dbd33.jpeg\";","export default __webpack_public_path__ + \"static/media/fud.11bfe713.jpeg\";","export default __webpack_public_path__ + \"static/media/fook.ee14acb7.jpeg\";","export default __webpack_public_path__ + \"static/media/burnit.a2d805a9.jpeg\";","export default __webpack_public_path__ + \"static/media/hedgefund.e27d41b1.jpeg\";","export default __webpack_public_path__ + \"static/media/volt.5625fde2.jpeg\";","export default __webpack_public_path__ + \"static/media/okinami.5aeb0739.jpeg\";","export default __webpack_public_path__ + \"static/media/feg_bsc.d7a25d3e.jpeg\";","export default __webpack_public_path__ + \"static/media/feg_eth.64b61e30.jpeg\";","import {Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton} from \"@mui/material\";\n\nimport dgnx_logo from '../images/new_listings/dgnx.jpeg';\nimport fud_logo from '../images/new_listings/fud.jpeg';\nimport fook_logo from '../images/new_listings/fook.jpeg';\nimport burnit_logo from '../images/new_listings/burnit.jpeg';\nimport hedgefund_logo from '../images/new_listings/hedgefund.jpeg';\nimport volt_logo from '../images/new_listings/volt.jpeg';\nimport okinami_logo from '../images/new_listings/okinami.jpeg';\nimport feg_bsc from '../images/new_listings/feg_bsc.jpeg';\nimport feg_eth from '../images/new_listings/feg_eth.jpeg';\n\nexport default function AdScroll() {\n\n    const list = [\n        burnit_logo,\n        dgnx_logo,\n        volt_logo,\n        fud_logo,\n        hedgefund_logo,\n        fook_logo,\n        okinami_logo,\n        feg_eth,\n        feg_bsc\n    ];\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(image => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={image}>\n                        <div style={{\n                            height: 115,\n                            width: 230,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <img src={image} height={115} style={{borderRadius: 4}}/>\n                        </div>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport coineusone_abi from '../abis/coineusone_abi.json';\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nimport {useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\nimport AdScroll from \"../components/AdScroll\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimBurnit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n            contract.methods\n                .claimDividend()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount * 100))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .0000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserBalances(wallet.address);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <AdScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserBalances(wallet.address);\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n                            {/*CNS*/}\n                            <TokenListItem\n                                contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                                network=\"fuse\"\n                                name=\"CNS\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends,\n                                    symbol: 'fUSD'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claim} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*CNSONE*/}\n                            <TokenListItem\n                                contract_address=\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"\n                                network=\"fuse\"\n                                name=\"CNSONE\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                secondaryAction={<CoineusOne onSuccess={() => getUserBalances(wallet.address)}/>}\n                                cnsDetails={wallet.info.fuse?.[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                                wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                            />\n\n                            {/*WAVAX*/}\n                            <TokenListItem\n                                contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                                network=\"avax\"\n                                name=\"WAVAX\"\n                                price={wallet.prices.avax?.[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                        }\n                                        edge=\"end\"\n                                        onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                        color=\"primary\"\n                                    >\n                                        <ChangeCircleIcon/>\n                                    </IconButton>\n                                }\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*DGNX*/}\n                            <TokenListItem\n                                contract_address=\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"\n                                network=\"avax\"\n                                name=\"DGNX\"\n                                price={wallet.prices.avax?.[\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"]}\n                            />\n\n                            {/*FUD*/}\n                            <TokenListItem\n                                contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                                network=\"avax\"\n                                name=\"FUD\"\n                                price={wallet.prices.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends,\n                                    symbol: 'WAVAX'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFud} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*BRN*/}\n                            <TokenListItem\n                                contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                                network=\"avax\"\n                                name=\"BRN\"\n                                price={wallet.prices.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimBurnit} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*FOOK*/}\n                            <TokenListItem\n                                contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                                network=\"avax\"\n                                name=\"FOOK\"\n                                price={wallet.prices.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFook} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*HEDGE*/}\n                            <TokenListItem\n                                contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                                name=\"Hedge Fund\"\n                                network=\"avax\"\n                                price={wallet.prices.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends,\n                                    symbol: 'FOOK'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimHedge} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                                name=\"FEG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0x389999216860AB8E0175387A0c90E5c52522C945\"\n                                name=\"FEG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0x389999216860AB8E0175387A0c90E5c52522C945\"]}\n                            />\n\n                            {/*Okinami*/}\n                            <TokenListItem\n                                contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                                network=\"eth\"\n                                name=\"Okinami\"\n                                price={wallet.prices.eth?.[\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"]}\n                            />\n\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{CoineusCryptoFormat(amount - .1)}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\nfunction CoineusOne(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])} CNSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, pairs.CNSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves,\n                volt_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CNS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xc2E299b47398963c618De5b05C6BdeCd4cc64022',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x7042807d547A2de0720421a6d2f629c9EB43E73D',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.HEDGEAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BRNAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n    const dgnx_avax2 = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair2);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call,\n        dgnx_avax2.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves,\n                burnit_avax_reserves,\n                dgnx_avax_reserves,\n                dgnx_avax_reserves2\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //WAVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //FOOK\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //FUD\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //HEDGE FUND\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG BSC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const oki0 = okinami_usdc_reserves.reserve0 / (10**9)\n            const oki1 = okinami_usdc_reserves.reserve1 / (10**6)\n\n            //OKINAMI\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                price: {\n                    inUSD: oki1/oki0,\n                    inETH: oki1/oki0\n                }\n            }));\n\n            //FEG ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address && wallet.chain === 122) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address, wallet.chain]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{CoineusCryptoFormat(data.amount_delegated)} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Day\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat((_rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYear / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Day\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat((rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYear / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(data.staked_amount / (10 ** 18) || \"--\")} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment,\n    ListItem,\n    ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport erc20_abi from \"../abis/IERC20.json\";\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst COINEUS_FUND_ADDRESS = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst FUD_FUND_ADDRESS = \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\";\n\nexport default function RewardsLocker() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [dataFUSE, setDataFUSE] = useState({});\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const getInfo = () => {\n        const web3AVAX = new Web3(rpc.avax);\n\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n\n        const web3FUSE = new Web3(rpc.fuse);\n\n        const fusd_contract = new web3FUSE.eth.Contract(erc20_abi, \"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\");\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        const callsFUSE = [\n            fusd_contract.methods.balanceOf(coineusone_contract._address).call\n        ]\n\n        makeBatchRequest(web3FUSE, callsFUSE).then(resp => {\n            let [\n                fusd_balance_coineusone\n            ] = resp;\n\n            setDataFUSE({\n                fusd_balance_coineusone\n            })\n\n        })\n    }\n\n    const claim = (contract) => {\n\n        const web3AVAX = new Web3(window.provider);\n\n        const _contract = new web3AVAX.eth.Contract(rewards_abi, contract);\n\n        _contract.methods.getRewards()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const claimFUSD = () => {\n\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.claimRandomToken(\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\")\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n\n    }\n\n    const rCNSONEToEveryone = () => {\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.rCNSONEToEveryone(web3FUSE.utils.toBN(amount * (10**18)))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    useEffect(getInfo, [wallet.address]);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {\n                wallet.address === FUD_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                                secondary=\"Claimed All-time\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        {\n                            data.fud_claimer &&\n                            <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}}\n                                    onClick={() => claim(\"0xb930131f9b73e229c1ae1cf67409e99336043dc2\")}>Claim</Button>\n                        }\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus Rewards Locker (FUD)</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                secondary=\"Claimed All-time\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        {\n                            data.coineus_claimer &&\n                            <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}}\n                                    onClick={() => claim(\"0x2873b157ba89812ddf297719b66585a3aa836599\")}>Claim</Button>\n                        }\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus ONE fUSD</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(dataFUSE.fusd_balance_coineusone)) + \" fUSD\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        <Button variant=\"contained\"\n                                disabled={wallet.chain !== 122} fullWidth style={{marginTop: 20}}\n                                onClick={claimFUSD}>Claim</Button>\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Reflect CNSONE</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n                        <Button fullWidth variant=\"contained\"\n                                disabled={!amount}\n                                onClick={rCNSONEToEveryone}>REFLECT CNSONE TO EVERYONE</Button>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst assurance_fund_address = \"0x09501F8Ca9476d0c516E121FB4dCE4B7b2301d51\";\nconst coineus_validator_address = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function CoineusPortfolio() {\n\n    const classes = useStyles();\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    const [fuseData, setFuseData] = useState({});\n\n    useEffect(() => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n        const consensusContract = new web3FUSE.eth.Contract(consensus_abi, consensusAddress);\n\n        const callsF = [\n            web3FUSE.eth.getBalance(coineus_fund_address),\n            web3FUSE.eth.getBalance(assurance_fund_address),\n            consensusContract.methods.delegatedAmount(coineus_fund_address, coineus_validator_address).call,\n            consensusContract.methods.delegatedAmount(assurance_fund_address, coineus_validator_address).call,\n        ];\n\n        makeBatchRequest(web3FUSE, callsF).then(resp => {\n            let [\n                coineus_fund_balance,\n                assurance_fund_balance,\n                coineus_fund_staked,\n                assurance_fund_staked\n            ] = resp;\n\n            coineus_fund_balance = coineus_fund_balance / (10 ** 18);\n            assurance_fund_balance = assurance_fund_balance / (10 ** 18);\n            coineus_fund_staked = coineus_fund_staked / (10 ** 18);\n            assurance_fund_staked = assurance_fund_staked / (10 ** 18);\n\n            setFuseData(\n                {\n                    coineus_fund_balance,\n                    assurance_fund_balance,\n                    coineus_fund_staked,\n                    assurance_fund_staked\n                }\n            )\n        })\n\n\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const hedge_fund_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n\n        const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n        const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n        const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            hedge_fund_contract.methods.balanceOf(coineus_fund_address).call,\n            hedge_fund_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            usdc_contract.methods.balanceOf(coineus_fund_address).call,\n\n            burnit_contract.methods.balanceOf(coineus_fund_address).call,\n            burnit_dividends_contract.methods.shares(coineus_fund_address).call,\n\n            dgnx_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends,\n\n                coineus_fund_usdc_balance,\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_shares,\n\n                coineus_fund_dgnx_balance\n\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4] / (10 ** 6),\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends: coineus_fund_hedge_fund_dividends[4] / (10 ** 18),\n\n                coineus_fund_usdc_balance: coineus_fund_usdc_balance / (10 ** 6),\n\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_dividends: coineus_fund_burnit_shares[2] / (10**6),\n\n                coineus_fund_dgnx_balance\n            })\n\n        });\n\n    }, []);\n\n    const totalValue = (formatWeiToNumber(data.coineus_fund_hedge_fund_balance) * wallet.prices.avax?.['0xe387cF241B6685D405C575ce35db78ed4844B34a']?.inUSD) +\n        (formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD) +\n        ((data.coineus_fund_burnit_balance / (10**9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD) +\n        (formatWeiToNumber(data.coineus_locked) * wallet.prices.avax?.['0x80363cc2CAa2545554d155031e47049ee2F98f33']?.inUSD) +\n        (\n            (\n                fuseData.coineus_fund_balance +\n                fuseData.coineus_fund_staked +\n                fuseData.assurance_fund_balance +\n                fuseData.assurance_fund_staked\n            ) * wallet.prices.fuse?.native?.inUSD\n        ) +\n        data.coineus_fund_usdc_balance\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n            <Grid item xs={12}>\n                <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusUSDFormat(totalValue)}\n                            secondary=\"Total Fund Value\"\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/logo.png\"/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUSE\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={\n                                    CoineusUSDFormat((\n                                        fuseData.coineus_fund_balance +\n                                        fuseData.coineus_fund_staked +\n                                        fuseData.assurance_fund_balance +\n                                        fuseData.assurance_fund_staked\n                                    ) * wallet.prices.fuse?.native?.inUSD)\n                                }\n                                secondary=\"USD Value\"\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_balance + fuseData.assurance_fund_balance) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Wallet\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_staked + fuseData.assurance_fund_staked) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Staked\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"USDC\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(data.coineus_fund_usdc_balance)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Rewards Locker\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_locked) * wallet.prices.avax?.['0x80363cc2CAa2545554d155031e47049ee2F98f33']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"DGNX\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance)) + \" DGNX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x9CcAd19669259C1FBF13FDa959400C871b3d0E00/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"BRN\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat((data.coineus_fund_burnit_balance / (10**9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_balance / (10**9))) + \" BRN\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_dividends)) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"Hedge Fund\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance) * wallet.prices.avax?.['0xe387cF241B6685D405C575ce35db78ed4844B34a']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance)) + \" Hedge Fund\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_hedge_fund_dividends) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Savings} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, staked} = props;\n\n    const angle = 360 * percent * (Math.PI / 180);\n\n    const percent2 = staked ? (staked - burnt) / supply : 0;\n    const angle2 = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = staked ? ((staked / supply) * 100).toFixed(2) : 0;\n\n    const colors = {\n        supply: '#fbca00',\n        burned: '#FF5733',\n        staked: '#C70039',\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: 0,\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angle,\n                            angle: angle + angle2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: 0,\n                            angle: angle,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -125,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            {staked && <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -180,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {percentStaked}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % CNSONE\n        </span>\n            </Typography>}\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Autorenew\n                        style={{color: colors.supply, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.supply, fontSize: 18}}>{CoineusCryptoFormat(supply)} <Typography\n                        variant=\"caption\">SUPPLY</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Savings\n                        style={{color: colors.staked, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.staked, fontSize: 18}}>{CoineusCryptoFormat(staked)} <Typography\n                        variant=\"caption\">COINEUS ONE</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Whatshot\n                        style={{color: colors.burned, marginRight: 10, marginTop: 3}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.burned, fontSize: 18}}>{CoineusCryptoFormat(burnt)} <Typography\n                        variant=\"caption\">BURNED</Typography></Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\nconst VALIDATOR_ADDRESS = '0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2';\n\nexport default function Stats() {\n\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalStaked, setTotalStaked] = useState(0);\n    const [totalBurnt, setTotalBurnt] = useState(0);\n    const [validatorBal, setValidatorBal] = useState(0);\n\n    const {data} = useGetTokenQuery(CoineusContractAddress, {\n        pollingInterval: 60000\n    });\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call,\n            cnsone_contract.methods.totalSupply().call,\n            cnsone_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call,\n            cnsone_contract.methods.balanceOf(VALIDATOR_ADDRESS).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td,\n                staked,\n                burnt,\n                validator_cnsone\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n\n            setTotalStaked(staked / (10 ** 18))\n            setTotalBurnt(burnt / (10 ** 18))\n\n            setValidatorBal(validator_cnsone / (10**18));\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(totalD)} fUSD` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(validatorBal)}\n                                secondary=\"Coineus One to Distribute\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                            <ListItemText\n                                primary={10}\n                                secondary=\"Distribution Per Hour\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={2000000}\n                        burnt={totalBurnt}\n                        staked={totalStaked}\n                        percent={totalBurnt / 2000000}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"Coineus (CNS)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Fuse (WFUSE)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    Avatar,\n    Button,\n    Container, Divider,\n    FormControl,\n    Grid,\n    InputAdornment, Link,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from '../abis/IPancakeRouter.json';\nimport uni_abi from '../abis/IUniswapV2Pair.json';\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x6483f166b9e4310a165a55fea04f867499aded06';\nconst routerAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E';\nconst easyBridgeAddress = '0xf79fa369aF0FC52260Bef080A62Cb2501863cfF7';\n\nexport default function EasyBridge() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n    const [amount, setAmount] = useState(\"\");\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0])\n    const [fuseOut, setFuseOut] = useState(0);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getFuseAmt = () => {\n\n        if (!amount || !reserves[0] || !reserves[1]) {\n            setFuseOut(undefined)\n            return;\n        }\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toBN(amount * (10 ** 18)), reserves[1], reserves[0]).call((err, resp) => {\n            setFuseOut(resp / (10 ** 18) * .98);\n        })\n    }\n\n    useEffect(getFuseAmt, [amount, reserves]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const bridge = () => {\n\n        const web3 = new Web3(window.provider);\n\n        web3.eth\n            .sendTransaction({\n                    to: easyBridgeAddress,\n                    from: wallet.address,\n                    value: web3.utils.toBN(amount * (10 ** 18))\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.logs[10].data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <FormControl fullWidth>\n                        <TextField\n                            autoComplete=\"off\"\n                            type=\"number\"\n                            value={amount}\n                            placeholder=\"Enter Amount\"\n                            onChange={(ev) => {\n                                setAmount(ev.target.value)\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    style: {textAlign: \"right\"},\n                                },\n                                startAdornment: <Avatar style={{marginRight: 10}} sx={{width: 24, height: 24}}\n                                                        src={`https://coineus.app/assets/tokens/bnb/logo.png`}/>,\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <Button variant=\"contained\" onClick={() => {\n                                        setAmount(wallet.balances.bnb.native)\n                                    }\n                                    }>MAX</Button>\n                                </InputAdornment>,\n                            }}\n                        />\n                    </FormControl>\n                    <ListItem disablePadding style={{marginTop: 10}}>\n                        <ListItemAvatar>\n                            <Avatar style={{marginLeft: 15}} sx={{width: 24, height: 24}}\n                                    src={`https://coineus.app/assets/tokens/fuse/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(fuseOut)} FUSE`}\n                            secondary=\"Estimated Out\"\n                            primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                            secondaryTypographyProps={{textAlign: 'right'}}\n                        />\n                    </ListItem>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 10}}\n                        onClick={bridge}\n                        disabled={!wallet.address || wallet.chain !== 56 || amount > wallet.balances.bnb.native}\n                    >BRIDGE</Button>\n                </Paper>\n                <Divider style={{marginTop: 10}}>SMART CHAIN</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    network=\"bnb\"\n                    name=\"BNB\"\n                    native\n                    price={wallet.prices.bnb?.native}\n                    wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                />\n\n                <Divider style={{marginTop: 10}}>FUSE NETWORK</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                    network=\"fuse\"\n                    name=\"FUSE\"\n                    native\n                    price={wallet.prices.fuse?.native}\n                />\n\n                {\n                    amtRecieved !== undefined && <>\n                        <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                        <Paper\n                            style={{\n                                backgroundColor: 'white',\n                                color: \"#000\",\n                                padding: 20,\n                                fontFamily: 'monospace'\n                            }}>\n                            <Grid container>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>Bridged</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(amtRecieved)} FUSE`}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(txCost)} BNB`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={6}/>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusUSDFormat(txCost * wallet.prices.bnb?.native?.inUSD)} USD`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                        <Link\n                                            style={{color: \"#000\", textDecorationColor: '#000'}}\n                                            href={`https://bscscan.com/tx/${txHash}`}\n                                            target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}}>\n                                    <Typography style={{fontFamily: 'monospace'}}>FUSE Balance update pending...</Typography>\n                                </Grid>\n                            </Grid>\n\n                        </Paper>\n                    </>\n                }\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\nimport EasyBridge from \"./views/EasyBridge\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                            <Route\n                                path={`/easybridge`}\n                                exact={true}\n                                element={<EasyBridge />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/easybridge'}>\n                            <ListItemText primary=\"Easy Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/sale'}>\n                            <ListItemText primary=\"Projects For Sale\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        {\n                            [\"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\", \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\"].indexOf(wallet.address) > -1 && <ListItem button component={RouterLink} to={'/rewards'}>\n                                <ListItemText primary=\"Rewards Lockers\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                            </ListItem>\n                        }\n\n\n                        <ListSubheader>CNS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://get.fuse.cash/mrxn/46qbc3i4'} target=\"_blank\">\n                            <ListItemText primary=\"fuse.cash\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}