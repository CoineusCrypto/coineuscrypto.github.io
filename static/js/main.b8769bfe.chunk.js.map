{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","map","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","undefined","balances","Paper","marginBottom","secondaryAction","inUSD","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","tokens","list","setList","useEffect","tmp","Object","entries","chain","token_info","t","push","sort","a","b","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","variant","sx","fontSize","token","marginRight","initialState","address","type","info","avax","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BRNAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","req","request","err","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","contract","Contract","coineus_abi","cnsone_contract","coineusone_abi","fusd_contract","volt_contract","getBalance","methods","balanceOf","getAccountDividendsInfo","getAccount","fuse_balance","cns_balance","cnsone_balance","cnsone_info","fusd_balance","volt_balance","dispatch","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","account","getFUSE","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","burnit_contract","callsAVAX","avax_balance","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","burnit_balance","catch","console","log","getAVAX","web3BSC","feg_contract","callsBSC","bnb_balance","getBNB","web3ETH","okinami_contract","feg_eth_contract","callsETH","eth_balance","okinami_balance","feg_eth_balance","getETH","HomePage","setPending","stakeOpen","setStakeOpen","chainTab","setChainTab","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","paddingBottom","Tabs","onChange","ev","val","Tab","IconButton","disabled","edge","PowerStake","onSubmit","onSuccess","onError","claim","gasPrice","fullWidth","coineusInfo","CoineusOne","toLocaleString","DialogActions","consensus_abi","delegate","setAmount","setAction","deposit","coineus_contract","Box","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","paddingTop","getPairPrices","fusd_fuse","unipair_abi","cns_fuse","volt_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","volt_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","burnit_avax","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","burnit_avax_reserves","avax_price","inAVAX","brn0","brn1","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","feg_eth","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","oki0","oki1","coineusValidatorAddress","consensusAddress","consensusContract","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setData","connectedContract","setConnectedContract","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","LinearProgress","Math","floor","backgroundColor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","bottom","Alert","elevation","icon","CoineusSales","component","RouterLink","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","getUserInfo","now","getTime","distance","days","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","RewardsLocker","rewards_abi","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","getRewards","coineus_fund_address","CoineusPortfolio","coineus_fud_locker","hedge_fund_contract","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_hedge_fund_balance","coineus_fund_hedge_fund_dividends","xyplot","BurnSupply","burnt","supply","percent","staked","angle","PI","angle2","burntValue","percentStaked","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","opacity","radius","radius0","colorType","alignItems","Autorenew","Savings","Whatshot","CoineusContractAddress","Stats","totalD","setTotalD","totalStaked","setTotalStaked","totalBurnt","setTotalBurnt","validatorBal","setValidatorBal","pollingInterval","getCoineusInfo","getTotalDividendsDistributed","totalSupply","td","validator_cnsone","Coineus","getDexScreener","tokenList","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8769bfe.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: '#00FB4D'\n    }\n}));\n\nexport default function PriceScroll() {\n\n    const classes = useStyles();\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                switch(symbol){\n                    case 'USDC':\n                    case 'fUSD':\n                    case 'WAVAX':\n                    case 'CNSONE':\n                        return[contract_address, token_info];\n                    default:\n                        break;\n                }\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n            return a.priceChange < b.priceChange ? 1 : -1\n        })\n\n        setList(tmp);\n\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={token.chain+\"_\"+token.contract_address}>\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}/>\n                                {token.contract_address !== 'native' && <span className={clsx(classes.networkChip, token.chain)}/>}\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                            />\n                        </ListItem>\n                        <Typography\n                            className={getColorClass(token.priceChange)}\n                            variant=\"h5\"\n                            fontWeight={700}\n                            textAlign='right'\n                            style={{\n                                marginRight: 20\n                        }}>{token.priceChange}%</Typography>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if(wallet_address === undefined){\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n    const cnsone_contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        contract.methods.balanceOf(wallet_address).call,\n        contract.methods.getAccountDividendsInfo(wallet_address).call,\n        cnsone_contract.methods.balanceOf(wallet_address).call,\n        cnsone_contract.methods.getAccount(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            cns_balance,\n            info,\n            cnsone_balance,\n            cnsone_info,\n            fusd_balance,\n            volt_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        cns_balance = cns_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            info: {\n                cns_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        //coineus one\n        const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = cnsone_info;\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",\n            info: {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            balance: cns_balance\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//fUSD\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",//CNSONE\n            balance: cnsone_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n    const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n    const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n    const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        fook_contract.methods.balanceOf(wallet_address).call,\n        fook_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        wavax_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        burnit_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            balance,\n            info,\n            usdc_balance,\n            fud_balance,\n            fud_info,\n            wavax_balance,\n            hedge_balance,\n            hedge_info,\n            burnit_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        balance = balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 6);\n        totalDividends = totalDividends / (10 ** 6);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n            balance: balance\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n            balance: wavax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n            balance: burnit_balance / (10 ** 9)\n        }))\n\n        // FUD TOKEN\n        withdrawableDividends = fud_info[3];\n        totalDividends = fud_info[4];\n        secondsUntilAutoClaimAvailable = fud_info[7];\n\n        fud_balance = fud_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n            balance: fud_balance\n        }))\n\n        // HEDGE TOKEN\n        withdrawableDividends = hedge_info[3];\n        totalDividends = hedge_info[4];\n        secondsUntilAutoClaimAvailable = hedge_info[7];\n\n        hedge_balance = hedge_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n            balance: hedge_balance\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n            balance: balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n    const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        okinami_contract.methods.balanceOf(wallet_address).call,\n        feg_eth_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            okinami_balance,\n            feg_eth_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n            balance: okinami_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n            balance: feg_eth_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport coineusone_abi from '../abis/coineusone_abi.json';\n\nimport {useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount * 100))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .0000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserBalances(wallet.address);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserBalances(wallet.address);\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n                            {/*CNS*/}\n                            <TokenListItem\n                                contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                                network=\"fuse\"\n                                name=\"CNS\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends,\n                                    symbol: 'fUSD'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claim} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*CNSONE*/}\n                            <TokenListItem\n                                contract_address=\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"\n                                network=\"fuse\"\n                                name=\"CNSONE\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                secondaryAction={<CoineusOne onSuccess={()=>getUserBalances(wallet.address)}/>}\n                                cnsDetails={wallet.info.fuse?.[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                                wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                            />\n\n                            {/*WAVAX*/}\n                            <TokenListItem\n                                contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                                network=\"avax\"\n                                name=\"WAVAX\"\n                                price={wallet.prices.avax?.[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                        }\n                                        edge=\"end\"\n                                        onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                        color=\"primary\"\n                                    >\n                                        <ChangeCircleIcon/>\n                                    </IconButton>\n                                }\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*BRN*/}\n                            <TokenListItem\n                                contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                                network=\"avax\"\n                                name=\"BRN\"\n                                price={wallet.prices.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]}\n                            />\n\n                            {/*FUD*/}\n                            <TokenListItem\n                                contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                                network=\"avax\"\n                                name=\"FUD\"\n                                price={wallet.prices.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends,\n                                    symbol: 'WAVAX'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFud} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*FOOK*/}\n                            <TokenListItem\n                                contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                                network=\"avax\"\n                                name=\"FOOK\"\n                                price={wallet.prices.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFook} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*HEDGE*/}\n                            <TokenListItem\n                                contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                                name=\"Hedge Fund\"\n                                network=\"avax\"\n                                price={wallet.prices.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends,\n                                    symbol: 'FOOK'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimHedge} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                                name=\"FEG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0x389999216860AB8E0175387A0c90E5c52522C945\"\n                                name=\"FEG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0x389999216860AB8E0175387A0c90E5c52522C945\"]}\n                            />\n\n                            {/*Okinami*/}\n                            <TokenListItem\n                                contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                                network=\"eth\"\n                                name=\"Okinami\"\n                                price={wallet.prices.eth?.[\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"]}\n                            />\n\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{(amount - .1).toLocaleString('en-US', {maximumFractionDigits: 8})}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\nfunction CoineusOne(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])} CNSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, pairs.CNSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves,\n                volt_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CNS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xc2E299b47398963c618De5b05C6BdeCd4cc64022',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x7042807d547A2de0720421a6d2f629c9EB43E73D',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.HEDGEAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BRNAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves,\n                burnit_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //WAVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //FOOK\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //FUD\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //HEDGE FUND\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG BSC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const oki0 = okinami_usdc_reserves.reserve0 / (10**9)\n            const oki1 = okinami_usdc_reserves.reserve1 / (10**6)\n\n            //OKINAMI\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                price: {\n                    inUSD: oki1/oki0,\n                    inETH: oki1/oki0\n                }\n            }));\n\n            //FEG ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                    minimumFractionDigits: 2,\n                                                    maximumFractionDigits: 6\n                                                })} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                    minimumFractionDigits: 2,\n                                                    maximumFractionDigits: 6\n                                                })} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                    minimumFractionDigits: 2,\n                                                    maximumFractionDigits: 8\n                                                })} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {Button, Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function RewardsLocker() {\n\n    const {wallet,rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n\n    useEffect(() => {\n\n        const web3AVAX = new Web3(rpc.avax);\n\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n    }, [wallet.address]);\n\n    const claim = (contract) => {\n\n        const web3AVAX = new Web3(window.provider);\n\n        const _contract = new web3AVAX.eth.Contract(rewards_abi, contract);\n\n        _contract.methods.getRewards()\n            .send({from:wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.fud_claimer && <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}} onClick={()=>claim(\"0xb930131f9b73e229c1ae1cf67409e99336043dc2\")}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">Coineus Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.coineus_claimer && <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}} onClick={()=>claim(\"0x2873b157ba89812ddf297719b66585a3aa836599\")}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function CoineusPortfolio() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const hedge_fund_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            hedge_fund_contract.methods.balanceOf(coineus_fund_address).call,\n            hedge_fund_contract.methods.getAccountDividendsInfo(coineus_fund_address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4]/(10**6),\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends: coineus_fund_hedge_fund_dividends[4]/(10**18)\n            })\n\n        });\n\n    }, []);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Rewards Locker\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"Hedge Fund Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance)) + \" Hedge Fund\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_hedge_fund_dividends) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Savings} from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, staked} = props;\n\n    const angle = 360 * percent * (Math.PI / 180);\n\n    const percent2 = staked ? (staked - burnt) / supply : 0;\n    const angle2 = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = staked ? ((staked / supply) * 100).toFixed(2) : 0;\n\n    const colors = {\n        supply: '#fbca00',\n        burned: '#FF5733',\n        staked: '#C70039',\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: 0,\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angle,\n                            angle: angle + angle2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: 0,\n                            angle: angle,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -125,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            {staked && <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -180,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {percentStaked}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % CNSONE\n        </span>\n            </Typography>}\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Autorenew\n                        style={{color: colors.supply, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.supply, fontSize: 18}}>{supply.toLocaleString()} <Typography\n                        variant=\"caption\">SUPPLY</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Savings\n                        style={{color: colors.staked, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.staked, fontSize: 18}}>{(staked).toLocaleString()} <Typography\n                        variant=\"caption\">COINEUS ONE</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Whatshot\n                        style={{color: colors.burned, marginRight: 10, marginTop: 3}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.burned, fontSize: 18}}>{burnt.toLocaleString()} <Typography\n                        variant=\"caption\">BURNED</Typography></Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\nconst VALIDATOR_ADDRESS = '0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2';\n\nexport default function Stats() {\n\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalStaked, setTotalStaked] = useState(0);\n    const [totalBurnt, setTotalBurnt] = useState(0);\n    const [validatorBal, setValidatorBal] = useState(0);\n\n    const {data} = useGetTokenQuery(CoineusContractAddress, {\n        pollingInterval: 60000\n    });\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call,\n            cnsone_contract.methods.totalSupply().call,\n            cnsone_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call,\n            cnsone_contract.methods.balanceOf(VALIDATOR_ADDRESS).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td,\n                staked,\n                burnt,\n                validator_cnsone\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n\n            setTotalStaked(staked / (10 ** 18))\n            setTotalBurnt(burnt / (10 ** 18))\n\n            setValidatorBal(validator_cnsone / (10**18));\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} fUSD` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(validatorBal)}\n                                secondary=\"Coineus One to Distribute\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                            <ListItemText\n                                primary={10}\n                                secondary=\"Distribution Per Hour\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={2000000}\n                        burnt={totalBurnt}\n                        staked={totalStaked}\n                        percent={totalBurnt / 2000000}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"Coineus (CNS)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Fuse (WFUSE)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(getUserBalances, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/sale'}>\n                            <ListItemText primary=\"Projects For Sale\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>CNS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}