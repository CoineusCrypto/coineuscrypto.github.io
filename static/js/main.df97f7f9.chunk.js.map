{"version":3,"sources":["theme.js","images/logo.svg","utils/format.js","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","components/PriceScroll.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","images/new_listings/dgnx.jpeg","images/new_listings/fud.jpeg","images/new_listings/fook.jpeg","images/new_listings/burnit.jpeg","images/new_listings/hedgefund.jpeg","images/new_listings/volt.jpeg","images/new_listings/okinami.jpeg","images/new_listings/feg_bsc.jpeg","images/new_listings/feg_eth.jpeg","components/AdScroll.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","views/EasyBridge.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","map","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","undefined","balances","Paper","marginBottom","secondaryAction","inUSD","staked","paddingTop","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","PriceScroll","tokens","list","setList","useEffect","tmp","Object","entries","chain","token_info","t","push","sort","a","b","console","log","gridAutoFlow","gap","overflowY","overscrollBehaviorX","scrollSnapType","i","scrollSnapAlign","maxWidth","objectFit","Skeleton","variant","sx","fontSize","token","marginRight","initialState","address","type","info","avax","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BRNAVAXpair","DGNXAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","req","request","err","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","contract","Contract","coineus_abi","cnsone_contract","coineusone_abi","fusd_contract","volt_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","getBalance","methods","balanceOf","getAccountDividendsInfo","getAccount","delegatedAmount","fuse_balance","cns_balance","cnsone_balance","cnsone_info","fusd_balance","volt_balance","staked_fuse_with_coineus","dispatch","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","account","getFUSE","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","burnit_contract","dgnx_contract","burnit_dividends_contract","dividend_distributor_abi","callsAVAX","getUnpaidEarnings","shares","shareholderClaims","minPeriod","avax_balance","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","burnit_balance","dgnx_balance","burnit_unpaid","burnit_shares","burnit_shareHolderClaims","burnit_minPeriod","timeToClaim","parseInt","Date","getTime","catch","getAVAX","web3BSC","feg_contract","callsBSC","bnb_balance","getBNB","web3ETH","okinami_contract","feg_eth_contract","callsETH","eth_balance","okinami_balance","feg_eth_balance","getETH","AdScroll","burnit_logo","dgnx_logo","volt_logo","fud_logo","hedgefund_logo","fook_logo","okinami_logo","feg_eth","feg_bsc","image","HomePage","setPending","stakeOpen","setStakeOpen","chainTab","setChainTab","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","paddingBottom","Tabs","onChange","ev","val","Tab","IconButton","disabled","edge","PowerStake","onSubmit","onSuccess","onError","claim","gasPrice","fullWidth","coineusInfo","CoineusOne","claimDividend","DialogActions","delegate","setAmount","setAction","deposit","coineus_contract","Box","disableGutters","disablePadding","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","getPairPrices","fusd_fuse","unipair_abi","cns_fuse","volt_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","volt_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","burnit_avax","dgnx_avax","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","burnit_avax_reserves","dgnx_avax_reserves","avax_price","inAVAX","brn0","brn1","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","oki0","oki1","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setData","connectedContract","setConnectedContract","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","interval","setInterval","clearInterval","estimateGas","gas","encodeABI","txData","to","handleError","message","toString","LinearProgress","backgroundColor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","bottom","Alert","elevation","icon","CoineusSales","component","RouterLink","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","chain_symbol","toUpperCase","getUserInfo","now","distance","days","Math","floor","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","COINEUS_FUND_ADDRESS","RewardsLocker","dataFUSE","setDataFUSE","rewards_abi","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","web3FUSE","erc20_abi","coineusone_contract","callsFUSE","_address","fusd_balance_coineusone","getRewards","claimRandomToken","rCNSONEToEveryone","utils","toBN","coineus_fund_address","assurance_fund_address","coineus_validator_address","CoineusPortfolio","fuseData","setFuseData","callsF","coineus_fund_balance","assurance_fund_balance","coineus_fund_staked","assurance_fund_staked","coineus_fud_locker","hedge_fund_contract","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_hedge_fund_balance","coineus_fund_hedge_fund_dividends","coineus_fund_usdc_balance","coineus_fund_burnit_balance","coineus_fund_burnit_shares","coineus_fund_dgnx_balance","coineus_fund_burnit_dividends","totalValue","xyplot","BurnSupply","burnt","supply","percent","angle","PI","angle2","burntValue","percentStaked","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","opacity","radius","radius0","colorType","alignItems","Autorenew","Savings","Whatshot","CoineusContractAddress","Stats","totalD","setTotalD","totalStaked","setTotalStaked","totalBurnt","setTotalBurnt","validatorBal","setValidatorBal","pollingInterval","getCoineusInfo","getTotalDividendsDistributed","totalSupply","td","validator_cnsone","EasyBridge","reserves","setReserves","fuseOut","setFuseOut","amtRecieved","setAmtRecieved","txHash","setTxHash","txCost","setTxCost","router_abi","uni_abi","inputProps","startAdornment","hexToNumberString","logs","gasUsed","effectiveGasPrice","Divider","textDecorationColor","href","Coineus","getDexScreener","tokenList","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df97f7f9.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#fbca00', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: '#00FB4D'\n    }\n}));\n\nexport default function PriceScroll() {\n\n    const classes = useStyles();\n\n    const {tokens} = useSelector(state => state.coineus);\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n\n        let tmp = [];\n        Object.entries(tokens).map(([chain, tokens]) => {\n            Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                const {name, symbol} = token_info;\n\n                switch(symbol){\n                    case 'USDC':\n                    case 'fUSD':\n                    case 'WAVAX':\n                    case 'CNSONE':\n                        return[contract_address, token_info];\n                    default:\n                        break;\n                }\n\n                let priceChange;\n                let priceUsd;\n                try {\n                    ({priceChange, priceUsd} = token_info.pair)\n                } catch {\n                    return[contract_address, token_info];\n                }\n\n                const t = {\n                    name,\n                    symbol,\n                    chain,\n                    contract_address,\n                    priceChange: priceChange.h24,\n                    priceUsd,\n                }\n\n                tmp.push(t);\n\n                return[contract_address, token_info];\n            });\n\n            return [chain, tokens];\n        });\n\n        tmp.sort((a, b) => {\n            return a.priceChange < b.priceChange ? 1 : -1\n        })\n\n        setList(tmp);\nconsole.log(tmp);\n    }, [tokens])\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(token => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={token.chain+\"_\"+token.contract_address}>\n                        <ListItem style={{\n                            width: 200,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src={`https://coineus.app/assets/tokens/${token.chain}/${token.contract_address === 'native' ? '' : token.contract_address + '/'}/logo.png`}/>\n                                {token.contract_address !== 'native' && <span className={clsx(classes.networkChip, token.chain)}/>}\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={token.symbol}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary={CoineusUSDFormat(token.priceUsd)}\n                            />\n                        </ListItem>\n                        <Typography\n                            className={getColorClass(token.priceChange)}\n                            variant=\"h5\"\n                            fontWeight={700}\n                            textAlign='right'\n                            style={{\n                                marginRight: 20\n                        }}>{token.priceChange}%</Typography>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n    const cnsone_contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        contract.methods.balanceOf(wallet_address).call,\n        contract.methods.getAccountDividendsInfo(wallet_address).call,\n        cnsone_contract.methods.balanceOf(wallet_address).call,\n        cnsone_contract.methods.getAccount(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            cns_balance,\n            info,\n            cnsone_balance,\n            cnsone_info,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        cns_balance = cns_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            info: {\n                cns_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        //coineus one\n        const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = cnsone_info;\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",\n            info: {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            balance: cns_balance\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//fUSD\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",//CNSONE\n            balance: cnsone_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n    const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n    const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n    const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n    const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        fook_contract.methods.balanceOf(wallet_address).call,\n        fook_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        wavax_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        burnit_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n\n        burnit_dividends_contract.methods.getUnpaidEarnings(wallet_address).call,\n        burnit_dividends_contract.methods.shares(wallet_address).call,\n        burnit_dividends_contract.methods.shareholderClaims(wallet_address).call,\n        burnit_dividends_contract.methods.minPeriod().call,\n\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            balance,\n            info,\n            usdc_balance,\n            fud_balance,\n            fud_info,\n            wavax_balance,\n            hedge_balance,\n            hedge_info,\n            burnit_balance,\n            dgnx_balance,\n\n            burnit_unpaid,\n            burnit_shares,\n            burnit_shareHolderClaims,\n            burnit_minPeriod,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        balance = balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 6);\n        totalDividends = totalDividends / (10 ** 6);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n            balance: balance\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n            balance: wavax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n            balance: burnit_balance / (10 ** 9)\n        }))\n\n        let timeToClaim = (parseInt(burnit_shareHolderClaims) + parseInt(burnit_minPeriod)) - (new Date).getTime()/1000;\n        if(timeToClaim < 0) timeToClaim = 0\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n            info: {\n                withdrawableDividends: burnit_unpaid / (10**6),\n                totalDividends: burnit_shares[2] / (10**6),\n                secondsUntilAutoClaimAvailable: timeToClaim\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        // FUD TOKEN\n        withdrawableDividends = fud_info[3];\n        totalDividends = fud_info[4];\n        secondsUntilAutoClaimAvailable = fud_info[7];\n\n        fud_balance = fud_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n            balance: fud_balance\n        }))\n\n        // HEDGE TOKEN\n        withdrawableDividends = hedge_info[3];\n        totalDividends = hedge_info[4];\n        secondsUntilAutoClaimAvailable = hedge_info[7];\n\n        hedge_balance = hedge_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n            balance: hedge_balance\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n            balance: balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n    const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        okinami_contract.methods.balanceOf(wallet_address).call,\n        feg_eth_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            okinami_balance,\n            feg_eth_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n            balance: okinami_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n            balance: feg_eth_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","export default __webpack_public_path__ + \"static/media/dgnx.ff6dbd33.jpeg\";","export default __webpack_public_path__ + \"static/media/fud.11bfe713.jpeg\";","export default __webpack_public_path__ + \"static/media/fook.ee14acb7.jpeg\";","export default __webpack_public_path__ + \"static/media/burnit.a2d805a9.jpeg\";","export default __webpack_public_path__ + \"static/media/hedgefund.e27d41b1.jpeg\";","export default __webpack_public_path__ + \"static/media/volt.5625fde2.jpeg\";","export default __webpack_public_path__ + \"static/media/okinami.5aeb0739.jpeg\";","export default __webpack_public_path__ + \"static/media/feg_bsc.d7a25d3e.jpeg\";","export default __webpack_public_path__ + \"static/media/feg_eth.64b61e30.jpeg\";","import {Grid, ListItem, ListItemAvatar, ListItemText, Paper, Skeleton} from \"@mui/material\";\n\nimport dgnx_logo from '../images/new_listings/dgnx.jpeg';\nimport fud_logo from '../images/new_listings/fud.jpeg';\nimport fook_logo from '../images/new_listings/fook.jpeg';\nimport burnit_logo from '../images/new_listings/burnit.jpeg';\nimport hedgefund_logo from '../images/new_listings/hedgefund.jpeg';\nimport volt_logo from '../images/new_listings/volt.jpeg';\nimport okinami_logo from '../images/new_listings/okinami.jpeg';\nimport feg_bsc from '../images/new_listings/feg_bsc.jpeg';\nimport feg_eth from '../images/new_listings/feg_eth.jpeg';\n\nexport default function AdScroll() {\n\n    const list = [\n        burnit_logo,\n        dgnx_logo,\n        volt_logo,\n        fud_logo,\n        hedgefund_logo,\n        fook_logo,\n        okinami_logo,\n        feg_eth,\n        feg_bsc\n    ];\n\n    return <Grid item xs={12}>\n        <div style={{\n            margin: '0 auto',\n            display: 'grid',\n            gridAutoFlow: 'column',\n            gap: '1rem',\n            height: 'calc(105px + 1rem)',\n            overflowY: 'auto',\n            overscrollBehaviorX: 'contain',\n            scrollSnapType: 'x mandatory'\n        }}>\n            {\n                list.length === 0 && <>\n                {\n                    [0,1,2].map(i => {\n                        return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={i}>\n                            <ListItem style={{\n                                width: 200,\n                                maxWidth: 'none',\n                                objectFit: 'contain'\n                            }}>\n                                <ListItemAvatar>\n                                    <Skeleton variant=\"circular\" width={40} height={40} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                    secondary={<Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />}\n                                />\n                            </ListItem>\n                        </Paper>\n                    })\n                }\n\n                </>\n            }\n\n            {\n                list.map(image => {\n                    return <Paper style={{scrollSnapAlign: 'start', height: 115}} key={image}>\n                        <div style={{\n                            height: 115,\n                            width: 230,\n                            maxWidth: 'none',\n                            objectFit: 'contain'\n                        }}>\n                            <img src={image} height={115} style={{borderRadius: 4}}/>\n                        </div>\n                    </Paper>\n                })\n            }\n        </div>\n\n    </Grid>\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    IconButton,\n    DialogContent,\n    DialogActions,\n    List,\n    Tabs,\n    Tab,\n    Box,\n    FormControl,\n    TextField, InputAdornment,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport coineusone_abi from '../abis/coineusone_abi.json';\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nimport {useState} from \"react\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport PriceScroll from \"../components/PriceScroll\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\nimport AdScroll from \"../components/AdScroll\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimBurnit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n            contract.methods\n                .claimDividend()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount * 100))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .0000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserBalances(wallet.address);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, Coineus One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <PriceScroll/>\n\n                <AdScroll/>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.fuse +\n                                    wallet.totals.avax +\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"avax\" value=\"avax\" label=\"AVAX\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'fuse' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.fuse)}\n                                        secondary=\"Total FUSE Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                            <TokenListItem\n                                contract_address=\"native\"\n                                wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                                network=\"fuse\"\n                                name=\"FUSE\"\n                                native\n                                price={wallet.prices.fuse?.native}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={wallet.chain !== 122}\n                                        edge=\"end\"\n                                        aria-label=\"stake\"\n                                        onClick={() => setStakeOpen(true)}\n                                        color=\"primary\"\n                                    >\n                                        <BoltIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <PowerStake\n                                open={stakeOpen}\n                                amount={wallet.balances.fuse.native}\n                                close={() => setStakeOpen(false)}\n                                onSubmit={() => {\n                                    setStakeOpen(false);\n                                    setPending(true);\n                                }}\n                                onSuccess={() => {\n                                    getUserBalances(wallet.address);\n                                    setPending(false);\n                                }}\n                                onError={(err) => {\n                                    setPending(false);\n                                }}\n                            />\n\n                            {/*fUSD*/}\n                            <TokenListItem\n                                contract_address=\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"\n                                network=\"fuse\"\n                                name=\"fUSD\"\n                                price={wallet.prices.fuse?.[\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\"]}\n                            />\n\n                            {/*CNS*/}\n                            <TokenListItem\n                                contract_address=\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"\n                                network=\"fuse\"\n                                name=\"CNS\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                rewards={{\n                                    allTime: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.totalDividends,\n                                    pending: wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends,\n                                    symbol: 'fUSD'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claim} variant='contained' fullWidth\n                                                disabled={wallet.chain !== 122 || wallet.info.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]?.withdrawableDividends === 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : `Claim ${wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*CNSONE*/}\n                            <TokenListItem\n                                contract_address=\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"\n                                network=\"fuse\"\n                                name=\"CNSONE\"\n                                price={wallet.prices.fuse?.[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                secondaryAction={<CoineusOne onSuccess={() => getUserBalances(wallet.address)}/>}\n                                cnsDetails={wallet.info.fuse?.[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                            />\n\n                            {/*VOLT*/}\n                            <TokenListItem\n                                contract_address=\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"\n                                network=\"fuse\"\n                                name=\"VOLT\"\n                                price={wallet.prices.fuse?.[\"0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4\"]}\n                            />\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'avax' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.avax)}\n                                        secondary=\"Total AVAX Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"avax\"\n                                name=\"AVAX\"\n                                native\n                                price={wallet.prices.avax?.native}\n                                wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                            />\n\n                            {/*WAVAX*/}\n                            <TokenListItem\n                                contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                                network=\"avax\"\n                                name=\"WAVAX\"\n                                price={wallet.prices.avax?.[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]}\n                                secondaryAction={\n                                    <IconButton\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                        }\n                                        edge=\"end\"\n                                        onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                        color=\"primary\"\n                                    >\n                                        <ChangeCircleIcon/>\n                                    </IconButton>\n                                }\n                            />\n\n                            {/*USDC*/}\n                            <TokenListItem\n                                contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                                network=\"avax\"\n                                name=\"USDC\"\n                                price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                            />\n\n                            {/*DGNX*/}\n                            <TokenListItem\n                                contract_address=\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"\n                                network=\"avax\"\n                                name=\"DGNX\"\n                                price={wallet.prices.avax?.[\"0x51e48670098173025C477D9AA3f0efF7BF9f7812\"]}\n                            />\n\n                            {/*FUD*/}\n                            <TokenListItem\n                                contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                                network=\"avax\"\n                                name=\"FUD\"\n                                price={wallet.prices.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends,\n                                    symbol: 'WAVAX'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFud} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*BRN*/}\n                            <TokenListItem\n                                contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                                network=\"avax\"\n                                name=\"BRN\"\n                                price={wallet.prices.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimBurnit} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*FOOK*/}\n                            <TokenListItem\n                                contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                                network=\"avax\"\n                                name=\"FOOK\"\n                                price={wallet.prices.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends,\n                                    symbol: 'USDC'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimFook} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                            {/*HEDGE*/}\n                            <TokenListItem\n                                contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                                name=\"Hedge Fund\"\n                                network=\"avax\"\n                                price={wallet.prices.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]}\n                                rewards={{\n                                    allTime: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.totalDividends,\n                                    pending: wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends,\n                                    symbol: 'FOOK'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#fbca00'}}>\n                                        <Button onClick={claimHedge} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"\n                                name=\"FEG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167\"]}\n                            />\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*FEG*/}\n                            <TokenListItem\n                                contract_address=\"0x389999216860AB8E0175387A0c90E5c52522C945\"\n                                name=\"FEG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0x389999216860AB8E0175387A0c90E5c52522C945\"]}\n                            />\n\n                            {/*Okinami*/}\n                            <TokenListItem\n                                contract_address=\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"\n                                network=\"eth\"\n                                name=\"Okinami\"\n                                price={wallet.prices.eth?.[\"0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121\"]}\n                            />\n\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount, onSubmit, onSuccess, onError} = props;\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\")//fuse consensus address\n\n        connectedContract.methods\n            .delegate(\"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\")//validator address\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1),\n                gasPrice: 10000000000\n            })\n            .once('transactionHash', function (tx) {\n                onSubmit();\n            })\n            .on('error', function (error) {\n                onError(error)\n            })\n            .then(function (receipt) {\n                onSuccess()\n            })\n            .catch((error) => {\n                onError(error)\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{CoineusCryptoFormat(amount - .1)}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={close}>cancel</Button>\n            <Button onClick={delegate} variant=\"contained\">Stake</Button>\n        </DialogActions>\n    </Dialog>\n}\n\nfunction CoineusOne(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {onSuccess} = props;\n\n    const [open, setOpen] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [action, setAction] = useState('deposit');\n\n    const deposit = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const coineus_contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            coineus_contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        coineus_contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                deposit()\n                            });\n                    } else {\n                        deposit()\n                    }\n                })\n\n            const deposit = () => {\n                contract.methods.deposit(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    const withdraw = async () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if ((resp / (10 ** 18)) < amount) {\n                        contract\n                            .methods\n                            .approve(\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\", toWei(2000000))\n                            .send({from: wallet.address, gasPrice: 10000000000})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                contract.methods.withdraw(toWei(amount))\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        onSuccess();\n                        setAmount('');\n                        setOpen(false);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return <>\n\n        <IconButton\n            disabled={\n                wallet.chain !== 122\n            }\n            edge=\"end\"\n            onClick={() => setOpen(true)}\n            color=\"primary\"\n        >\n            <SwapVerticalCircleIcon/>\n        </IconButton>\n\n        <Dialog open={open} fullWidth maxWidth=\"sm\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"deposit\" value=\"deposit\" label=\"Deposit\"/>\n                            <Tab id=\"withdrawal\" value=\"withdrawal\" label=\"Withdrawal\"/>\n                        </Tabs>\n                        {\n                            action === \"deposit\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])} CNS`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\"]}\n                                        onClick={deposit}>Deposit</Button>\n                            </Box>\n                        }\n\n                        {\n                            action === \"withdrawal\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])} CNSONE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"])\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > wallet.balances.fuse[\"0x7042807d547A2de0720421a6d2f629c9EB43E73D\"]}\n                                        onClick={withdraw}>Withdrawal</Button>\n                            </Box>\n                        }\n                        <Box style={{padding: 20, paddingTop: 0}}>\n\n                            <Button fullWidth\n                                    onClick={() => setOpen(false)}>Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Dialog>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, pairs.CNSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves,\n                volt_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CNS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xc2E299b47398963c618De5b05C6BdeCd4cc64022',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x7042807d547A2de0720421a6d2f629c9EB43E73D',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.HEDGEAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BRNAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves,\n                burnit_avax_reserves,\n                dgnx_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //WAVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //FOOK\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //FUD\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //HEDGE FUND\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG BSC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const oki0 = okinami_usdc_reserves.reserve0 / (10**9)\n            const oki1 = okinami_usdc_reserves.reserve1 / (10**6)\n\n            //OKINAMI\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                price: {\n                    inUSD: oki1/oki0,\n                    inETH: oki1/oki0\n                }\n            }));\n\n            //FEG ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address && wallet.chain === 122) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address, wallet.chain]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{CoineusCryptoFormat(data.amount_delegated)} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Day\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat((_rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${CoineusCryptoFormat(_rewardPerYear / (10 ** 18))} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYourBlocks / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Day\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat((rewardPerYourBlocks * 12 * 24) / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(rewardPerYear / (10 ** 18))} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(data.staked_amount / (10 ** 18) || \"--\")} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment,\n    ListItem,\n    ListItemText,\n    Paper,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport erc20_abi from \"../abis/IERC20.json\";\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nconst COINEUS_FUND_ADDRESS = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst FUD_FUND_ADDRESS = \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\";\n\nexport default function RewardsLocker() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [dataFUSE, setDataFUSE] = useState({});\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const getInfo = () => {\n        const web3AVAX = new Web3(rpc.avax);\n\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n\n        const web3FUSE = new Web3(rpc.fuse);\n\n        const fusd_contract = new web3FUSE.eth.Contract(erc20_abi, \"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\");\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        const callsFUSE = [\n            fusd_contract.methods.balanceOf(coineusone_contract._address).call\n        ]\n\n        makeBatchRequest(web3FUSE, callsFUSE).then(resp => {\n            let [\n                fusd_balance_coineusone\n            ] = resp;\n\n            setDataFUSE({\n                fusd_balance_coineusone\n            })\n\n        })\n    }\n\n    const claim = (contract) => {\n\n        const web3AVAX = new Web3(window.provider);\n\n        const _contract = new web3AVAX.eth.Contract(rewards_abi, contract);\n\n        _contract.methods.getRewards()\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    const claimFUSD = () => {\n\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.claimRandomToken(\"0x249BE57637D8B013Ad64785404b24aeBaE9B098B\")\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n\n    }\n\n    const rCNSONEToEveryone = () => {\n        const web3FUSE = new Web3(window.provider);\n        const coineusone_contract = new web3FUSE.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n\n        coineusone_contract.methods.rCNSONEToEveryone(web3FUSE.utils.toBN(amount * (10**18)))\n            .send({from: wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                getInfo();\n            });\n    }\n\n    useEffect(getInfo, [wallet.address]);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            {\n                wallet.address === FUD_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                                secondary=\"Claimed All-time\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        {\n                            data.fud_claimer &&\n                            <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}}\n                                    onClick={() => claim(\"0xb930131f9b73e229c1ae1cf67409e99336043dc2\")}>Claim</Button>\n                        }\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus Rewards Locker (FUD)</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                secondary=\"Claimed All-time\"\n                            />\n                        </ListItem>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        {\n                            data.coineus_claimer &&\n                            <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}}\n                                    onClick={() => claim(\"0x2873b157ba89812ddf297719b66585a3aa836599\")}>Claim</Button>\n                        }\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Coineus ONE fUSD</Typography>\n                        <ListItem disablePadding>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(dataFUSE.fusd_balance_coineusone)) + \" fUSD\"}\n                                secondary=\"Claimable\"\n                            />\n                        </ListItem>\n                        <Button variant=\"contained\"\n                                disabled={wallet.chain !== 122} fullWidth style={{marginTop: 20}}\n                                onClick={claimFUSD}>Claim</Button>\n                    </Paper>\n                </Grid>\n            }\n\n\n            {\n                wallet.address === COINEUS_FUND_ADDRESS && <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h6\">Reflect CNSONE</Typography>\n                        <FormControl fullWidth style={{marginBottom: 20, marginTop: 20}}>\n                            <TextField\n                                autoComplete=\"off\"\n                                type=\"number\"\n                                value={amount}\n                                placeholder=\"Enter Amount\"\n                                onChange={(ev) => {\n                                    setAmount(ev.target.value)\n                                }}\n                            />\n                        </FormControl>\n                        <Button fullWidth variant=\"contained\"\n                                disabled={!amount}\n                                onClick={rCNSONEToEveryone}>REFLECT CNSONE TO EVERYONE</Button>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport {makeStyles} from \"@mui/styles\";\nimport clsx from \"clsx\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\nconst assurance_fund_address = \"0x09501F8Ca9476d0c516E121FB4dCE4B7b2301d51\";\nconst coineus_validator_address = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function CoineusPortfolio() {\n\n    const classes = useStyles();\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    const [fuseData, setFuseData] = useState({});\n\n    useEffect(() => {\n\n        const web3FUSE = new Web3(rpc.fuse);\n        const consensusContract = new web3FUSE.eth.Contract(consensus_abi, consensusAddress);\n\n        const callsF = [\n            web3FUSE.eth.getBalance(coineus_fund_address),\n            web3FUSE.eth.getBalance(assurance_fund_address),\n            consensusContract.methods.delegatedAmount(coineus_fund_address, coineus_validator_address).call,\n            consensusContract.methods.delegatedAmount(assurance_fund_address, coineus_validator_address).call,\n        ];\n\n        makeBatchRequest(web3FUSE, callsF).then(resp => {\n            let [\n                coineus_fund_balance,\n                assurance_fund_balance,\n                coineus_fund_staked,\n                assurance_fund_staked\n            ] = resp;\n\n            coineus_fund_balance = coineus_fund_balance / (10 ** 18);\n            assurance_fund_balance = assurance_fund_balance / (10 ** 18);\n            coineus_fund_staked = coineus_fund_staked / (10 ** 18);\n            assurance_fund_staked = assurance_fund_staked / (10 ** 18);\n\n            setFuseData(\n                {\n                    coineus_fund_balance,\n                    assurance_fund_balance,\n                    coineus_fund_staked,\n                    assurance_fund_staked\n                }\n            )\n        })\n\n\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const hedge_fund_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n\n        const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n        const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n        const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            hedge_fund_contract.methods.balanceOf(coineus_fund_address).call,\n            hedge_fund_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            usdc_contract.methods.balanceOf(coineus_fund_address).call,\n\n            burnit_contract.methods.balanceOf(coineus_fund_address).call,\n            burnit_dividends_contract.methods.shares(coineus_fund_address).call,\n\n            dgnx_contract.methods.balanceOf(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends,\n\n                coineus_fund_usdc_balance,\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_shares,\n\n                coineus_fund_dgnx_balance\n\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4] / (10 ** 6),\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends: coineus_fund_hedge_fund_dividends[4] / (10 ** 18),\n\n                coineus_fund_usdc_balance: coineus_fund_usdc_balance / (10 ** 6),\n\n\n                coineus_fund_burnit_balance,\n                coineus_fund_burnit_dividends: coineus_fund_burnit_shares[2] / (10**6),\n\n                coineus_fund_dgnx_balance\n            })\n\n        });\n\n    }, []);\n\n    const totalValue = (formatWeiToNumber(data.coineus_fund_hedge_fund_balance) * wallet.prices.avax?.['0xe387cF241B6685D405C575ce35db78ed4844B34a']?.inUSD) +\n        (formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD) +\n        ((data.coineus_fund_burnit_balance / (10**9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD) +\n        (formatWeiToNumber(data.coineus_locked) * wallet.prices.avax?.['0x80363cc2CAa2545554d155031e47049ee2F98f33']?.inUSD) +\n        (\n            (\n                fuseData.coineus_fund_balance +\n                fuseData.coineus_fund_staked +\n                fuseData.assurance_fund_balance +\n                fuseData.assurance_fund_staked\n            ) * wallet.prices.fuse?.native?.inUSD\n        ) +\n        data.coineus_fund_usdc_balance\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n            <Grid item xs={12}>\n                <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                    <ListItem>\n                        <ListItemText\n                            primary={CoineusUSDFormat(totalValue)}\n                            secondary=\"Total Fund Value\"\n                            primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem', textAlign: 'right'}}\n                            secondaryTypographyProps={{color: '#000', textAlign: 'right'}}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/fuse/logo.png\"/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUSE\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={\n                                    CoineusUSDFormat((\n                                        fuseData.coineus_fund_balance +\n                                        fuseData.coineus_fund_staked +\n                                        fuseData.assurance_fund_balance +\n                                        fuseData.assurance_fund_staked\n                                    ) * wallet.prices.fuse?.native?.inUSD)\n                                }\n                                secondary=\"USD Value\"\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_balance + fuseData.assurance_fund_balance) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Wallet\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(fuseData.coineus_fund_staked + fuseData.assurance_fund_staked) + \" FUSE\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Staked\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"USDC\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(data.coineus_fund_usdc_balance)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Rewards Locker\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_locked) * wallet.prices.avax?.['0x80363cc2CAa2545554d155031e47049ee2F98f33']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x51e48670098173025C477D9AA3f0efF7BF9f7812/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"DGNX\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance) * wallet.prices.avax?.['0x51e48670098173025C477D9AA3f0efF7BF9f7812']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_dgnx_balance)) + \" DGNX\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x9CcAd19669259C1FBF13FDa959400C871b3d0E00/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"BRN\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat((data.coineus_fund_burnit_balance / (10**9)) * wallet.prices.avax?.['0x9CcAd19669259C1FBF13FDa959400C871b3d0E00']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_balance / (10**9))) + \" BRN\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_dividends)) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_fook_balance) * wallet.prices.avax?.['0x95923F63dA09B4f7520f7C65a31F318D8228B744']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\"/>\n                                <span className={clsx(classes.networkChip, 'avax')}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"Hedge Fund\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance) * wallet.prices.avax?.['0xe387cF241B6685D405C575ce35db78ed4844B34a']?.inUSD)}\n                                primaryTypographyProps={{fontWeight: 700, textAlign: 'right'}}\n                                secondary=\"USD Value\"\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance)) + \" Hedge Fund\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_hedge_fund_dividends) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight: 700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Savings} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, staked} = props;\n\n    const angle = 360 * percent * (Math.PI / 180);\n\n    const percent2 = staked ? (staked - burnt) / supply : 0;\n    const angle2 = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = staked ? ((staked / supply) * 100).toFixed(2) : 0;\n\n    const colors = {\n        supply: '#fbca00',\n        burned: '#FF5733',\n        staked: '#C70039',\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: 0,\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angle,\n                            angle: angle + angle2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: 0,\n                            angle: angle,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -125,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            {staked && <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -180,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {percentStaked}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % CNSONE\n        </span>\n            </Typography>}\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Autorenew\n                        style={{color: colors.supply, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.supply, fontSize: 18}}>{CoineusCryptoFormat(supply)} <Typography\n                        variant=\"caption\">SUPPLY</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Savings\n                        style={{color: colors.staked, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.staked, fontSize: 18}}>{CoineusCryptoFormat(staked)} <Typography\n                        variant=\"caption\">COINEUS ONE</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Whatshot\n                        style={{color: colors.burned, marginRight: 10, marginTop: 3}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.burned, fontSize: 18}}>{CoineusCryptoFormat(burnt)} <Typography\n                        variant=\"caption\">BURNED</Typography></Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\nconst COINEUSONE_ADDRESS = '0x7042807d547A2de0720421a6d2f629c9EB43E73D';\nconst VALIDATOR_ADDRESS = '0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2';\n\nexport default function Stats() {\n\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalStaked, setTotalStaked] = useState(0);\n    const [totalBurnt, setTotalBurnt] = useState(0);\n    const [validatorBal, setValidatorBal] = useState(0);\n\n    const {data} = useGetTokenQuery(CoineusContractAddress, {\n        pollingInterval: 60000\n    });\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const cnsone_contract = new web3.eth.Contract(coineusone_abi, COINEUSONE_ADDRESS);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call,\n            cnsone_contract.methods.totalSupply().call,\n            cnsone_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call,\n            cnsone_contract.methods.balanceOf(VALIDATOR_ADDRESS).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td,\n                staked,\n                burnt,\n                validator_cnsone\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n\n            setTotalStaked(staked / (10 ** 18))\n            setTotalBurnt(burnt / (10 ** 18))\n\n            setValidatorBal(validator_cnsone / (10**18));\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(totalD)} fUSD` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(validatorBal)}\n                                secondary=\"Coineus One to Distribute\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                            <ListItemText\n                                primary={10}\n                                secondary=\"Distribution Per Hour\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={2000000}\n                        burnt={totalBurnt}\n                        staked={totalStaked}\n                        percent={totalBurnt / 2000000}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"Coineus (CNS)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Fuse (WFUSE)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    Avatar,\n    Button,\n    Container, Divider,\n    FormControl,\n    Grid,\n    InputAdornment, Link,\n    ListItem, ListItemAvatar,\n    ListItemText,\n    Paper,\n    TextField, Typography\n} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport router_abi from '../abis/IPancakeRouter.json';\nimport uni_abi from '../abis/IUniswapV2Pair.json';\nimport Web3 from \"web3\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x6483f166b9e4310a165a55fea04f867499aded06';\nconst routerAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E';\nconst easyBridgeAddress = '0xf79fa369aF0FC52260Bef080A62Cb2501863cfF7';\n\nexport default function EasyBridge() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n    const [amount, setAmount] = useState(\"\");\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0])\n    const [fuseOut, setFuseOut] = useState(0);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getFuseAmt = () => {\n\n        if (!amount || !reserves[0] || !reserves[1]) {\n            setFuseOut(undefined)\n            return;\n        }\n\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.quote(web3.utils.toBN(amount * (10 ** 18)), reserves[1], reserves[0]).call((err, resp) => {\n            setFuseOut(resp / (10 ** 18) * .98);\n        })\n    }\n\n    useEffect(getFuseAmt, [amount, reserves]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.bnb);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const bridge = () => {\n\n        const web3 = new Web3(window.provider);\n\n        web3.eth\n            .sendTransaction({\n                    to: easyBridgeAddress,\n                    from: wallet.address,\n                    value: web3.utils.toBN(amount * (10 ** 18))\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.logs[10].data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <FormControl fullWidth>\n                        <TextField\n                            autoComplete=\"off\"\n                            type=\"number\"\n                            value={amount}\n                            placeholder=\"Enter Amount\"\n                            onChange={(ev) => {\n                                setAmount(ev.target.value)\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    style: {textAlign: \"right\"},\n                                },\n                                startAdornment: <Avatar style={{marginRight: 10}} sx={{width: 24, height: 24}}\n                                                        src={`https://coineus.app/assets/tokens/bnb/logo.png`}/>,\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <Button variant=\"contained\" onClick={() => {\n                                        setAmount(wallet.balances.bnb.native)\n                                    }\n                                    }>MAX</Button>\n                                </InputAdornment>,\n                            }}\n                        />\n                    </FormControl>\n                    <ListItem disablePadding style={{marginTop: 10}}>\n                        <ListItemAvatar>\n                            <Avatar style={{marginLeft: 15}} sx={{width: 24, height: 24}}\n                                    src={`https://coineus.app/assets/tokens/fuse/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(fuseOut)} FUSE`}\n                            secondary=\"Estimated Out\"\n                            primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                            secondaryTypographyProps={{textAlign: 'right'}}\n                        />\n                    </ListItem>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth\n                        style={{marginTop: 10}}\n                        onClick={bridge}\n                        disabled={!wallet.address || wallet.chain !== 56 || amount > wallet.balances.bnb.native}\n                    >BRIDGE</Button>\n                </Paper>\n                <Divider style={{marginTop: 10}}>SMART CHAIN</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    network=\"bnb\"\n                    name=\"BNB\"\n                    native\n                    price={wallet.prices.bnb?.native}\n                    wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                />\n\n                <Divider style={{marginTop: 10}}>FUSE NETWORK</Divider>\n                <TokenListItem\n                    contract_address=\"native\"\n                    wrap=\"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\"\n                    network=\"fuse\"\n                    name=\"FUSE\"\n                    native\n                    price={wallet.prices.fuse?.native}\n                />\n\n                {\n                    amtRecieved !== undefined && <>\n                        <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                        <Paper\n                            style={{\n                                backgroundColor: 'white',\n                                color: \"#000\",\n                                padding: 20,\n                                fontFamily: 'monospace'\n                            }}>\n                            <Grid container>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>Bridged</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(amtRecieved)} FUSE`}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusCryptoFormat(txCost)} BNB`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={6}/>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                        {`${CoineusUSDFormat(txCost * wallet.prices.bnb?.native?.inUSD)} USD`}\n                                    </Typography>\n                                </Grid>\n\n\n                                <Grid item xs={12} style={{marginTop: 20}} />\n\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                        <Link\n                                            style={{color: \"#000\", textDecorationColor: '#000'}}\n                                            href={`https://bscscan.com/tx/${txHash}`}\n                                            target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} style={{marginTop: 20}}>\n                                    <Typography style={{fontFamily: 'monospace'}}>FUSE Balance update pending...</Typography>\n                                </Grid>\n                            </Grid>\n\n                        </Paper>\n                    </>\n                }\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\nimport EasyBridge from \"./views/EasyBridge\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h5\">Coineus</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                            <Route\n                                path={`/easybridge`}\n                                exact={true}\n                                element={<EasyBridge />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>COINEUS.APP</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/staking'}>\n                            <ListItemText primary=\"Stake FUSE\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/easybridge'}>\n                            <ListItemText primary=\"Easy Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/sale'}>\n                            <ListItemText primary=\"Projects For Sale\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        {\n                            [\"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\", \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\"].indexOf(wallet.address) > -1 && <ListItem button component={RouterLink} to={'/rewards'}>\n                                <ListItemText primary=\"Rewards Lockers\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                            </ListItem>\n                        }\n\n\n                        <ListSubheader>CNS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://explorer.fuse.io/token/0xc2E299b47398963c618De5b05C6BdeCd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>FUSE NETWORK</ListSubheader>\n                        <ListItem button component={Link} href={'https://router.via.exchange/avalanche/AVAX/fuse/FUSE'} target=\"_blank\">\n                            <ListItemText primary=\"AVAX Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://app.voltage.finance/#/bridge'} target=\"_blank\">\n                            <ListItemText primary=\"ETH/BNB Bridge\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://get.fuse.cash/mrxn/46qbc3i4'} target=\"_blank\">\n                            <ListItemText primary=\"fuse.cash\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/coineuschat'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/CoineusCrypto'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}