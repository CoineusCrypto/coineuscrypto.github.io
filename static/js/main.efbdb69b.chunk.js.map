{"version":3,"sources":["theme.js","images/logo.svg","redux/slices/coineusSlice.js","views/HomePage.js","utils/promisify.js","Coineus.js","hooks/useWeb3Modal.js","redux/store.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","initialState","wallet","address","undefined","chain","type","coineusInfo","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","resetWallet","actions","HomePage","dispatch","useDispatch","useSelector","coineus","CoineusContractAddress","useState","pending","setPending","useEffect","window","provider","getUserInfo","web3","Web3","contract","eth","Contract","coineus_abi","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","makeBatchRequest","methods","balanceOf","getAccountDividendsInfo","withdrawableDividendOf","getTotalDividendsDistributed","then","resp","balance","info","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","Container","maxWidth","Toolbar","Grid","container","spacing","item","xs","Typography","Paper","style","variant","toLocaleString","Button","onClick","claim","send","from","once","tx","on","error","receipt","fullWidth","disabled","CircularProgress","size","verticalAlign","marginLeft","Coineus","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","display","description","package","WalletConnectProvider","options","bridge","network","rpc","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","changeWeb3Modal","subscribeProvider","getAccounts","accounts","length","parseInt","net","getId","chainId","clearWallet","acc","networkId","currentProvider","close","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","to","textDecoration","alt","src","logo","flexGrow","color","substr","connectWallet","marginTop","path","exact","element","configureStore","reducer","coineusReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.efbdb69b.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n        coineusInfo: undefined\n    }\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n        },\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n    updateWalletCoineusInfo,\n    resetWallet,\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {useDispatch, useSelector} from \"react-redux\";\nimport {Button, CircularProgress, Container, Grid, Paper, Toolbar, Typography} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {updateWalletCoineusInfo} from \"../redux/slices/coineusSlice\";\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet} = useSelector(state => state.coineus);\n    const CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\n\n    const [pending, setPending] = useState(false);\n\n    useEffect(() => {\n        if (wallet.address && window.provider) {\n            getUserInfo();\n        }\n    }, [wallet.address])\n\n    const getUserInfo = () => {\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            contract.methods.withdrawableDividendOf(wallet.address).call,\n            contract.methods.getTotalDividendsDistributed().call\n        ];\n\n        // const dataseed = new Web3('https://rpc.fuse.io/');\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                balance,\n                info,\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletCoineusInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            setPending(false);\n\n        })\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n        <Toolbar/>\n        <Grid container spacing={2}>\n\n            {\n                !wallet.address && <Grid item xs={12}>\n                    <Typography>Connect Wallet to see your details</Typography>\n                </Grid>\n            }\n            <Grid item xs={12}>\n                <Paper style={{padding: 20}}>\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12}>\n                            <Typography\n                                variant=\"h4\">{wallet.coineusInfo?.balance.toLocaleString() || '--'} CNS</Typography>\n                            <Typography variant=\"caption\">Coineus Balance</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography\n                                variant=\"h4\">{wallet.coineusInfo?.totalDividends.toLocaleString() || '--'} fUSD</Typography>\n                            <Typography variant=\"caption\">Total Dividends All-time</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography\n                                variant=\"h4\">{wallet.coineusInfo?.withdrawableDividends.toLocaleString() || '--'} fUSD</Typography>\n                            <Typography variant=\"caption\">Claimable Dividends</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button onClick={claim} variant='contained' fullWidth\n                                    disabled={!wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>Claim</Button>\n                        </Grid>\n                        {\n                            wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0 && <Grid item xs={12}>\n                                <Typography>{wallet.coineusInfo?.secondsUntilAutoClaimAvailable} Seconds until claim\n                                    available</Typography>\n                            </Grid>\n                        }\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                {\n                    pending && <><CircularProgress size={20} /><Typography variant='caption' style={{verticalAlign:'top',marginLeft: 10}}>Transaction Pending</Typography></>\n                }\n            </Grid>\n        </Grid>\n    </Container>);\n}","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {AppBar, Button, CssBaseline, Grid, ThemeProvider, Toolbar} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        changeWeb3Modal();\n    }, [])\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none'}}\n                        >\n                            <img alt='Coineus' src={logo} height={64} />\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {dispatch(resetWallet()); clearWallet();}}\n                                >0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n            </Router>\n        </ThemeProvider>\n    )\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}