{"version":3,"sources":["theme.js","images/logo.svg","utils/promisify.js","redux/slices/coineusSlice.js","images/logo192.png","images/fuse_logo.png","images/fusd_logo.png","images/avax_logo.png","images/usdc_logo.png","images/fook_logo.jpeg","images/bnb_logo.png","images/feg_logo.png","utils/format.js","views/HomePage.js","redux/store.js","utils/fuse_price.js","views/Staking.js","Coineus.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","coineusInfo","fookInfo","balance","avax_balance","fusd_balance","usdc_balance","fook_balance","bnb_balance","feg_balance","prices","avax","fuse","cns","fusd","usdc","fook","bnb","feg","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","USDCAVAXpair","FOOKAVAXpair","BNBBUSDpair","FEGBNBpair","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","updateWalletFOOKInfo","updateWalletBalance","updateWalletAVAXBalance","updateWalletFUSDBalance","updateWalletUSDCBalance","updateWalletFOOKBalance","updateWalletBNBBalance","updateWalletFEGBalance","resetWallet","updatePrices","price","actions","formatWei","value","round","decimals","BigNumber","div","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","useStyles","makeStyles","networkChip","borderRadius","marginLeft","position","top","width","display","backgroundSize","backgroundImage","fuse_logo","avax_logo","bnb_logo","HomePage","classes","dispatch","useDispatch","useSelector","coineus","CoineusContractAddress","useState","pending","setPending","stakeOpen","setStakeOpen","totalD","setTotalD","useEffect","getUserInfo","getCoineusInfo","interval","setInterval","clearInterval","Web3","eth","Contract","coineus_abi","methods","getTotalDividendsDistributed","then","resp","td","getBalance","contract","fusd_contract","balanceOf","getAccountDividendsInfo","info","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","web3AVAX","fook_contract","usdc_contract","callsAVAX","web3BSC","callsBSC","Container","maxWidth","Grid","container","spacing","style","marginTop","paddingBottom","item","xs","Paper","Typography","fontWeight","color","variant","Link","to","component","RouterLink","textDecoration","Button","fullWidth","target","ListItem","ListItemAvatar","Avatar","src","cns_logo","ListItemText","inUSD","toLocaleString","primaryTypographyProps","textAlign","backgroundColor","maximumFractionDigits","minimumFractionDigits","secondary","fontSize","secondaryTypographyProps","href","Dialog","open","anchorOrigin","vertical","horizontal","CircularProgress","size","verticalAlign","Divider","List","secondaryAction","IconButton","edge","onClick","PowerStake","amount","close","fusd_logo","className","clsx","window","provider","claim","send","from","once","tx","on","error","receipt","disabled","usdc_logo","fook_logo","paddingTop","feg_logo","ListSubheader","marginBottom","props","DialogContent","DialogActions","consensus_abi","delegate","catch","configureStore","reducer","coineusReducer","getPairPrices","store","getState","fusd_fuse","unipair_abi","cns_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","token0","token1","usdc_avax_reserves","fook_avax_reserves","avax_price","inAVAX","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","coineusValidatorAddress","consensusAddress","consensusContract","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setAmount","setData","connectedContract","setConnectedContract","setAction","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","push","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","length","fuse_balance","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","handleError","message","LinearProgress","Math","floor","isNaN","disablePadding","disableGutters","margin","Tabs","onChange","ev","val","Tab","id","label","Box","FormControl","TextField","autoComplete","placeholder","InputProps","endAdornment","InputAdornment","e","toString","withdraw","Snackbar","autoHideDuration","onClose","TransitionComponent","sx","bottom","Alert","elevation","icon","Coineus","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","network","rpc","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","chainId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","logo","flexGrow","substr","connectWallet","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0b0c3ed.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#fbca00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n        coineusInfo: undefined,\n        fookInfo: undefined,\n        balance: undefined,\n        avax_balance: undefined,\n        fusd_balance: undefined,\n        usdc_balance: undefined,\n        fook_balance: undefined,\n        bnb_balance: undefined,\n        feg_balance: undefined\n    },\n    prices: {\n        avax: undefined,\n        fuse: undefined,\n        cns: undefined,\n        fusd: undefined,\n        usdc: undefined,\n        fook: undefined,\n        bnb: undefined,\n        feg: undefined,\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14'\n    }\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        updateWalletFOOKInfo(state, action) {\n            state.wallet.fookInfo = action.payload\n        },\n\n        updateWalletBalance(state, action) {\n            state.wallet.balance = action.payload\n        },\n\n        updateWalletAVAXBalance(state, action) {\n            state.wallet.avax_balance = action.payload\n        },\n\n        updateWalletFUSDBalance(state, action) {\n            state.wallet.fusd_balance = action.payload\n        },\n\n        updateWalletUSDCBalance(state, action) {\n            state.wallet.usdc_balance = action.payload\n        },\n\n        updateWalletFOOKBalance(state, action) {\n            state.wallet.fook_balance = action.payload\n        },\n\n        updateWalletBNBBalance(state, action) {\n            state.wallet.bnb_balance = action.payload\n        },\n\n        updateWalletFEGBalance(state, action) {\n            state.wallet.feg_balance = action.payload\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n        },\n\n        updatePrices(state, action) {\n            state.prices[action.payload.name] = action.payload.price;\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletBalance,\n    updateWalletAVAXBalance,\n    updateWalletFUSDBalance,\n    updateWalletUSDCBalance,\n    updateWalletFOOKBalance,\n    updateWalletBNBBalance,\n    updateWalletFEGBalance,\n    resetWallet,\n    updatePrices\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/logo192.bf37cdbc.png\";","export default __webpack_public_path__ + \"static/media/fuse_logo.f2df0430.png\";","export default __webpack_public_path__ + \"static/media/fusd_logo.a63edb36.png\";","export default __webpack_public_path__ + \"static/media/avax_logo.30dfa545.png\";","export default __webpack_public_path__ + \"static/media/usdc_logo.b5121d0d.png\";","export default __webpack_public_path__ + \"static/media/fook_logo.3822b487.jpeg\";","export default __webpack_public_path__ + \"static/media/bnb_logo.0bb49761.png\";","export default __webpack_public_path__ + \"static/media/feg_logo.ec53c63e.png\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","import {useDispatch, useSelector} from \"react-redux\";\nimport clsx from \"clsx\";\nimport {\n    Avatar,\n    Button,\n    CircularProgress,\n    Container, Dialog,\n    Grid, List, ListItem, ListItemAvatar, ListItemText, ListSubheader,\n    Paper, Link,\n    Typography, Divider, ListItemButton, IconButton, DialogContent, DialogActions\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {\n    updateWalletAVAXBalance,\n    updateWalletBalance, updateWalletBNBBalance,\n    updateWalletCoineusInfo, updateWalletFEGBalance, updateWalletFOOKBalance, updateWalletFOOKInfo,\n    updateWalletFUSDBalance, updateWalletUSDCBalance\n} from \"../redux/slices/coineusSlice\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\nimport BoltIcon from '@mui/icons-material/Bolt';\n\nimport cns_logo from \"../images/logo192.png\";\nimport fuse_logo from \"../images/fuse_logo.png\";\nimport fusd_logo from \"../images/fusd_logo.png\";\nimport avax_logo from \"../images/avax_logo.png\";\nimport usdc_logo from \"../images/usdc_logo.png\";\nimport fook_logo from \"../images/fook_logo.jpeg\";\nimport bnb_logo from \"../images/bnb_logo.png\";\nimport feg_logo from \"../images/feg_logo.png\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport web3 from \"web3\";\nimport {toWei} from \"../utils/format\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('${fuse_logo}')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('${avax_logo}')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('${bnb_logo}')`,\n        }\n    }\n}));\n\nexport default function HomePage() {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n    const CoineusContractAddress = '0xc2E299b47398963c618De5b05C6BdeCd4cc64022';\n\n    const [pending, setPending] = useState(false);\n\n    const [stakeOpen, setStakeOpen] = useState(false)\n\n    const [totalD, setTotalD] = useState(0);\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address]);\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3('https://rpc.fuse.io');\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n        })\n\n    }\n\n    const getUserInfo = () => {\n\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletBalance(resp / (10 ** 18)))\n        })\n\n        const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n        const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249be57637d8b013ad64785404b24aebae9b098b');\n\n        const calls = [\n            contract.methods.balanceOf(wallet.address).call,\n            contract.methods.getAccountDividendsInfo(wallet.address).call,\n            fusd_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                balance,\n                info,\n                fusd_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletCoineusInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFUSDBalance(fusd_balance / (10 ** 18)));\n\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletAVAXBalance(resp / (10 ** 18)))\n        })\n\n        const fook_contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const usdc_contract = new web3.eth.Contract(coineus_abi, '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(wallet.address).call,\n            fook_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance\n            ] = resp;\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFOOKInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateWalletFOOKBalance(balance));\n            dispatch(updateWalletUSDCBalance(usdc_balance / (10 ** 6)));\n\n        })\n\n        //BNB\n        const web3BSC = new Web3('https://bsc-dataseed1.binance.org/');\n        web3BSC.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateWalletBNBBalance(resp / (10 ** 18)))\n        })\n\n        const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n        const callsBSC = [\n            feg_contract.methods.balanceOf(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3BSC, callsBSC).then(resp => {\n            let [\n                balance,\n            ] = resp;\n\n            dispatch(updateWalletFEGBalance(balance / (10 ** 9)));\n\n        })\n    }\n\n    const claim = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, CoineusContractAddress);\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    const claimFook = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n                        <Typography fontWeight={700} color=\"primary\" variant=\"body2\">Stake FUSE. Earn FUSE. Buy CNS.\n                            Repeat.</Typography>\n                        <Link to={\"/staking\"} component={RouterLink} style={{textDecoration: 'none'}}>\n                            <Button variant=\"contained\" fullWidth style={{marginTop: 20}}\n                                    target=\"_blank\">Stake FUSE</Button>\n                        </Link>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={cns_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.cns?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={fuse_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.fuse?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={avax_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.avax?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar src={bnb_logo}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`$${prices.bnb?.inUSD.toLocaleString()}`}\n                                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} fUSD` || '--'}\n                                secondary=\"Total Rewards Distributed All-time\"\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{textAlign: 'right', color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={4}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://app.voltage.finance/#/swap?inputCurrency=0xc2e299b47398963c618de5b05c6bdecd4cc64022\"\n                                    target=\"_blank\">Swap</Button>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Button variant=\"contained\" fullWidth\n                                    href=\"https://www.dextools.io/app/fuse/pair-explorer/0x0f2e60b799f2237633754f8eec7970c125e15d75\"\n                                    target=\"_blank\">Chart</Button>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Button variant=\"contained\" fullWidth href=\"https://app.voltage.finance/#/bridge\"\n                                    target=\"_blank\">Bridge</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Dialog open={pending} anchorOrigin={{vertical: 'center', horizontal: 'center'}}>\n                    <Paper style={{padding: 20}}>\n                        <CircularProgress size={20}/>\n                        <Typography variant='caption' style={{\n                            verticalAlign: 'top',\n                            marginLeft: 10\n                        }}>Transaction Pending</Typography>\n                    </Paper>\n                </Dialog>\n\n                <Grid item xs={12}>\n\n                    <Divider>FUSE</Divider>\n\n                    {/*FUSE*/}\n                    <List>\n                        <Paper>\n                            <ListItem\n                                secondaryAction={\n                                    <IconButton edge=\"end\" aria-label=\"stake\">\n                                        <BoltIcon color=\"primary\" onClick={() => setStakeOpen(true)}/>\n                                    </IconButton>\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar src={fuse_logo}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='Fuse'\n                                    secondary={`$${prices.fuse?.inUSD.toLocaleString() || '--'}`}\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.balance?.toLocaleString() || '--'}\n                                    secondary={`$${wallet.balance ? (prices.fuse?.inUSD * wallet.balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </List>\n                    <PowerStake open={stakeOpen} amount={wallet.balance} close={() => setStakeOpen(false)}/>\n\n                    {/*fUSD*/}\n                    <List>\n                        <Paper>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar src={fusd_logo}/>\n                                    <span className={clsx(classes.networkChip, 'fuse')}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='fUSD'\n                                    secondary=\"$1.00\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.fusd_balance?.toLocaleString() || '--'}\n                                    secondary={`$${wallet.fusd_balance ? (1 * wallet.fusd_balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </List>\n\n                    {/*CNS*/}\n                    <List>\n                        <Paper>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar src={cns_logo}/>\n                                    <span className={clsx(classes.networkChip, 'fuse')}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='CNS'\n                                    secondary={`$${prices.cns?.inUSD.toLocaleString() || '--'}`}\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.coineusInfo?.balance.toLocaleString() || '--'}\n                                    secondary={`$${wallet.coineusInfo?.balance ? (prices.cns?.inUSD * wallet.coineusInfo?.balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                            <ListItem style={{color: '#fbca00'}}>\n                                <ListItemText\n                                    primary='Rewards All-time'\n                                    secondary='Pending'\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${wallet.coineusInfo?.totalDividends.toLocaleString() || '--'} fUSD`}\n                                    secondary={`${wallet.coineusInfo?.withdrawableDividends.toLocaleString() || '--'} fUSD`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claim} variant='contained' fullWidth\n                                        disabled={wallet.chain !== 122 || wallet.coineusInfo?.withdrawableDividends == 0 || !wallet.address || wallet.coineusInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 122 ? 'Change to FUSE Chain' : 'Claim'}</Button>\n                            </ListItem>\n                        </Paper>\n                    </List>\n\n                    <Divider>AVAX</Divider>\n\n                    {/*AVAX*/}\n                    <List>\n                        <Paper>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar src={avax_logo}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='AVAX'\n                                    secondary={`$${prices.avax?.inUSD.toLocaleString() || '--'}`}\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.avax_balance?.toLocaleString() || '--'}\n                                    secondary={`$${wallet.avax_balance ? (prices.avax?.inUSD * wallet.avax_balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </List>\n\n                    {/*USDC*/}\n                    <List>\n                        <Paper>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar src={usdc_logo}/>\n                                    <span className={clsx(classes.networkChip, 'avax')}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='USDC'\n                                    secondary=\"$1.00\"\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.usdc_balance?.toLocaleString() || '--'}\n                                    secondary={`$${wallet.usdc_balance ? (1 * wallet.usdc_balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </List>\n\n                    {/*FOOK*/}\n                    <List>\n                        <Paper>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar src={fook_logo}/>\n                                    <span className={clsx(classes.networkChip, 'avax')}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='FOOK'\n                                    secondary={`$${prices.fook?.inUSD.toLocaleString() || '--'}`}\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.fook_balance?.toLocaleString() || '--'}\n                                    secondary={`$${wallet.fook_balance ? (prices.fook?.inUSD * wallet.fook_balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                            <ListItem style={{color: '#fbca00', paddingTop: 0, paddingBottom: 0}}>\n                                <ListItemText\n                                    primary='Rewards All-time'\n                                    secondary='Pending'\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={`${wallet.fookInfo?.totalDividends.toLocaleString() || '--'} USDC`}\n                                    secondary={`${wallet.fookInfo?.withdrawableDividends.toLocaleString() || '--'} USDC`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimFook} variant='contained' fullWidth\n                                        disabled={wallet.chain !== 43114 || wallet.fookInfo?.withdrawableDividends == 0 || !wallet.address || wallet.fookInfo?.secondsUntilAutoClaimAvailable > 0}>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : 'Claim'}</Button>\n                            </ListItem>\n                        </Paper>\n                    </List>\n\n                    <Divider>BNB</Divider>\n\n                    {/*BNB*/}\n                    <List>\n                        <Paper>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar src={bnb_logo}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='BNB'\n                                    secondary={`$${prices.bnb?.inUSD.toLocaleString() || '--'}`}\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.bnb_balance?.toLocaleString() || '--'}\n                                    secondary={`$${wallet.bnb_balance ? (prices.bnb?.inUSD * wallet.bnb_balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </List>\n\n                    {/*FEG*/}\n                    <List>\n                        <Paper>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar src={feg_logo}/>\n                                    <span className={clsx(classes.networkChip, 'bnb')}/>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary='FEG'\n                                    secondary={`$${prices.feg?.inUSD.toLocaleString('en-US', {minimumFractionDigits: 12}) || '--'}`}\n                                    primaryTypographyProps={{fontWeight: 700}}\n                                />\n                                <ListItemText\n                                    primary={wallet.feg_balance?.toLocaleString() || '--'}\n                                    secondary={`$${wallet.feg_balance ? (prices.feg?.inUSD * wallet.feg_balance).toLocaleString() : '--'}`}\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </List>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#fbca00'}}>\n                        <List>\n                            <ListSubheader style={{color: '#000', backgroundColor: '#fbca00'}}>\n                                <Typography variant=\"h5\" fontWeight={700}>Get rewarded with Coineus</Typography>\n                                <Typography style={{marginBottom: 20}}>Buy and hold Coineus (CNS) and get your share of\n                                    5% of all volume on trades. In addition, enjoy 0% fees when transferring to friends\n                                    and family, or paying someone in CNS.</Typography>\n                            </ListSubheader>\n                            <ListSubheader style={{color: '#000', backgroundColor: '#fbca00'}}>\n                                <Typography variant=\"h5\" fontWeight={700}>Fees on Buys/Sells</Typography>\n                            </ListSubheader>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar style={{color: '#fbca00', backgroundColor: '#000'}}><Typography\n                                        fontWeight={700}>5%</Typography></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Rewards in fUSD\"/>\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar style={{color: '#fbca00', backgroundColor: '#000'}}><Typography\n                                        fontWeight={700}>2%</Typography></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Back to Liquidity\"/>\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar style={{color: '#fbca00', backgroundColor: '#000'}}><Typography\n                                        fontWeight={700}>2%</Typography></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Assurance Fund\"/>\n                            </ListItem>\n                            <ListSubheader style={{color: '#000', backgroundColor: '#fbca00'}}>\n                                <Typography variant=\"h5\" fontWeight={700}>Fees on Transfers</Typography>\n                            </ListSubheader>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar style={{color: '#fbca00', backgroundColor: '#000'}}><Typography\n                                        fontWeight={700}>0%</Typography></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Wallet to Wallet\"/>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\n\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n\nfunction PowerStake(props) {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const {open, close, amount} = props;\n    const [pending, setPending] = useState(false);\n\n    const delegate = () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        const connectedContract = new web3.eth.Contract(consensus_abi, consensusAddress)\n\n        connectedContract.methods\n            .delegate(coineusValidatorAddress)\n            .send({\n                from: wallet.address,\n                value: toWei(amount - .1)\n            })\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n                close();\n            })\n            .catch(() => {\n                setPending(false);\n            });\n    }\n\n    return <Dialog open={open} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n            <Typography>Stake <b>{(amount - .1).toLocaleString('en-US', {maximumFractionDigits: 8})}</b> FUSE</Typography>\n        </DialogContent>\n        <DialogActions>\n            {\n                pending ? <CircularProgress size={24}/> : <>\n                    <Button onClick={close}>cancel</Button>\n                    <Button onClick={delegate} variant=\"contained\">Stake</Button>\n                </>\n            }\n        </DialogActions>\n    </Dialog>\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer\n    }\n})\n","//fUSD 0x249be57637d8b013ad64785404b24aebae9b098b\n//fUSD/FUSE pair 0x933a10d094592eb3f2a26bcb366472eba8868a66\nimport store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices} = _store.coineus;\n\n    //FUSE\n    const web3 = new Web3('https://rpc.fuse.io/');\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, prices.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, prices.CNSFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves\n            ] = resp\n\n            store.dispatch(updatePrices({\n                name: 'fuse',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fusd',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'cns',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n        });\n\n\n    //AVAX\n    const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fook_avax.methods.token0().call,\n        fook_avax.methods.token1().call,\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                token0,\n                token1\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            store.dispatch(updatePrices({\n                name: 'avax',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'usdc',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fook',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n        });\n\n\n    //BSC\n    const web3BSC = new Web3('https://bsc-dataseed1.binance.org/');\n    const bnb_busd = new web3AVAX.eth.Contract(unipair_abi, prices.BNBBUSDpair);\n    const feg_bnb = new web3AVAX.eth.Contract(unipair_abi, prices.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call,\n        feg_bnb.methods.token0().call,\n        feg_bnb.methods.token1().call,\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves,\n                token0,\n                token1\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            store.dispatch(updatePrices({\n                name: 'bnb',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'feg',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n        });\n}","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button, CircularProgress,\n    Container, Dialog,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {updateWalletBalance} from \"../redux/slices/coineusSlice\";\nimport {toWei, formatWei, formatWeiToNumber} from '../utils/format';\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n\n            web3.eth.getBalance(wallet.address).then(resp => {\n                dispatch(updateWalletBalance(resp / (10 ** 18)));\n            })\n        } else {\n            dispatch(updateWalletBalance(0));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n        })\n\n    }\n\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const delegate = () => {\n        try {\n            connectedContract.methods\n                .delegate(coineusValidatorAddress)\n                .send({\n                    from: wallet.address,\n                    value: toWei(amount)\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = () => {\n        try {\n            connectedContract.methods\n                .withdraw(coineusValidatorAddress, toWei(amount))\n                .send({\n                    from: wallet.address\n                })\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Typography variant=\"h4\">{data.amount_delegated?.toLocaleString()}</Typography>\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated/5000000)*100}  style={{marginTop:10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\" style={{display:'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} / 5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{data.staked_amount ? (data.staked_amount / (10 ** 18)).toLocaleString() : '--'}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin:0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                            <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                        </Tabs>\n                        {\n                            action === \"stake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"FUSE Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(wallet.balance || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > 5000000) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balance - .1)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                                <List style={{marginTop: 20}}>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Block\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Year\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Box>\n                        }\n\n                        {\n                            action === \"unstake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Staked FUSE\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(data.staked_amount / (10 ** 18))\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                        onClick={withdraw}>Unstake</Button>\n                            </Box>\n                        }\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <Dialog open={pending} anchorOrigin={{vertical: 'center', horizontal: 'center'}}>\n                <Paper style={{padding: 20}}>\n                    <CircularProgress size={20}/>\n                    <Typography variant='caption' style={{\n                        verticalAlign: 'top',\n                        marginLeft: 10\n                    }}>Transaction Pending</Typography>\n                </Paper>\n            </Dialog>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {AppBar, Avatar, Button, CssBaseline, Dialog, DialogContent, Grid, ThemeProvider, Toolbar} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\nimport Staking from \"./views/Staking\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if(window.ethereum){\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return ()=> clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none'}}\n                        >\n                            <Avatar src={logo} height={40} />\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {clearWallet();}}\n                                >0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n            </Router>\n        </ThemeProvider>\n    )\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}